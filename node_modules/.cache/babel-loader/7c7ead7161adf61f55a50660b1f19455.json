{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\AddTextAdComponent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, MenuItem, InputLabel, makeStyles, Select, Grid, Card, CardContent, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AdTextField from '../AdTextField';\nimport { StyleSharp } from '@material-ui/icons';\nimport api from '../../api/api';\nimport { getCredentials } from '../../services/authService';\nimport SnackBar from '../SnackBar';\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  },\n  container: {\n    display: 'flex',\n    flex: 1\n  },\n  form: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column'\n  },\n  heading: {\n    fontSize: 14,\n    fontWeight: 600\n  },\n  buttonZoneContainer: {\n    marginTop: 18\n  }\n}));\n\nconst AddTextAdComponent = () => {\n  _s();\n\n  const styleClasses = useStyles();\n  const [adZone, setAdZone] = useState('adZone1');\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMesssage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const {\n    selected\n  } = useSelector(state => state.selectedStudents);\n\n  const saveAd = async (ad, students) => {\n    try {\n      setLoading(true);\n      const res = await api.post(\"/admin/createTextAd\", {\n        ad: ad,\n        students: students\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      handleReset();\n      setLoading(false);\n      setMesssage('Ad succesfully created');\n      setSeverity('success');\n      setOpen(true);\n      console.log(\"res em\", res);\n    } catch (err) {\n      setLoading(false);\n      setMesssage('Ad creation failed');\n      setSeverity('error');\n      setOpen(true);\n      console.log(err);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      adName: '',\n      companyName: '',\n      skills: '',\n      designation: '',\n      phoneNo: '',\n      experience: '',\n      email: '',\n      domain: '',\n      adZone: 'adZone1'\n    },\n    validationSchema: Yup.object({\n      adName: Yup.string().required('This field is required'),\n      companyName: Yup.string().required('This field is required'),\n      skills: Yup.string().required('This field is required'),\n      designation: Yup.string().required('This field is required'),\n      phoneNo: Yup.string().required('This field is required'),\n      experience: Yup.string().required('This field is required'),\n      email: Yup.string().required('This field is required'),\n      domain: Yup.string().required('This field is required'),\n      adZone: Yup.string().required('This field is required')\n    }),\n    onSubmit: values => {\n      const formValue = { ...values,\n        adZone\n      };\n      saveAd(formValue, selected);\n    }\n  });\n  const formRef = useRef(null);\n\n  const handleReset = () => {\n    console.log(\"ENTERED RESET\");\n    formik.resetForm();\n    formRef.current.reset();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styleClasses.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(Backdrop, {\n    className: styleClasses.backdrop,\n    open: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), open && /*#__PURE__*/React.createElement(SnackBar, {\n    open: open,\n    message: message,\n    severity: severity,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    ref: formRef,\n    noValidate: true,\n    className: styleClasses.form,\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: styleClasses.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, \"Upload Text Ad\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.adName && formik.touched.adName,\n    helperText: !!formik.errors.adName && formik.touched.adName ? formik.errors.adName : '',\n    onChange: formik.handleChange,\n    value: formik.values.adName,\n    name: \"adName\",\n    label: \"Ad Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.companyName && formik.touched.companyName,\n    helperText: !!formik.errors.companyName && formik.touched.companyName ? formik.errors.companyName : '',\n    onChange: formik.handleChange,\n    value: formik.values.companyName,\n    name: \"companyName\",\n    label: \"Company Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.skills && formik.touched.skills,\n    helperText: !!formik.errors.skills && formik.touched.skills ? formik.errors.skills : '',\n    onChange: formik.handleChange,\n    value: formik.values.skills,\n    name: \"skills\",\n    label: \"Skills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.designation && formik.touched.designation,\n    helperText: !!formik.errors.designation && formik.touched.designation ? formik.errors.designation : '',\n    onChange: formik.handleChange,\n    value: formik.values.designation,\n    name: \"designation\",\n    label: \"Designation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.phoneNo && formik.touched.phoneNo,\n    helperText: !!formik.errors.phoneNo && formik.touched.phoneNo ? formik.errors.phoneNo : '',\n    onChange: formik.handleChange,\n    value: formik.values.phoneNo,\n    name: \"phoneNo\",\n    label: \"Phone Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.experience && formik.touched.experience,\n    helperText: !!formik.errors.experience && formik.touched.experience ? formik.errors.experience : '',\n    onChange: formik.handleChange,\n    value: formik.values.experience,\n    name: \"experience\",\n    label: \"Experience\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.email && formik.touched.email,\n    helperText: !!formik.errors.email && formik.touched.email ? formik.errors.email : '',\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    name: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.domain && formik.touched.domain,\n    helperText: !!formik.errors.domain && formik.touched.domain ? formik.errors.domain : '',\n    onChange: formik.handleChange,\n    value: formik.values.domain,\n    name: \"domain\",\n    label: \"Domain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: styleClasses.buttonZoneContainer,\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"adZone\",\n    variant: \"outlined\",\n    size: \"small\",\n    value: adZone,\n    onChange: event => setAdZone(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"adZone1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, \"Ad Zone 1\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"adZone2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, \"Ad Zone 2\")))))));\n};\n\n_s(AddTextAdComponent, \"D1uXwdv7isQVk5eMxAqoMsey1l4=\", false, function () {\n  return [useStyles, useSelector, useFormik];\n});\n\n_c = AddTextAdComponent;\nexport default AddTextAdComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTextAdComponent\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/AddTextAdComponent/index.js"],"names":["React","useState","useRef","useFormik","Yup","TextField","Button","MenuItem","InputLabel","makeStyles","Select","Grid","Card","CardContent","Typography","useDispatch","useSelector","Backdrop","CircularProgress","AdTextField","StyleSharp","api","getCredentials","SnackBar","useStyles","theme","backdrop","zIndex","drawer","color","container","display","flex","form","flexDirection","heading","fontSize","fontWeight","buttonZoneContainer","marginTop","AddTextAdComponent","styleClasses","adZone","setAdZone","loading","setLoading","open","setOpen","message","setMesssage","severity","setSeverity","selected","state","selectedStudents","saveAd","ad","students","res","post","headers","Authorization","timeout","handleReset","console","log","err","formik","initialValues","adName","companyName","skills","designation","phoneNo","experience","email","domain","validationSchema","object","string","required","onSubmit","values","formValue","formRef","resetForm","current","reset","handleSubmit","errors","touched","handleChange","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n    TextField,\r\n    Button, \r\n    MenuItem,\r\n    InputLabel,\r\n    makeStyles,\r\n    Select,\r\n    Grid, Card, CardContent, Typography\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AdTextField from '../AdTextField';\r\nimport { StyleSharp } from '@material-ui/icons';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\nimport SnackBar from '../SnackBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    heading: {\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    },\r\n    buttonZoneContainer: {\r\n        marginTop: 18\r\n    }\r\n}));\r\n\r\nconst AddTextAdComponent = () => {\r\n\r\n    const styleClasses = useStyles();\r\n    const [adZone, setAdZone] = useState('adZone1');\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState(''); \r\n\r\n    const { selected } = useSelector((state) => state.selectedStudents);\r\n\r\n    const saveAd = async (ad, students) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/createTextAd\",\r\n                { ad: ad, students: students },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            handleReset();\r\n            setLoading(false);\r\n            setMesssage('Ad succesfully created');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            console.log(\"res em\", res);\r\n        } catch (err) {\r\n            setLoading(false);\r\n            setMesssage('Ad creation failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            adName: '',\r\n            companyName: '',\r\n            skills: '',\r\n            designation: '',\r\n            phoneNo: '',\r\n            experience: '',\r\n            email: '',\r\n            domain: '',\r\n            adZone: 'adZone1'\r\n        },\r\n        validationSchema: Yup.object({\r\n            adName: Yup.string().required('This field is required'),\r\n            companyName: Yup.string().required('This field is required'),\r\n            skills: Yup.string().required('This field is required'),\r\n            designation: Yup.string().required('This field is required'),\r\n            phoneNo: Yup.string().required('This field is required'),\r\n            experience: Yup.string().required('This field is required'),\r\n            email: Yup.string().required('This field is required'),\r\n            domain: Yup.string().required('This field is required'),\r\n            adZone: Yup.string().required('This field is required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            const formValue = { ...values, adZone };\r\n            saveAd(formValue, selected);\r\n        }\r\n    });\r\n\r\n    const formRef = useRef(null);\r\n    \r\n    const handleReset = () => {\r\n        console.log(\"ENTERED RESET\"); \r\n        formik.resetForm();\r\n        formRef.current.reset();\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styleClasses.container}>\r\n            {loading && (\r\n                <Backdrop className={styleClasses.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen}/>\r\n            )}\r\n            <form ref={formRef} noValidate className={styleClasses.form} onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            justify=\"center\"\r\n                        >\r\n                            <Typography variant=\"h6\" className={styleClasses.heading}>\r\n                                Upload Text Ad\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"flex-end\"\r\n                        >\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                size='small'\r\n                                type='submit'\r\n                            >\r\n                                Upload\r\n                             </Button>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.adName && formik.touched.adName}\r\n                                helperText={\r\n                                    !!formik.errors.adName && formik.touched.adName\r\n                                        ? formik.errors.adName\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.adName}\r\n                                name='adName'\r\n                                label='Ad Name'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.companyName && formik.touched.companyName}\r\n                                helperText={\r\n                                    !!formik.errors.companyName && formik.touched.companyName\r\n                                        ? formik.errors.companyName\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.companyName}\r\n                                name='companyName'\r\n                                label='Company Name'\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.skills && formik.touched.skills}\r\n                                helperText={\r\n                                    !!formik.errors.skills && formik.touched.skills\r\n                                        ? formik.errors.skills\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.skills}\r\n                                name='skills'\r\n                                label='Skills'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.designation && formik.touched.designation}\r\n                                helperText={\r\n                                    !!formik.errors.designation && formik.touched.designation\r\n                                        ? formik.errors.designation\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.designation}\r\n                                name='designation'\r\n                                label='Designation'\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.phoneNo && formik.touched.phoneNo}\r\n                                helperText={\r\n                                    !!formik.errors.phoneNo && formik.touched.phoneNo\r\n                                        ? formik.errors.phoneNo\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.phoneNo}\r\n                                name='phoneNo'\r\n                                label='Phone Number'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.experience && formik.touched.experience}\r\n                                helperText={\r\n                                    !!formik.errors.experience && formik.touched.experience\r\n                                        ? formik.errors.experience\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.experience}\r\n                                name='experience'\r\n                                label='Experience'\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.email && formik.touched.email}\r\n                                helperText={\r\n                                    !!formik.errors.email && formik.touched.email\r\n                                        ? formik.errors.email\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email}\r\n                                name='email'\r\n                                label='Email'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.domain && formik.touched.domain}\r\n                                helperText={\r\n                                    !!formik.errors.domain && formik.touched.domain\r\n                                        ? formik.errors.domain\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.domain}\r\n                                name='domain'\r\n                                label='Domain'\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            className={styleClasses.buttonZoneContainer}\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <Select\r\n                                labelId='demo-simple-select-label'\r\n                                id='adZone'\r\n                                variant='outlined'\r\n                                size=\"small\"\r\n                                value={adZone}\r\n                                onChange={(event) => setAdZone(event.target.value)}\r\n                            >\r\n                                <MenuItem value='adZone1'>Ad Zone 1</MenuItem>\r\n                                <MenuItem value='adZone2'>Ad Zone 2</MenuItem>\r\n                            </Select>\r\n\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTextAdComponent;\r\n"]},"metadata":{},"sourceType":"module"}