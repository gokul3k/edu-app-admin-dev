{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\InterviewDetailComponent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, makeStyles, Grid, Button } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport api from '../../api/api';\nimport { getCredentials } from '../../services/authService';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flex: 1,\n    width: '100%',\n    marginTop: 24\n  },\n  card: {\n    width: '100%'\n  },\n  heading: {\n    fontWeight: 'bold',\n    color: \"#4169E1\"\n  },\n  value: {\n    fontSize: 14,\n    color: \"#FFA500\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nexport default function InterviewDetailComponent({\n  interviewId,\n  history\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [interview, setInterview] = useState({});\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getInterviewDetail(interviewId);\n  }, []);\n\n  const handleStatusClick = async interviewId => {\n    try {\n      setLoading(true);\n      const res = await api.post(\"/admin/toggleInterviewStatus\", {\n        interviewId\n      }, {\n        headers: {\n          Authorization: `Bearer ${getCredentials()}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }, {\n        timeout: 1000\n      });\n      getInterviewDetail(interviewId);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const getInterviewDetail = async interviewId => {\n    try {\n      setLoading(true);\n      const res = await api.post(\"/admin/getInterviewDetails\", {\n        interviewId\n      }, {\n        headers: {\n          Authorization: `Bearer ${getCredentials()}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }, {\n        timeout: 1000\n      });\n      setInterview(res.data.response);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Backdrop, {\n      className: classes.backdrop,\n      open: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginLeft: 8,\n      marginRight: 8\n    },\n    onClick: () => history.push('app/interviews/:id/assign'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"Assign students\"), interview.Status === 'pending' ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: () => {\n      handleStatusClick(interview.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \" Mark as completed\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: () => {\n      handleStatusClick(interview.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, \" Completed\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \"ID  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 66\n    }\n  }, interview.id)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, \"Interview Name  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 78\n    }\n  }, interview.InterviewName)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"Interview By  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 76\n    }\n  }, interview.InterviewBy))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, \"Date  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 68\n    }\n  }, interview.Date)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"Total Candidates  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 80\n    }\n  }, interview.TotalCandidates)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"Status  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 70\n    }\n  }, interview.Status)))))));\n}\n\n_s(InterviewDetailComponent, \"scpLcFLWbF0FfsCeURRniMYye68=\", false, function () {\n  return [useStyles];\n});\n\n_c = InterviewDetailComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterviewDetailComponent\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/InterviewDetailComponent/index.js"],"names":["React","useState","useEffect","Card","CardContent","makeStyles","Grid","Button","Backdrop","CircularProgress","api","getCredentials","useStyles","theme","container","display","flex","width","marginTop","card","heading","fontWeight","color","value","fontSize","backdrop","zIndex","drawer","InterviewDetailComponent","interviewId","history","classes","interview","setInterview","loading","setLoading","getInterviewDetail","handleStatusClick","res","post","headers","Authorization","timeout","error","console","log","data","response","marginLeft","marginRight","push","Status","id","InterviewName","InterviewBy","Date","TotalCandidates"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, makeStyles, Grid, Button } from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        marginTop: 24\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n        color: \"#4169E1\"\r\n    },\r\n    value: {\r\n        fontSize: 14,\r\n        color: \"#FFA500\"\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function InterviewDetailComponent({ interviewId,history }) {\r\n\r\n    const classes = useStyles();\r\n    const [interview, setInterview] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getInterviewDetail(interviewId);\r\n    }, []);\r\n\r\n    const handleStatusClick = async (interviewId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/toggleInterviewStatus\",\r\n                { interviewId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n            getInterviewDetail(interviewId);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const getInterviewDetail = async (interviewId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/getInterviewDetails\",\r\n                { interviewId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n\r\n            );\r\n\r\n            setInterview(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    if (loading) {\r\n        return (\r\n            <Backdrop className={classes.backdrop} open={loading} >\r\n                <CircularProgress color=\"primary\" />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes.container}>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"flex-end\"\r\n                    >\r\n                        <Button variant=\"contained\" color=\"primary\" style={{marginLeft:8,marginRight:8}} onClick={()=>history.push('app/interviews/:id/assign')}>Assign students</Button>\r\n                        {\r\n                            (interview.Status === 'pending') ?\r\n                                <Button\r\n                                    variant='outlined'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    onClick={() => { handleStatusClick(interview.id) }}\r\n                                > Mark as completed</Button>\r\n                                :\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    onClick={() => { handleStatusClick(interview.id) }}\r\n                                > Completed</Button>\r\n                        }\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-around\"\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            direction=\"column\"\r\n                        >\r\n                            <p className={classes.heading}>ID  : <span className={classes.value}>{interview.id}</span></p>\r\n                            <p className={classes.heading}>Interview Name  : <span className={classes.value}>{interview.InterviewName}</span></p>\r\n                            <p className={classes.heading}>Interview By  : <span className={classes.value}>{interview.InterviewBy}</span></p>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            direction=\"column\"\r\n                        >\r\n                            <p className={classes.heading}>Date  : <span className={classes.value}>{interview.Date}</span></p>\r\n                            <p className={classes.heading}>Total Candidates  : <span className={classes.value}>{interview.TotalCandidates}</span></p>\r\n                            <p className={classes.heading}>Status  : <span className={classes.value}>{interview.Status}</span></p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}