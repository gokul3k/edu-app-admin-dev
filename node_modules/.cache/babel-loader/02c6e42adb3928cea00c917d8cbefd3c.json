{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\tables\\\\AdTable\\\\AssignStudents.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Button, makeStyles, Dialog, DialogTitle, DialogContent, DialogActions, Slide } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport api from \"api/api\";\nimport { getCredentials } from \"services/authService\";\nimport StudentTable from \"components/tables/StudentTable\";\nimport SnackBar from \"components/SnackBar\";\nimport { resetSelectedStudents } from 'actions/studentActions';\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }));\n});\n_c2 = Transition;\n\nconst AssignStudents = props => {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMesssage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const students = useSelector(state => state.selectedStudents);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(resetSelectedStudents());\n    remoteData();\n    return () => {\n      dispatch(resetSelectedStudents());\n    };\n  }, []);\n\n  const assignStudents = async (students, id) => {\n    try {\n      setLoading(true);\n      const res = await api.post('/admin/assignStudentsToAd', {\n        students,\n        adId: id\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      setMesssage('Students successfully assigned');\n      setSeverity('success');\n      setOpen(true);\n      remoteData();\n      dispatch(resetSelectedStudents());\n      props.handleClose();\n    } catch (error) {\n      setLoading(false);\n      setMesssage('Student assignment failed');\n      setSeverity('error');\n      setOpen(true);\n      console.log(error);\n    }\n  };\n\n  const remoteData = async () => {\n    try {\n      setLoading(true);\n      const res = await api.post('/admin/getAdUnassignedStudents', {\n        adId: props.id\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      setData(res.data.response);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  const handleAssign = () => {\n    assignStudents(students.selected, props.id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: true,\n    open: props.open,\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    TransitionComponent: Transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Assign students\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, loading && /*#__PURE__*/React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  })), open && /*#__PURE__*/React.createElement(SnackBar, {\n    open: open,\n    message: message,\n    severity: severity,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(StudentTable, {\n    minimal: true,\n    history: props.history,\n    data: data,\n    remoteData: remoteData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAssign,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Assign\"))));\n};\n\n_s(AssignStudents, \"L9Xm+rSPGqO+yDGHsSBLwurDBAs=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c3 = AssignStudents;\nexport default AssignStudents;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"AssignStudents\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/tables/AdTable/AssignStudents.js"],"names":["React","useState","useEffect","Grid","Button","makeStyles","Dialog","DialogTitle","DialogContent","DialogActions","Slide","Backdrop","CircularProgress","useDispatch","useSelector","api","getCredentials","StudentTable","SnackBar","resetSelectedStudents","useStyles","theme","backdrop","zIndex","drawer","color","Transition","forwardRef","props","ref","AssignStudents","classes","data","setData","loading","setLoading","open","setOpen","message","setMesssage","severity","setSeverity","students","state","selectedStudents","dispatch","remoteData","assignStudents","id","res","post","adId","headers","Authorization","timeout","handleClose","error","console","log","response","handleAssign","selected","history"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    makeStyles,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Slide\r\n} from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport api from \"api/api\";\r\nimport { getCredentials } from \"services/authService\";\r\nimport StudentTable from \"components/tables/StudentTable\";\r\nimport SnackBar from \"components/SnackBar\";\r\nimport { resetSelectedStudents } from 'actions/studentActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    }\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\nconst AssignStudents = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n\r\n    const students = useSelector((state) => state.selectedStudents);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(resetSelectedStudents())\r\n        remoteData();\r\n        return ()=>{\r\n            dispatch(resetSelectedStudents())\r\n        }\r\n    }, []);\r\n    \r\n\r\n    const assignStudents = async (students, id) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/assignStudentsToAd',\r\n                { students, adId:id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setMesssage('Students successfully assigned');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            remoteData();\r\n            dispatch(resetSelectedStudents())\r\n            props.handleClose()\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Student assignment failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const remoteData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/getAdUnassignedStudents',\r\n                { adId: props.id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setData(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleAssign = () => {\r\n        assignStudents(students.selected, props.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\r\n                <DialogTitle id=\"form-dialog-title\">Assign students</DialogTitle>\r\n                <DialogContent>\r\n                    {loading && (\r\n                        <Backdrop className={classes.backdrop} open={loading} >\r\n                            <CircularProgress color=\"primary\" />\r\n                        </Backdrop>\r\n                    )}\r\n                    {open && (\r\n                        <SnackBar open={open} message={message} severity={severity} setOpen={setOpen} />\r\n                    )}\r\n                    \r\n                    <StudentTable minimal={true} history={props.history} data={data} remoteData={remoteData} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleAssign} color=\"primary\" variant=\"contained\">\r\n                        Assign\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignStudents;"]},"metadata":{},"sourceType":"module"}