{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\tables\\\\UserTable\\\\index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { forwardRef, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport api from '../../../api/api';\nimport { getCredentials } from '../../../services/authService';\nimport { connect } from 'react-redux';\nimport { getAllUser } from '../../../actions/userActions';\nimport style from './UserTable.module.css';\nimport { AddBox, ArrowDownward, Search, Clear, FirstPage, LastPage, ChevronLeft, FilterList, Check, DeleteOutline, Edit, SaveAlt, Delete, ViewColumn, ChevronRight, Remove, PhoneDisabled, PersonAddDisabled } from '@material-ui/icons';\nimport { icon } from '@fortawesome/fontawesome-svg-core';\n\nconst UserTable = props => {\n  _s();\n\n  useEffect(() => {\n    props.getAllUser();\n  }, []);\n  const tableColumns = [{\n    title: 'Email',\n    field: 'Email'\n  }, {\n    title: 'Username',\n    field: 'Username'\n  }, {\n    title: 'Role',\n    field: 'Role',\n    editable: 'never',\n    lookup: {\n      HR_USER: \"HR_USER\",\n      SUPER_USER: \"SUPER_USER\",\n      ADMIN: \"ADMIN\"\n    }\n  }, {\n    title: 'Status',\n    field: 'Status',\n    editable: 'never',\n    lookup: {\n      active: \"active\",\n      inactive: \"inactive\"\n    }\n  }];\n  const tableOptions = {\n    search: true,\n    // selection: true,\n    filtering: true,\n    actionsColumnIndex: -1,\n    rowStyle: rowData => ({\n      backgroundColor: rowData.Status === 'inactive' ? '#d3d3d3' : '#FFF'\n    })\n  };\n\n  const disableUser = async (userId, status) => {\n    try {\n      const res = await api.post('admin/updateAdminUser', {\n        userId,\n        operation: status === 'active' ? 'DISABLE' : 'ENABLE'\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      props.getAllUser();\n      return true;\n    } catch (error) {\n      console.log(error, 'DU');\n      return false;\n    }\n  };\n\n  const actionOptions = [// {\n  //     tooltip: 'Remove All Selected Users',\n  //     icon: () => <Delete />,\n  //     onClick: (evt, data) => console.log(data),\n  // },\n  // {\n  //     icon: () => <Edit />,\n  //     tooltip: 'Edit',\n  //     onClick: (evt, data) => console.log(data),\n  // },\n  {\n    icon: () => /*#__PURE__*/React.createElement(PersonAddDisabled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }),\n    tooltip: 'Disable',\n    onClick: (evt, data) => disableUser(data.id, data.Status)\n  }];\n  const tableIcons = {\n    Add: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }))),\n    Check: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 43\n      }\n    }))),\n    Clear: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 43\n      }\n    }))),\n    Delete: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }))),\n    DetailPanel: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }))),\n    Edit: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 42\n      }\n    }))),\n    Export: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 44\n      }\n    }))),\n    Filter: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 44\n      }\n    }))),\n    FirstPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }))),\n    LastPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 46\n      }\n    }))),\n    NextPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }))),\n    PreviousPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }))),\n    ResetSearch: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 49\n      }\n    }))),\n    Search: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 44\n      }\n    }))),\n    SortArrow: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }))),\n    ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }))),\n    ViewColumn: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })))\n  };\n  const editable = {\n    onRowUpdate: async (newData, oldData) => {\n      console.log(newData, oldData);\n\n      try {\n        const {\n          id,\n          Email,\n          Username,\n          Name,\n          Role\n        } = newData;\n        const res = await api.post('admin/updateAdminUser', {\n          userId: id,\n          email: Email,\n          username: Username,\n          name: Name,\n          role: Role,\n          operation: 'UPDATE'\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${getCredentials()}`\n          }\n        }, {\n          timeout: 1000\n        });\n        props.getAllUser();\n      } catch (error) {\n        console.log(error, 'UU');\n        return false;\n      }\n\n      return true;\n    },\n    onRowDelete: async oldData => {\n      try {\n        const {\n          id\n        } = oldData;\n        const res = await api.post('admin/updateAdminUser', {\n          userId: id,\n          operation: 'DELETE'\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: ` Bearer ${getCredentials()}`\n          }\n        }, {\n          timeout: 1000\n        });\n        props.getAllUser();\n      } catch (error) {\n        console.log(error, 'LU');\n        return false;\n      }\n\n      return true;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    isLoading: props.allUsers.length === 0,\n    options: tableOptions,\n    icons: tableIcons,\n    actions: actionOptions,\n    editable: editable,\n    title: \"Manage Users\",\n    columns: tableColumns,\n    data: props.allUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(UserTable, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserTable;\n\nconst mapStateToProps = state => {\n  console.log(state.allUsers);\n  return {\n    allUsers: state.allUsers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllUser: () => dispatch(getAllUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/tables/UserTable/index.js"],"names":["React","forwardRef","useEffect","MaterialTable","api","getCredentials","connect","getAllUser","style","AddBox","ArrowDownward","Search","Clear","FirstPage","LastPage","ChevronLeft","FilterList","Check","DeleteOutline","Edit","SaveAlt","Delete","ViewColumn","ChevronRight","Remove","PhoneDisabled","PersonAddDisabled","icon","UserTable","props","tableColumns","title","field","editable","lookup","HR_USER","SUPER_USER","ADMIN","active","inactive","tableOptions","search","filtering","actionsColumnIndex","rowStyle","rowData","backgroundColor","Status","disableUser","userId","status","res","post","operation","headers","Authorization","timeout","error","console","log","actionOptions","tooltip","onClick","evt","data","id","tableIcons","Add","ref","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","onRowUpdate","newData","oldData","Email","Username","Name","Role","email","username","name","role","onRowDelete","container","allUsers","length","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport api from '../../../api/api';\r\nimport { getCredentials } from '../../../services/authService';\r\nimport { connect } from 'react-redux';\r\nimport { getAllUser } from '../../../actions/userActions';\r\nimport style from './UserTable.module.css';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Search,\r\n    Clear,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    FilterList,\r\n    Check,\r\n    DeleteOutline,\r\n    Edit,\r\n    SaveAlt,\r\n    Delete,\r\n    ViewColumn,\r\n    ChevronRight,\r\n    Remove,\r\n    PhoneDisabled,\r\n    PersonAddDisabled,\r\n} from '@material-ui/icons';\r\nimport { icon } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst UserTable = (props) => {\r\n    useEffect(() => {\r\n        props.getAllUser();\r\n    }, []);\r\n\r\n    const tableColumns = [\r\n        { title: 'Email', field: 'Email' },\r\n        { title: 'Username', field: 'Username' },\r\n        { title: 'Role', field: 'Role' ,editable: 'never',\r\n        lookup:{HR_USER:\"HR_USER\",SUPER_USER:\"SUPER_USER\",ADMIN:\"ADMIN\"}},\r\n        { title: 'Status', field: 'Status' ,editable: 'never',lookup:{active:\"active\",inactive:\"inactive\"}},\r\n    ];\r\n\r\n    const tableOptions = {\r\n        search: true,\r\n        // selection: true,\r\n        filtering: true,\r\n        actionsColumnIndex: -1,\r\n        rowStyle: (rowData) => ({\r\n            backgroundColor: rowData.Status === 'inactive' ? '#d3d3d3' : '#FFF',\r\n        }),\r\n    };\r\n\r\n    const disableUser = async (userId, status) => {\r\n        try {\r\n            const res = await api.post(\r\n                'admin/updateAdminUser',\r\n                {\r\n                    userId,\r\n                    operation: status === 'active' ? 'DISABLE' : 'ENABLE',\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            props.getAllUser();\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error, 'DU');\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const actionOptions = [\r\n        // {\r\n        //     tooltip: 'Remove All Selected Users',\r\n        //     icon: () => <Delete />,\r\n        //     onClick: (evt, data) => console.log(data),\r\n        // },\r\n        // {\r\n        //     icon: () => <Edit />,\r\n        //     tooltip: 'Edit',\r\n        //     onClick: (evt, data) => console.log(data),\r\n        // },\r\n        {\r\n            icon: () => <PersonAddDisabled />,\r\n            tooltip: 'Disable',\r\n            onClick: (evt, data) => disableUser(data.id, data.Status),\r\n        },\r\n    ];\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => (\r\n            <DeleteOutline {...props} ref={ref} />\r\n        )),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => (\r\n            <FirstPage {...props} ref={ref} />\r\n        )),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => (\r\n            <ArrowDownward {...props} ref={ref} />\r\n        )),\r\n        ThirdStateCheck: forwardRef((props, ref) => (\r\n            <Remove {...props} ref={ref} />\r\n        )),\r\n        ViewColumn: forwardRef((props, ref) => (\r\n            <ViewColumn {...props} ref={ref} />\r\n        )),\r\n    };\r\n\r\n    const editable = {\r\n        onRowUpdate: async (newData, oldData) => {\r\n            console.log(newData, oldData);\r\n            try {\r\n                const { id, Email, Username, Name, Role } = newData;\r\n                const res = await api.post(\r\n                    'admin/updateAdminUser',\r\n                    {\r\n                        userId: id,\r\n                        email: Email,\r\n                        username: Username,\r\n                        name: Name,\r\n                        role: Role,\r\n                        operation: 'UPDATE',\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: `Bearer ${getCredentials()}`,\r\n                        },\r\n                    },\r\n                    { timeout: 1000 }\r\n                );\r\n                props.getAllUser();\r\n            } catch (error) {\r\n                console.log(error, 'UU');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        onRowDelete: async (oldData) => {\r\n            try {\r\n                const { id } = oldData;\r\n                const res = await api.post(\r\n                    'admin/updateAdminUser',\r\n                    { userId: id, operation: 'DELETE' },\r\n                    {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: ` Bearer ${getCredentials()}`,\r\n                        },\r\n                    },\r\n                    { timeout: 1000 }\r\n                );\r\n                props.getAllUser();\r\n            } catch (error) {\r\n                console.log(error, 'LU');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <MaterialTable\r\n            isLoading={props.allUsers.length===0}\r\n                options={tableOptions}\r\n                icons={tableIcons}\r\n                actions={actionOptions}\r\n                editable={editable}\r\n                title='Manage Users'\r\n                columns={tableColumns}\r\n                data={props.allUsers}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.allUsers);\r\n    return {\r\n        allUsers: state.allUsers,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllUser: () => dispatch(getAllUser()),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserTable);\r\n"]},"metadata":{},"sourceType":"module"}