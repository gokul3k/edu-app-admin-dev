{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\dialogs\\\\PasswordResetDialog\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { string } from \"yup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { passwordResetComplete } from \"../../../actions/userActions\";\nimport SimpleAlert from '../../alerts/SimpleAlert';\nexport default function PasswordResetDialog({\n  handleClickOpen,\n  open,\n  handleClose,\n  resetPasswordOnSubmit\n}) {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    ploading\n  } = userSignin;\n  const [email, setEmail] = useState(\"\");\n  const [valid, setValid] = useState(false);\n  const [done, setDone] = useState(false);\n  const [error, setError] = useState();\n  const dispatch = useDispatch();\n\n  const onClickOk = () => {\n    resetPasswordOnSubmit(email, setDone, setError); // handleClose()\n  };\n\n  const onClickClose = () => {\n    handleClose();\n    dispatch(passwordResetComplete());\n  };\n\n  const handleChange = e => {\n    const value = e.currentTarget.value;\n    setEmail(value);\n    setValid(string().required().email().isValidSync(value));\n  };\n\n  const renderAlert = () => {\n    if (!!error && !ploading) return /*#__PURE__*/React.createElement(SimpleAlert, {\n      severity: \"error\",\n      msg: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }\n    });\n  };\n\n  const renderMsg = () => {\n    if (done) return \"A password reset link has been sent to your email address\";else if (!!error && !ploading) return \"network error\";else return \"We will send a password reset link to your email address.\";\n  };\n\n  const renderButtons = () => {\n    if (done) return /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Ok\"));else return /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      disabled: !valid,\n      onClick: onClickOk,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Reset password\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Reset password\"), renderAlert(), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, renderMsg()), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email Address\",\n    type: \"name\",\n    fullWidth: true,\n    disabled: done,\n    error: !valid && email.length > 3,\n    value: email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), renderButtons()));\n}\n\n_s(PasswordResetDialog, \"Wo5VHfE1vdy/ZRfUSn95qpP4F3s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PasswordResetDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordResetDialog\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/dialogs/PasswordResetDialog/index.js"],"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","string","useSelector","useDispatch","passwordResetComplete","SimpleAlert","PasswordResetDialog","handleClickOpen","open","handleClose","resetPasswordOnSubmit","userSignin","state","ploading","email","setEmail","valid","setValid","done","setDone","error","setError","dispatch","onClickOk","onClickClose","handleChange","e","value","currentTarget","required","isValidSync","renderAlert","renderMsg","renderButtons","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { string } from \"yup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { passwordResetComplete } from \"../../../actions/userActions\";\r\nimport SimpleAlert from '../../alerts/SimpleAlert';\r\n\r\nexport default function PasswordResetDialog({\r\n  handleClickOpen,\r\n  open,\r\n  handleClose,\r\n  resetPasswordOnSubmit,\r\n}) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { ploading  } = userSignin;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [valid, setValid] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [error, setError] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickOk = () => {\r\n    resetPasswordOnSubmit(email,setDone,setError);\r\n    // handleClose()\r\n  };\r\n  const onClickClose = () => {\r\n    handleClose();\r\n    dispatch(passwordResetComplete());\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.currentTarget.value;\r\n    setEmail(value);\r\n    setValid(string().required().email().isValidSync(value));\r\n  };\r\n\r\n  const renderAlert = () => {\r\n    if(!!error &&!ploading)\r\n      return <SimpleAlert severity=\"error\" msg={error} />\r\n  };\r\n  const renderMsg = () => {\r\n    if (done)\r\n      return \"A password reset link has been sent to your email address\";\r\n    else if (!!error &&! ploading) return \"network error\";\r\n    else return \"We will send a password reset link to your email address.\";\r\n  };\r\n  const renderButtons = () => {\r\n    if (done)\r\n      return (\r\n        <DialogActions>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      );\r\n    else\r\n      return (\r\n        <DialogActions>\r\n          <Button size=\"small\" onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            disabled={!valid}\r\n            onClick={onClickOk}\r\n            color=\"primary\"\r\n          >\r\n            Reset password\r\n          </Button>\r\n        </DialogActions>\r\n      );\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Reset password</DialogTitle>\r\n          {renderAlert()}\r\n        <DialogContent>\r\n          <DialogContentText>{renderMsg()}</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"name\"\r\n            fullWidth\r\n            disabled={done}\r\n            error={!valid && email.length > 3}\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </DialogContent>\r\n        {renderButtons()}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}