{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\Exams\\\\AddExam\\\\One\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport MaterialTable from \"material-table\";\nimport * as Yup from 'yup';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, TextField } from '@material-ui/core';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport { getExamDetails } from \"../../../../../actions/examActions\";\nimport moment from 'moment';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 32,\n    \"& .MuiTextField-root\": {\n      width: \"25ch\"\n    }\n  },\n  grid: {\n    marginTop: 16,\n    marginBottom: 32\n  }\n}));\nexport default function One({\n  handleNext\n}) {\n  _s();\n\n  const publishExam = useSelector(state => state.publishExam);\n  const {\n    details\n  } = publishExam;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      title: !!details ? details.title : \"\",\n      startDate: !!details ? details.startDate : null,\n      endDate: !!details ? details.endDate : null,\n      startTime: !!details ? details.startTime : null,\n      endTime: !!details ? details.endTime : null,\n      duration: !!details ? details.duration : 40,\n      count: !!details ? details.count : null\n    },\n    onSubmit: values => {\n      console.log(publishExam);\n      dispatch(getExamDetails(values));\n      handleNext();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"title\",\n    name: \"title\",\n    label: \"Name\",\n    multiline: true,\n    style: {\n      flex: \".6\",\n      marginRight: \"16px\"\n    },\n    rowsMax: 4,\n    required: true,\n    value: formik.values.title,\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"title\",\n    name: \"duration\",\n    label: \"Duration\",\n    type: \"number\",\n    style: {\n      flex: \".2\",\n      marginRight: \"16px\"\n    },\n    required: true,\n    value: formik.values.duration,\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"count\",\n    name: \"count\",\n    label: \"Count\",\n    type: \"number\",\n    style: {\n      flex: \".2\",\n      marginRight: \"16px\"\n    },\n    required: true,\n    value: formik.values.count,\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    label: \"Start date\",\n    required: true,\n    name: \"startDate\",\n    type: \"date\",\n    format: \"MM/dd/yyyy\",\n    value: formik.values.startDate,\n    onChange: event => {\n      console.log('event', event.target.value);\n      formik.setFieldValue('startDate', event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    InputProps: {\n      inputProps: {\n        min: moment().format('YYYY-MM-DD')\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    label: \"Start time\",\n    name: \"startTime\",\n    type: \"time\",\n    required: true,\n    value: formik.values.startTime,\n    onChange: event => {\n      console.log('event', event.target.value);\n      formik.setFieldValue('startTime', event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    label: \"End date\",\n    name: \"endDate\",\n    type: \"date\",\n    required: true,\n    format: \"MM/dd/yyyy\",\n    value: formik.values.endDate,\n    onChange: event => {\n      console.log('event', event.target.value);\n      formik.setFieldValue('endDate', event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    InputProps: {\n      inputProps: {\n        min: moment().format('YYYY-MM-DD')\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    label: \"End time\",\n    name: \"endTime\",\n    type: \"time\",\n    required: true,\n    value: formik.values.endTime,\n    onChange: event => {\n      console.log('event', event.target.value);\n      formik.setFieldValue('endTime', event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n}\n\n_s(One, \"hdaE1E+ihWRJvqLgx0voSEG13Po=\", false, function () {\n  return [useSelector, useDispatch, useStyles, useFormik];\n});\n\n_c = One;\n\nvar _c;\n\n$RefreshReg$(_c, \"One\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/Exams/AddExam/One/index.js"],"names":["React","useEffect","useFormik","MaterialTable","Yup","makeStyles","Button","TextField","useDispatch","useSelector","Grid","getExamDetails","moment","useStyles","theme","root","marginTop","width","grid","marginBottom","One","handleNext","publishExam","state","details","dispatch","classes","formik","initialValues","title","startDate","endDate","startTime","endTime","duration","count","onSubmit","values","console","log","handleSubmit","flex","marginRight","handleBlur","handleChange","event","target","value","setFieldValue","shrink","inputProps","min","format"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport MaterialTable from \"material-table\";\r\nimport * as Yup from 'yup';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getExamDetails } from \"../../../../../actions/examActions\";\r\n\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 32,\r\n    \"& .MuiTextField-root\": {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  grid: {\r\n    marginTop: 16,\r\n    marginBottom: 32,\r\n  }\r\n}));\r\n\r\nexport default function One({ handleNext }) {\r\n  const publishExam = useSelector((state) => state.publishExam);\r\n  const { details } = publishExam;\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: !!details ? details.title : \"\",\r\n      startDate: !!details ? details.startDate : null,\r\n      endDate: !!details ? details.endDate : null,\r\n      startTime: !!details ? details.startTime : null,\r\n      endTime: !!details ? details.endTime : null,\r\n      duration: !!details ? details.duration : 40,\r\n      count: !!details ? details.count : null,\r\n\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      console.log(publishExam);\r\n      dispatch(getExamDetails(values))\r\n      handleNext()\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container justify=\"space-between\" className={classes.grid} >\r\n          <TextField\r\n            id=\"title\"\r\n            name=\"title\"\r\n            label=\"Name\"\r\n            multiline\r\n            style={{ flex: \".6\", marginRight: \"16px\" }}\r\n            rowsMax={4}\r\n            required\r\n            value={formik.values.title}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n          <TextField\r\n            id=\"title\"\r\n            name=\"duration\"\r\n            label=\"Duration\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.duration}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n          <TextField\r\n            id=\"count\"\r\n            name=\"count\"\r\n            label=\"Count\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.count}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid container justify=\"space-between\" className={classes.grid}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"Start date\"\r\n            required\r\n            name=\"startDate\"\r\n            type=\"date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={formik.values.startDate}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('startDate', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true,}}\r\n            InputProps={{inputProps: { min:moment().format('YYYY-MM-DD')} }}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"Start time\"\r\n            name=\"startTime\"\r\n            type=\"time\"\r\n            required\r\n            value={formik.values.startTime}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('startTime', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"End date\"\r\n            name=\"endDate\"\r\n            type=\"date\"\r\n            required\r\n            format=\"MM/dd/yyyy\"\r\n            value={formik.values.endDate}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('endDate', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{inputProps: { min:moment().format('YYYY-MM-DD')} }}\r\n\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"End time\"\r\n            name=\"endTime\"\r\n            type=\"time\"\r\n            required\r\n            value={formik.values.endTime}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('endTime', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n\r\n        </Grid>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>Next</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}