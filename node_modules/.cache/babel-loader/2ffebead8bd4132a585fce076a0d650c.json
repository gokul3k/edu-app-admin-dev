{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\Students\\\\StudentDetails\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { getStudent } from \"services/Students\";\nimport { Avatar, Button, Grid, Typography, Card, CardContent } from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport SchoolIcon from '@material-ui/icons/School';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\nimport SimpleLoading from \"components/loading/SimpleLoading\";\nimport MyDocument from 'components/Resume';\nimport { PDFDownloadLink, Document, Page } from '@react-pdf/renderer';\nimport api from 'api/api';\nimport { getCredentials } from 'services/authService';\nimport StudentMarkList from './StudentMarkList';\nimport { Switch, Route } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 32,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  colorBg: {\n    backgroundColor: \"#023e8a\",\n    height: 150\n  },\n  newPaper: {\n    marginTop: 8\n  },\n  newPaper1: {\n    marginTop: 32\n  },\n  card: {\n    position: \"relative\"\n  },\n  avatar: {\n    width: 150,\n    height: 150,\n    position: \"absolute\",\n    marginTop: -75,\n    marginLeft: 18\n  },\n  leftMargin: {\n    marginLeft: 18\n  },\n  subHeading: {\n    fontSize: 20,\n    marginLeft: 18\n  },\n  inline: {\n    display: 'inline'\n  },\n  date: {\n    fontSize: 12\n  },\n  resumeButton: {\n    padding: \"8px 16px\",\n    marginLeft: 64,\n    marginTop: 16,\n    marginBottom: 16,\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    borderRadius: 5,\n    maxWidth: 200,\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"black\",\n      textDecoration: \"none\",\n      color: \"white\"\n    }\n  },\n  button: {\n    height: 40,\n    marginLeft: 12\n  },\n  paper: {\n    padding: 32,\n    width: \"100%\"\n  },\n  divider: {\n    margin: 16\n  },\n  fullName: {\n    color: theme.palette.primary.light,\n    fontSize: 22\n  },\n  phone: {\n    color: theme.palette.text.secondary,\n    fontSize: 16\n  },\n  email: {\n    color: theme.palette.text.secondary,\n    fontSize: 16\n  },\n  id: {\n    color: theme.palette.text.primary,\n    fontSize: 16\n  },\n  label: {\n    color: theme.palette.secondary.light,\n    marginRight: 4\n  }\n}));\n\nfunction Details(props) {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getStudentDetails(props.match.params.id);\n  }, []);\n\n  const getStudentDetails = async studentId => {\n    try {\n      setLoading(true);\n      const response = await api.post(\"/admin/getStudentDetails\", {\n        studentId\n      }, {\n        headers: {\n          Authorization: `Bearer ${getCredentials()}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }, {\n        timeout: 1000\n      });\n      console.log(\"STUD DETAILD \", response.data.response);\n      setData(response.data.response);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  if (!loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.newPaper,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.colorBg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Avatar, {\n      src: data.studentInfo.ProfilePic,\n      alt: data.studentInfo.FullName,\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justify: \"flex-end\",\n      style: {\n        marginTop: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, data.studentInfo && /*#__PURE__*/React.createElement(PDFDownloadLink, {\n      document: /*#__PURE__*/React.createElement(MyDocument, {\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 72\n        }\n      }),\n      fileName: \"resume.pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }\n    }, ({\n      blob,\n      url,\n      loading,\n      error\n    }) => loading ? null : /*#__PURE__*/React.createElement(Typography, {\n      className: classes.resumeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 53\n      }\n    }, \"Resume\")), /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => props.history.push(\"/app/students/details/\" + props.match.params.id + \"/marklist\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, \"mark list\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      direction: \"column\",\n      className: classes.leftMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }, data.studentInfo.FullName), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    }, data.credDetails.Email), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, data.addrDetails.AddressLine1, \", \", data.addrDetails.City), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, data.addrDetails.State, \", Phone \", data.addrDetails.PhoneNo)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        marginLeft: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 41\n      }\n    }, \"Gender \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 52\n      }\n    }, data.studentInfo.Gender == 'M' ? 'MALE' : data.studentInfo.Gender == 'F' ? 'FEMALE' : 'TRANSGENDER')), /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        marginLeft: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 41\n      }\n    }, \"Date of Birth \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 59\n      }\n    }, data.studentInfo.Dob)))))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.newPaper1,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, \"Schooling\"), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(SchoolIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: data.acadDetails.SchoolName10,\n      secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 53\n        }\n      }, data.acadDetails.Board10, \", \", data.acadDetails.Location10)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(AccountBalanceIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: data.acadDetails.SchoolName12,\n      secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 53\n        }\n      }, data.acadDetails.Board12, \", \", data.acadDetails.Location12)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 41\n      }\n    }))))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.newPaper1,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    }, \"Degrees\"), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }, data.degreeDetails.map(element => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(SchoolIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: element.CollegeName,\n        secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          component: \"span\",\n          variant: \"body2\",\n          className: classes.inline,\n          color: \"textPrimary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 69\n          }\n        }, element.Degree, \", \", element.Location)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        variant: \"inset\",\n        component: \"li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 53\n        }\n      }));\n    })))))), data.certifications.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.newPaper1,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 41\n      }\n    }, \"Certifications\"), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 41\n      }\n    }, data.certifications.map(element => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(CardMembershipIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 69\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: element.CertificationName,\n        secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          component: \"span\",\n          variant: \"body2\",\n          className: classes.inline,\n          color: \"textPrimary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 77\n          }\n        }, element.Institute)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 65\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        variant: \"inset\",\n        component: \"li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 61\n        }\n      }));\n    })))))) : null, data.studentExperience.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.newPaper1,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 41\n      }\n    }, \"Experiences\"), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 41\n      }\n    }, data.studentExperience.map(element => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n        alignItems: \"flex-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(CardMembershipIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 69\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: element.CompanyName,\n        secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          component: \"span\",\n          variant: \"body2\",\n          className: classes.inline,\n          color: \"textPrimary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 77\n          }\n        }, element.JobTitle), /*#__PURE__*/React.createElement(Typography, {\n          className: classes.date,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 77\n          }\n        }, element.FromDate, \" to \", element.ToDate.length < 1 ? \"present\" : element.ToDate.length)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 65\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        variant: \"inset\",\n        component: \"li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 61\n        }\n      }));\n    })))))) : null, data.studentSkills.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.newPaper1,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, \"Skills\"), /*#__PURE__*/React.createElement(List, {\n      component: \"nav\",\n      \"aria-label\": \"secondary mailbox folders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 41\n      }\n    }, data.studentSkills.map(element => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        primary: element.Skill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 65\n        }\n      })), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 61\n        }\n      }));\n    })))))) : null);\n  } else return /*#__PURE__*/React.createElement(SimpleLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 19\n    }\n  });\n}\n\n_s(Details, \"f7PFzVc7jH26tJWzfT1c/nedagM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/Students/StudentDetails/Details.js"],"names":["React","useEffect","useState","makeStyles","Paper","getStudent","Avatar","Button","Grid","Typography","Card","CardContent","List","ListItem","Divider","ListItemText","ListItemAvatar","SchoolIcon","AccountBalanceIcon","CardMembershipIcon","SimpleLoading","MyDocument","PDFDownloadLink","Document","Page","api","getCredentials","StudentMarkList","Switch","Route","useStyles","theme","root","marginTop","display","flexDirection","colorBg","backgroundColor","height","newPaper","newPaper1","card","position","avatar","width","marginLeft","leftMargin","subHeading","fontSize","inline","date","resumeButton","padding","marginBottom","palette","primary","main","color","borderRadius","maxWidth","textAlign","textDecoration","button","paper","divider","margin","fullName","light","phone","text","secondary","email","id","label","marginRight","Details","props","classes","data","setData","loading","setLoading","getStudentDetails","match","params","studentId","response","post","headers","Authorization","timeout","console","log","error","studentInfo","ProfilePic","FullName","blob","url","history","push","credDetails","Email","addrDetails","AddressLine1","City","State","PhoneNo","Gender","Dob","acadDetails","SchoolName10","Board10","Location10","SchoolName12","Board12","Location12","degreeDetails","map","element","CollegeName","Degree","Location","certifications","length","CertificationName","Institute","studentExperience","CompanyName","JobTitle","FromDate","ToDate","studentSkills","Skill"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { getStudent } from \"services/Students\";\r\nimport { Avatar, Button, Grid, Typography, Card, CardContent } from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\r\nimport SimpleLoading from \"components/loading/SimpleLoading\";\r\nimport MyDocument from 'components/Resume'\r\nimport { PDFDownloadLink, Document, Page } from '@react-pdf/renderer'\r\nimport api from 'api/api';\r\nimport { getCredentials } from 'services/authService';\r\nimport StudentMarkList from './StudentMarkList';\r\nimport { Switch, Route, } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 32,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    colorBg: {\r\n        backgroundColor: \"#023e8a\",\r\n        height: 150\r\n    },\r\n    newPaper: {\r\n        marginTop: 8\r\n    },\r\n    newPaper1: {\r\n        marginTop: 32\r\n    },\r\n    card: {\r\n        position: \"relative\",\r\n    },\r\n    avatar: {\r\n        width: 150,\r\n        height: 150,\r\n        position: \"absolute\",\r\n        marginTop: -75,\r\n        marginLeft: 18\r\n    },\r\n    leftMargin: {\r\n        marginLeft: 18\r\n    },\r\n    subHeading: {\r\n        fontSize: 20,\r\n        marginLeft: 18\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    date: {\r\n        fontSize: 12\r\n    },\r\n    resumeButton: {\r\n        padding: \"8px 16px\",\r\n        marginLeft: 64,\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"white\",\r\n        borderRadius: 5,\r\n        maxWidth: 200,\r\n        textAlign: \"center\",\r\n        textDecoration: \"none\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"black\",\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n\r\n    },\r\n    button: {\r\n        height: 40,\r\n        marginLeft: 12\r\n    },\r\n    paper: {\r\n        padding: 32,\r\n        width: \"100%\"\r\n    },\r\n    divider: {\r\n        margin: 16\r\n    },\r\n    fullName: {\r\n        color: theme.palette.primary.light,\r\n        fontSize: 22,\r\n    },\r\n    phone: {\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 16,\r\n    },\r\n    email: {\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 16,\r\n    },\r\n    id: {\r\n        color: theme.palette.text.primary,\r\n        fontSize: 16,\r\n    },\r\n    label: {\r\n        color: theme.palette.secondary.light,\r\n        marginRight: 4,\r\n    }\r\n}));\r\n\r\nfunction Details(props) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getStudentDetails(props.match.params.id);\r\n    }, []);\r\n\r\n    const getStudentDetails = async (studentId) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await api.post(\"/admin/getStudentDetails\", { studentId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            console.log(\"STUD DETAILD \", response.data.response);\r\n            setData(response.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    if (!loading) {\r\n        return (\r\n            <div className={classes.root}>\r\n\r\n                <Grid container className={classes.newPaper} justify=\"center\">\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Card>\r\n                            <CardContent className={classes.card}>\r\n                                <div className={classes.colorBg}></div>\r\n                                <Avatar\r\n                                    src={data.studentInfo.ProfilePic}\r\n                                    alt={data.studentInfo.FullName}\r\n                                    className={classes.avatar}\r\n                                />\r\n                                <Grid container direction=\"row\" alignItems=\"center\" justify=\"flex-end\" style={{ marginTop: 14 }}>\r\n                                    {\r\n                                        data.studentInfo && (\r\n                                            <PDFDownloadLink document={<MyDocument data={data} />} fileName=\"resume.pdf\">\r\n                                                {({ blob, url, loading, error }) => (loading ? null :\r\n                                                    <Typography className={classes.resumeButton}>\r\n                                                        Resume\r\n                                                </Typography>\r\n                                                )}\r\n                                            </PDFDownloadLink>\r\n                                        )\r\n                                    }\r\n                                    <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={() => props.history.push(\"/app/students/details/\" + props.match.params.id + \"/marklist\")}>mark list</Button>\r\n                                </Grid>\r\n\r\n                                <Grid container direction=\"row\" justify=\"space-between\" style={{ marginTop: 8 }}>\r\n                                    <Grid item direction=\"column\" className={classes.leftMargin}>\r\n                                        <Typography className={classes.fullName}>\r\n                                            {data.studentInfo.FullName}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {data.credDetails.Email}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {data.addrDetails.AddressLine1}, {data.addrDetails.City}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {data.addrDetails.State}, Phone {data.addrDetails.PhoneNo}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item direction=\"column\">\r\n                                        <Typography style={{marginLeft:18}}>\r\n                                            Gender <b>{data.studentInfo.Gender == 'M' ? 'MALE' : data.studentInfo.Gender == 'F' ? 'FEMALE' : 'TRANSGENDER'}</b>\r\n                                        </Typography>\r\n                                        <Typography style={{marginLeft:18}}>\r\n                                            Date of Birth <b>{data.studentInfo.Dob}</b>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container className={classes.newPaper1} justify=\"center\">\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Card>\r\n                            <CardContent className={classes.card}>\r\n                                <Typography className={classes.subHeading}>Schooling</Typography>\r\n\r\n                                <List>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <SchoolIcon />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={data.acadDetails.SchoolName10}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {data.acadDetails.Board10}, {data.acadDetails.Location10}\r\n                                                    </Typography>\r\n\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\" />\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <AccountBalanceIcon />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={data.acadDetails.SchoolName12}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {data.acadDetails.Board12}, {data.acadDetails.Location12}\r\n                                                    </Typography>\r\n\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container className={classes.newPaper1} justify=\"center\">\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Card>\r\n                            <CardContent className={classes.card}>\r\n                                <Typography className={classes.subHeading}>Degrees</Typography>\r\n\r\n                                <List>\r\n                                    {\r\n                                        data.degreeDetails.map((element) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <ListItem alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <SchoolIcon />\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary={element.CollegeName}\r\n                                                            secondary={\r\n                                                                <React.Fragment>\r\n                                                                    <Typography\r\n                                                                        component=\"span\"\r\n                                                                        variant=\"body2\"\r\n                                                                        className={classes.inline}\r\n                                                                        color=\"textPrimary\"\r\n                                                                    >\r\n                                                                        {element.Degree}, {element.Location}\r\n                                                                    </Typography>\r\n\r\n                                                                </React.Fragment>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider variant=\"inset\" component=\"li\" />\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {\r\n                    (data.certifications.length > 0) ? (\r\n                        <Grid container className={classes.newPaper1} justify=\"center\">\r\n                            <Grid item xs={12} sm={9}>\r\n                                <Card>\r\n                                    <CardContent className={classes.card}>\r\n                                        <Typography className={classes.subHeading}>Certifications</Typography>\r\n\r\n                                        <List>\r\n                                            {\r\n                                                data.certifications.map((element) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <ListItem alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <CardMembershipIcon />\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={element.CertificationName}\r\n                                                                    secondary={\r\n                                                                        <React.Fragment>\r\n                                                                            <Typography\r\n                                                                                component=\"span\"\r\n                                                                                variant=\"body2\"\r\n                                                                                className={classes.inline}\r\n                                                                                color=\"textPrimary\"\r\n                                                                            >\r\n                                                                                {element.Institute}\r\n                                                                            </Typography>\r\n\r\n                                                                        </React.Fragment>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                            <Divider variant=\"inset\" component=\"li\" />\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </List>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    (data.studentExperience.length > 0) ? (\r\n                        <Grid container className={classes.newPaper1} justify=\"center\">\r\n                            <Grid item xs={12} sm={9}>\r\n                                <Card>\r\n                                    <CardContent className={classes.card}>\r\n                                        <Typography className={classes.subHeading}>Experiences</Typography>\r\n\r\n                                        <List>\r\n                                            {\r\n                                                data.studentExperience.map((element) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <ListItem alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <CardMembershipIcon />\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={element.CompanyName}\r\n                                                                    secondary={\r\n                                                                        <React.Fragment>\r\n                                                                            <Typography\r\n                                                                                component=\"span\"\r\n                                                                                variant=\"body2\"\r\n                                                                                className={classes.inline}\r\n                                                                                color=\"textPrimary\"\r\n                                                                            >\r\n                                                                                {element.JobTitle}\r\n                                                                            </Typography>\r\n                                                                            <Typography className={classes.date}>{element.FromDate} to {element.ToDate.length<1?\"present\":element.ToDate.length}</Typography>\r\n                                                                        </React.Fragment>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                            <Divider variant=\"inset\" component=\"li\" />\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </List>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    (data.studentSkills.length > 0) ? (\r\n                        <Grid container className={classes.newPaper1} justify=\"center\">\r\n                            <Grid item xs={12} sm={9}>\r\n                                <Card>\r\n                                    <CardContent className={classes.card}>\r\n                                        <Typography className={classes.subHeading}>Skills</Typography>\r\n\r\n                                        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                                            {\r\n                                                data.studentSkills.map((element) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <ListItem>\r\n                                                                <ListItemText primary={element.Skill} />\r\n                                                            </ListItem>\r\n                                                            <Divider />\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </List>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : null\r\n                }\r\n\r\n\r\n                {/* <Paper className={classes.paper}>\r\n                    <Grid>\r\n                        <Grid container direction=\"row\" spacing={3} alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Avatar\r\n                                    src={data.studentInfo.ProfilePic}\r\n                                    alt={data.studentInfo.FullName}\r\n                                    className={classes.avatar}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography className={classes.fullName}>\r\n                                    {data.studentInfo.FullName}\r\n                                </Typography>\r\n                                <Typography className={classes.id}>{data.credDetails.id}</Typography>\r\n                                <Typography className={classes.email}>\r\n                                    {data.credDetails.Email}\r\n                                </Typography>\r\n                                <Typography className={classes.phone}>\r\n                                    {data.addrDetails.PhoneNo}\r\n                                </Typography>\r\n                                {\r\n                                    data.studentInfo && (\r\n                                        <PDFDownloadLink className={classes.link} document={<MyDocument data={data} />} fileName=\"resume.pdf\">\r\n                                            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\r\n                                        </PDFDownloadLink>\r\n                                    )\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.divider}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" spacing={3}>\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>DOB</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.studentInfo.Dob}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>Gender</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.studentInfo.Gender}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>Register No</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.studentInfo.RegNumber}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>Address line 1</Typography>\r\n                                    <Typography className={classes.val}>{data.addrDetails.AddressLine1}</Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>\r\n                                        Address line2\r\n                  </Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.addrDetails.AddressLine2}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>City/Town</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.addrDetails.City}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>state</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.addrDetails.State}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.divider}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" spacing={3}>\r\n                            <Grid item xs>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>\r\n                                        10th School name\r\n                  </Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.SchoolName10}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>CGPA/Percentage</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Cgpa10}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Board</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Board10}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Location</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.Location10}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>\r\n                                        12th School name\r\n                  </Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.SchoolName12}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>CGPA/Percentage</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Cgpa12}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Board</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Board12}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Location</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.Location12}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.divider}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        {\r\n                            data.degreeDetails.map(element => {\r\n                                return (\r\n                                    <Grid >\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>College name</Typography>\r\n                                            <Typography className={classes.val}>\r\n                                                {element.CollegeName}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>CGPA/Percentage</Typography>\r\n                                            <Typography className={classes.val}>{element.Cgpa}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>degree</Typography>\r\n                                            <Typography className={classes.val}>{element.Degree}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>Location</Typography>\r\n                                            <Typography className={classes.val}>{element.Location}</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Paper> */}\r\n\r\n            </div>\r\n        );\r\n    } else return <SimpleLoading />;\r\n}\r\n\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}