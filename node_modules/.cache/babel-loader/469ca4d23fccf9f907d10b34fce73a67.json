{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\Exams\\\\ExamDetails\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport SimpleLoading from '../../../../components/loading/SimpleLoading';\nimport api from '../../../../api/api';\nimport { getCredentials } from '../../../../services/authService';\nimport ExamDetailsMenu from '../../../../components/menu/ExamDetailsMenu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Chip, Grid } from '@material-ui/core';\nimport Details from './Details';\nimport Instructions from './Instructions';\nimport Questions from './Questions';\nimport { getExam } from '../../../../actions/examActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nconst useStyles = makeStyles(theme => ({\n  menuContainer: {\n    display: \" flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\nexport default function ExamDetails(props) {\n  const classes = useStyles();\n  const [edit, setEdit] = useState(false);\n  const exam = useSelector(state => state.exam);\n  const {\n    loading,\n    details,\n    instructions,\n    questions\n  } = exam;\n  const [progress, setProgress] = useState(false);\n  const dispatch = useDispatch();\n  const [status, setStatus] = useState(); // const getExam=async ()=>{\n  //     try {\n  //         const {data} = await api.post(\n  //             '/admin/getExamDetails',{id:props.match.params.id},\n  //             {\n  //                 headers: {\n  //                     'Content-Type': 'application/json',\n  //                     Authorization: `Bearer ${getCredentials()}`,\n  //                 },\n  //             },\n  //             {timeout:1000}\n  //         );\n  //         console.log(\"det\",data.response)\n  //         const {exam} = data.response\n  //         console.log(exam)\n  //         setDetails({id:1})\n  //         setLoading(false)\n  //         console.log(\"asd\",details,loading)\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n\n  useEffect(() => {\n    dispatch(getExam(props.match.params.id));\n  }, []);\n  useEffect(() => {\n    setStatus(details.status);\n  }, [loading]);\n\n  const disableExam = async id => {\n    try {\n      const {\n        data\n      } = await api.post('/admin/toggleExamStatus', {\n        examId: id\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      dispatch(getExam(props.match.params.id)); // setProgress(false)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const editExam = async () => {\n    try {\n      const {\n        data\n      } = await api.post('/admin/editExam', {\n        details: data.details\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onEditClicked = () => {\n    setEdit(!edit);\n  };\n\n  const onDeleteClicked = () => {};\n\n  const onDisableClicked = () => {\n    // setProgress(true)\n    disableExam(props.match.params.id); // dispatch(getExam(props.match.params.id))\n  };\n\n  const onEdit = async (values, mode) => {\n    switch (mode) {\n      case \"details\":\n        editExam(values);\n        dispatch(getExam(props.match.params.id));\n        setEdit(false);\n        break;\n\n      case \"instructions\":\n        setEdit(false);\n        break;\n\n      case \"questions\":\n        setEdit(false);\n        break;\n    }\n  };\n\n  if (loading && !progress) {\n    console.log(\"d\", !!details);\n    return /*#__PURE__*/React.createElement(SimpleLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 67\n      }\n    });\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.menuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExamDetailsMenu, {\n    onEditClicked: onEditClicked,\n    onDeleteClicked: onDeleteClicked,\n    onDisableClicked: onDisableClicked,\n    disabled: details.Status === 'active',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })), details.Status && /*#__PURE__*/React.createElement(Chip, {\n    size: \"small\",\n    label: details.Status,\n    color: details.Status === \"active\" ? 'primary' : \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Details, {\n    details: details,\n    edit: edit,\n    onEdit: onEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Instructions, {\n    edit: false,\n    onEdit: onEdit,\n    instructions: instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Questions, {\n    questions: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/Exams/ExamDetails/index.js"],"names":["React","useState","useEffect","SimpleLoading","api","getCredentials","ExamDetailsMenu","makeStyles","Chip","Grid","Details","Instructions","Questions","getExam","useDispatch","useSelector","useStyles","theme","menuContainer","display","alignItems","justifyContent","ExamDetails","props","classes","edit","setEdit","exam","state","loading","details","instructions","questions","progress","setProgress","dispatch","status","setStatus","match","params","id","disableExam","data","post","examId","headers","Authorization","timeout","error","console","log","editExam","onEditClicked","onDeleteClicked","onDisableClicked","onEdit","values","mode","Status"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport SimpleLoading from '../../../../components/loading/SimpleLoading'\r\nimport api from '../../../../api/api'\r\nimport {getCredentials} from '../../../../services/authService'\r\nimport ExamDetailsMenu from '../../../../components/menu/ExamDetailsMenu'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Chip, Grid} from '@material-ui/core';\r\nimport Details from './Details'\r\nimport Instructions from './Instructions'\r\nimport Questions from './Questions'\r\nimport {getExam} from '../../../../actions/examActions'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuContainer:{\r\n        display:\" flex\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\"\r\n    }\r\n \r\n  }));\r\nexport default function ExamDetails(props) {\r\n    const classes = useStyles();\r\n \r\n    const [edit, setEdit] = useState(false)\r\n    const exam = useSelector((state) => state.exam);\r\n    const { loading,details,instructions,questions} = exam;\r\nconst [progress, setProgress] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const [status,setStatus] =  useState()\r\n\r\n    // const getExam=async ()=>{\r\n    //     try {\r\n    //         const {data} = await api.post(\r\n    //             '/admin/getExamDetails',{id:props.match.params.id},\r\n    //             {\r\n    //                 headers: {\r\n    //                     'Content-Type': 'application/json',\r\n    //                     Authorization: `Bearer ${getCredentials()}`,\r\n    //                 },\r\n    //             },\r\n    //             {timeout:1000}\r\n    //         );\r\n    //         console.log(\"det\",data.response)\r\n    //         const {exam} = data.response\r\n    //         console.log(exam)\r\n    //         setDetails({id:1})\r\n    //         setLoading(false)\r\n    //         console.log(\"asd\",details,loading)\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n        dispatch(getExam(props.match.params.id))\r\n    }, [])\r\n    useEffect(() => {\r\n        setStatus(details.status)\r\n    }, [loading])\r\n    const disableExam=async (id)=>{\r\n        try {\r\n            const { data } = await api.post(\r\n                '/admin/toggleExamStatus',{examId:id},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                {timeout:1000}\r\n            );\r\n            dispatch(getExam(props.match.params.id))\r\n            // setProgress(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const editExam=async ()=>{\r\n        try {\r\n            const { data } = await api.post(\r\n                '/admin/editExam',{details:data.details},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                {timeout:1000}\r\n            );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const onEditClicked =()=>{\r\n        setEdit(!edit)\r\n    }\r\n    const onDeleteClicked =()=>{\r\n\r\n    }\r\n    const onDisableClicked =()=>{\r\n        // setProgress(true)\r\n        disableExam(props.match.params.id)\r\n        // dispatch(getExam(props.match.params.id))\r\n\r\n    }\r\n    const onEdit = async (values,mode)=>{\r\n        switch(mode){\r\n            case \"details\":\r\n                editExam(values)\r\n                dispatch(getExam(props.match.params.id))\r\n                setEdit(false)\r\n                break;\r\n                \r\n            case \"instructions\":\r\n                setEdit(false)\r\n                break;\r\n                \r\n            case \"questions\":\r\n                setEdit(false)\r\n                break;\r\n                \r\n        }\r\n    }\r\n\r\n    if(loading && !progress ){ console.log(\"d\",!!details);return (<SimpleLoading />)}\r\n    else\r\n    return (\r\n        <div>\r\n            <div className={classes.menuContainer}>\r\n                <ExamDetailsMenu onEditClicked={onEditClicked} onDeleteClicked={onDeleteClicked}\r\n                onDisableClicked={onDisableClicked}  disabled={details.Status==='active'}/>\r\n            </div>\r\n            {details.Status&&(<Chip size=\"small\" label={details.Status} color={details.Status===\"active\"?'primary':\"secondary\"} />)}\r\n            <Details details={details} edit={edit} onEdit={onEdit}/>\r\n            <Instructions edit={false} onEdit={onEdit} instructions={instructions} />\r\n            <Questions questions={questions} />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}