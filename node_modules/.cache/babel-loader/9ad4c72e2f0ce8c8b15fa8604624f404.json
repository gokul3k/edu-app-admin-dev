{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\Interviews\\\\InterviewDetail\\\\AssignStudents.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Button, makeStyles } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport api from \"../../../../api/api\";\nimport { getCredentials } from \"../../../../services/authService\";\nimport StudentTable from \"../../../../components/tables/StudentTable\";\nimport SnackBar from \"../../../../components/SnackBar\";\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\n\nconst AssignStudents = props => {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMesssage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const students = useSelector(state => state.selectedStudents);\n  useEffect(() => {\n    console.log(\"called\");\n    remoteData();\n  }, []);\n\n  const assignStudents = async (students, examId) => {\n    try {\n      setLoading(true);\n      const res = await api.post('/admin/assignStudentsToInterview', {\n        students,\n        examId\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      setMesssage('Students successfully assigned');\n      setSeverity('success');\n      setOpen(true);\n      remoteData();\n    } catch (error) {\n      setLoading(false);\n      setMesssage('Student assignment failed');\n      setSeverity('error');\n      setOpen(true);\n      console.log(error);\n    }\n  };\n\n  const remoteData = async () => {\n    try {\n      setLoading(true);\n      const res = await api.post('/admin/getInterviewUnassignedStudents', {\n        examId: props.match.params.id\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      setData(res.data.response);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  const handleAssign = () => {\n    assignStudents(students.selected, props.match.params.id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), open && /*#__PURE__*/React.createElement(SnackBar, {\n    open: open,\n    message: message,\n    severity: severity,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      alignSelf: \"flex-end\"\n    },\n    onClick: handleAssign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Assign\")), /*#__PURE__*/React.createElement(StudentTable, {\n    history: props.history,\n    data: data,\n    remoteData: remoteData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(AssignStudents, \"6t4+BFZWt2KqpP+ssunfmRbg5u4=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = AssignStudents;\nexport default AssignStudents;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignStudents\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/Interviews/InterviewDetail/AssignStudents.js"],"names":["React","useState","useEffect","Grid","Button","makeStyles","Backdrop","CircularProgress","useDispatch","useSelector","api","getCredentials","StudentTable","SnackBar","useStyles","theme","backdrop","zIndex","drawer","color","AssignStudents","props","classes","data","setData","loading","setLoading","open","setOpen","message","setMesssage","severity","setSeverity","students","state","selectedStudents","console","log","remoteData","assignStudents","examId","res","post","headers","Authorization","timeout","error","match","params","id","response","handleAssign","selected","alignSelf","history"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport api from \"../../../../api/api\";\r\nimport { getCredentials } from \"../../../../services/authService\";\r\nimport StudentTable from \"../../../../components/tables/StudentTable\";\r\nimport SnackBar from \"../../../../components/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    }\r\n}));\r\n\r\nconst AssignStudents = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n    const students = useSelector((state) => state.selectedStudents);\r\n\r\n    useEffect(() => {\r\n        console.log(\"called\")\r\n        remoteData();\r\n    }, []);\r\n\r\n    const assignStudents = async (students, examId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/assignStudentsToInterview',\r\n                { students, examId },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setMesssage('Students successfully assigned');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            remoteData();\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Student assignment failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const remoteData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/getInterviewUnassignedStudents',\r\n                { examId: props.match.params.id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setData(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleAssign = () => {\r\n        assignStudents(students.selected, props.match.params.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <Backdrop className={classes.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen}/>\r\n            )}\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                color=\"primary\"\r\n               \r\n            >\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    style={{alignSelf:\"flex-end\"}}\r\n                    onClick={handleAssign}\r\n                >\r\n                    Assign\r\n                </Button>\r\n            </Grid>\r\n            <StudentTable history={props.history} data={data} remoteData={remoteData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignStudents;"]},"metadata":{},"sourceType":"module"}