{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\InterviewDetailComponent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, makeStyles, Grid } from '@material-ui/core';\nimport api from '../../api/api';\nimport { getCredentials } from '../../services/authService';\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flex: 1,\n    width: '100%',\n    marginTop: 24\n  },\n  card: {\n    width: '100%'\n  },\n  heading: {\n    fontWeight: 'bold',\n    color: \"#4169E1\"\n  },\n  value: {\n    fontSize: 14,\n    color: \"#FFA500\"\n  }\n}));\nexport default function InterviewDetailComponent({\n  interviewId\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [interview, setInterview] = useState({});\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getInterviewDetail(interviewId);\n  }, []);\n\n  const getInterviewDetail = async interviewId => {\n    try {\n      setLoading(true);\n      const res = await api.post(\"/admin/getInterviewDetails\", {\n        interviewId\n      }, {\n        headers: {\n          Authorization: `Bearer ${getCredentials()}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }, {\n        timeout: 1000\n      });\n      setInterview(res.data.response);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"ID  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 66\n    }\n  }, interview.id)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Interview Name  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 78\n    }\n  }, interview.InterviewName)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Interview By  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 76\n    }\n  }, interview.InterviewBy))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"Date  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 68\n    }\n  }, interview.Date)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \"Total Candidates  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 80\n    }\n  }, interview.TotalCandidates)), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \"Status  : \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 70\n    }\n  }, interview.Status)))))));\n}\n\n_s(InterviewDetailComponent, \"scpLcFLWbF0FfsCeURRniMYye68=\", false, function () {\n  return [useStyles];\n});\n\n_c = InterviewDetailComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterviewDetailComponent\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/InterviewDetailComponent/index.js"],"names":["React","useState","useEffect","Card","CardContent","makeStyles","Grid","api","getCredentials","useStyles","container","display","flex","width","marginTop","card","heading","fontWeight","color","value","fontSize","InterviewDetailComponent","interviewId","classes","interview","setInterview","loading","setLoading","getInterviewDetail","res","post","headers","Authorization","timeout","data","response","error","console","log","id","InterviewName","InterviewBy","Date","TotalCandidates","Status"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Card, CardContent, makeStyles, Grid } from '@material-ui/core';\r\nimport api from '../../api/api';\r\nimport {getCredentials} from '../../services/authService';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        marginTop: 24\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n        color: \"#4169E1\"\r\n    },\r\n    value: {\r\n        fontSize: 14,\r\n        color: \"#FFA500\"\r\n    }\r\n}));\r\n\r\nexport default function InterviewDetailComponent({ interviewId }) {\r\n\r\n    const classes = useStyles();\r\n    const [interview, setInterview] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getInterviewDetail(interviewId);\r\n    }, []);\r\n\r\n    const getInterviewDetail = async (interviewId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/getInterviewDetails\",\r\n                { interviewId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n\r\n            );\r\n\r\n            setInterview(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);  \r\n        }\r\n    }\r\n    if(loading){\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={classes.container}>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-around\"\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            direction=\"column\"\r\n                        >\r\n                            <p className={classes.heading}>ID  : <span className={classes.value}>{interview.id}</span></p>\r\n                            <p className={classes.heading}>Interview Name  : <span className={classes.value}>{interview.InterviewName}</span></p>\r\n                            <p className={classes.heading}>Interview By  : <span className={classes.value}>{interview.InterviewBy}</span></p>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            direction=\"column\"\r\n                        >\r\n                            <p className={classes.heading}>Date  : <span className={classes.value}>{interview.Date}</span></p>\r\n                            <p className={classes.heading}>Total Candidates  : <span className={classes.value}>{interview.TotalCandidates}</span></p>\r\n                            <p className={classes.heading}>Status  : <span className={classes.value}>{interview.Status}</span></p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}