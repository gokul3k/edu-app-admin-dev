{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\Exams\\\\AddExam\\\\Three\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Paper, Typography, TextField, Grid, Divider } from \"@material-ui/core\";\nimport ExcelReader from \"../../../../../components/buttons/ExcelReader\";\nimport Add from \"@material-ui/icons/Add\";\nimport QuestionDialog from \"../../../../../components/dialogs/QuestionDialog\";\nimport QuestionListItem from \"../../../../../components/list/QuestionListItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getExamQuestions } from \"../../../../../actions/examActions\";\nimport index from \"../../ExamDetails\";\nimport { useFormik } from \"formik\";\nimport { set } from \"js-cookie\";\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 32\n  },\n  buttonContainer: {\n    marginTop: 24\n  },\n  input: {\n    display: \"none\"\n  },\n  insert: {\n    textTransform: \"none\",\n    marginLeft: 32\n  },\n  paper: {\n    padding: 8,\n    maxHeight: 600,\n    overflowY: \"auto\",\n    scrollbarWidth: \"thin\"\n  }\n});\nexport default function Three({\n  handleNext,\n  handleBack\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [question, setQuestion] = useState({});\n  const publishExam = useSelector(state => state.publishExam);\n  const {\n    questions\n  } = publishExam;\n  const [ac, setAc] = useState(0);\n  const [lc, setLc] = useState(0);\n  const [cc, setCc] = useState(0);\n  const [tc, setTc] = useState(0);\n  const dispatch = useDispatch([]);\n  useEffect(() => {\n    setData(questions);\n  }, []);\n  useEffect(() => {\n    dispatch(getExamQuestions(data));\n  }, [data]);\n  useEffect(() => {\n    var a = 0;\n    var l = 0;\n    var t = 0;\n    var c = 0;\n    questions.map((item, index) => {\n      if (item.type === 'aptitude') {\n        a++;\n      }\n\n      if (item.type === 'logical') l++;\n      if (item.type === 'technical') t++;\n      if (item.type === 'communication') c++;\n    });\n    setAc(a);\n    setLc(l);\n    setTc(t);\n    setCc(c);\n  }, [questions]);\n\n  const addData = values => {\n    let index = -1;\n\n    try {\n      data.map((val, i) => {\n        if (val.no == values.no) index = i;\n      });\n\n      if (index === -1) {\n        setData(data => data.concat(values));\n      } else {\n        let items = [...data];\n        items[index] = values;\n        setData(items);\n      }\n    } catch (error) {}\n  };\n\n  const onEdit = item => {\n    setQuestion(item);\n    setOpen(true);\n  };\n\n  const onDelete = item => {\n    var index = data.findIndex(x => x.no == item.no);\n    setData(data => data.filter((item, j) => index !== j));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      lc: 0,\n      cc: 0,\n      tc: 0,\n      ac: 0\n    },\n    onSubmit: values => {\n      dispatch(getExamQuestions(data, values));\n      handleNext();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Upload or manually enter questions here.\"), /*#__PURE__*/React.createElement(Grid, {\n    direction: \"row\",\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    style: {\n      margin: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExcelReader, {\n    setData: setData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    style: {\n      marginLeft: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"- or -\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.insert,\n    size: \"small\",\n    variant: \"outlined\",\n    onClick: () => {\n      setQuestion({\n        no: data.length + 1\n      });\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), \"Insert Question\")), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, open && question.no && /*#__PURE__*/React.createElement(QuestionDialog, {\n    open: open,\n    setOpen: setOpen,\n    question: question,\n    setQuestion: setQuestion,\n    addData: addData,\n    index: question.no - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), data.length === 0 && /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"No Questions added\"), data.map((item, index) => /*#__PURE__*/React.createElement(QuestionListItem, {\n    item: item,\n    onEdit: onEdit,\n    onDelete: onDelete,\n    index: index,\n    edit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    style: {\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"ac\",\n    name: \"ac\",\n    label: \"Aptitude Qtns\",\n    variant: \"outlined\",\n    type: \"number\",\n    style: {\n      flex: \".2\",\n      marginRight: \"16px\"\n    },\n    required: true,\n    value: formik.values.ac,\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: ac\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"lc\",\n    name: \"lc\",\n    label: \"Logical Qtns\",\n    variant: \"outlined\",\n    type: \"number\",\n    style: {\n      flex: \".2\",\n      marginRight: \"16px\"\n    },\n    required: true,\n    value: formik.values.lc,\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: lc\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"cc\",\n    name: \"cc\",\n    label: \"Comm Qtns\",\n    variant: \"outlined\",\n    type: \"number\",\n    style: {\n      flex: \".2\",\n      marginRight: \"16px\"\n    },\n    required: true,\n    value: formik.values.cc,\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: cc\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"tc\",\n    name: \"tc\",\n    label: \"Tech Qtns\",\n    variant: \"outlined\",\n    type: \"number\",\n    style: {\n      flex: \".2\",\n      marginRight: \"16px\"\n    },\n    required: true,\n    value: formik.values.tc,\n    onBlur: formik.handleBlur,\n    onChange: formik.handleChange,\n    InputProps: {\n      inputProps: {\n        min: 0,\n        max: tc\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \"*Cannot leave all question type count as 0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secodary\",\n    disableElevation: true,\n    style: {\n      marginRight: \"16px\"\n    },\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    type: \"submit\",\n    disabled: data.length === 0 || formik.values.ac === 0 && formik.values.lc === 0 && formik.values.cc === 0 && formik.values.tc === 0 // onClick={() => {\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n}\n\n_s(Three, \"hCdV79PasdSq9ErFTIafWf1XRz8=\", false, function () {\n  return [useStyles, useSelector, useDispatch, useFormik];\n});\n\n_c = Three;\n\nvar _c;\n\n$RefreshReg$(_c, \"Three\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/Exams/AddExam/Three/index.js"],"names":["React","useState","useEffect","makeStyles","Button","Paper","Typography","TextField","Grid","Divider","ExcelReader","Add","QuestionDialog","QuestionListItem","useDispatch","useSelector","getExamQuestions","index","useFormik","set","useStyles","root","marginTop","buttonContainer","input","display","insert","textTransform","marginLeft","paper","padding","maxHeight","overflowY","scrollbarWidth","Three","handleNext","handleBack","classes","data","setData","open","setOpen","question","setQuestion","publishExam","state","questions","ac","setAc","lc","setLc","cc","setCc","tc","setTc","dispatch","a","l","t","c","map","item","type","addData","values","val","i","no","concat","items","error","onEdit","onDelete","findIndex","x","filter","j","formik","initialValues","onSubmit","margin","length","textAlign","handleSubmit","flex","marginRight","handleBlur","handleChange","inputProps","min","max"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ExcelReader from \"../../../../../components/buttons/ExcelReader\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport QuestionDialog from \"../../../../../components/dialogs/QuestionDialog\";\r\nimport QuestionListItem from \"../../../../../components/list/QuestionListItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getExamQuestions } from \"../../../../../actions/examActions\";\r\nimport index from \"../../ExamDetails\";\r\nimport { useFormik } from \"formik\";\r\nimport { set } from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 32,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 24,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  insert: {\r\n    textTransform: \"none\",\r\n    marginLeft: 32,\r\n  },\r\n  paper: {\r\n    padding: 8,\r\n    maxHeight: 600,\r\n    overflowY: \"auto\",\r\n    scrollbarWidth: \"thin\",\r\n  },\r\n});\r\nexport default function Three({ handleNext, handleBack }) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [question, setQuestion] = useState({});\r\n  const publishExam = useSelector((state) => state.publishExam);\r\n  const { questions } = publishExam;\r\n  const [ac, setAc] = useState(0)\r\n  const [lc, setLc] = useState(0)\r\n  const [cc, setCc] = useState(0)\r\n  const [tc, setTc] = useState(0)\r\n  const dispatch = useDispatch([]);\r\n  useEffect(() => {\r\n    setData(questions);\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(getExamQuestions(data));\r\n  }, [data]);\r\n  useEffect(() => {\r\n    var a = 0\r\n    var l = 0\r\n    var t = 0\r\n    var c = 0\r\n    questions.map((item, index) => {\r\n      if (item.type === 'aptitude') {\r\n        a++\r\n      }\r\n      if (item.type === 'logical')\r\n        l++\r\n      if (item.type === 'technical')\r\n        t++\r\n      if (item.type === 'communication')\r\n        c++\r\n    })\r\n    setAc(a)\r\n    setLc(l)\r\n    setTc(t)\r\n    setCc(c)\r\n  }, [questions])\r\n  const addData = (values) => {\r\n    let index = -1;\r\n    try {\r\n      data.map((val, i) => {\r\n        if (val.no == values.no) index = i;\r\n      });\r\n      if (index === -1) {\r\n        setData((data) => data.concat(values));\r\n      } else {\r\n        let items = [...data];\r\n        items[index] = values;\r\n        setData(items);\r\n      }\r\n    } catch (error) { }\r\n  };\r\n  const onEdit = (item) => {\r\n    setQuestion(item);\r\n    setOpen(true);\r\n  };\r\n  const onDelete = (item) => {\r\n    var index = data.findIndex((x) => x.no == item.no);\r\n    setData((data) => data.filter((item, j) => index !== j));\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      lc: 0,\r\n      cc: 0,\r\n      tc: 0,\r\n      ac: 0\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      dispatch(getExamQuestions(data, values));\r\n      handleNext();\r\n    },\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography gutterBottom variant=\"body2\">\r\n        Upload or manually enter questions here.\r\n      </Typography>\r\n      <Grid\r\n        direction=\"row\"\r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        style={{ margin: \"16px\" }}\r\n      >\r\n        <ExcelReader setData={setData} />\r\n        <Typography variant=\"subtitle1\" style={{ marginLeft: \"32px\" }}>\r\n          - or -\r\n        </Typography>\r\n        <Button\r\n          className={classes.insert}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          onClick={() => {\r\n            setQuestion({ no: data.length + 1 });\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          <Add />\r\n          Insert Question\r\n        </Button>\r\n      </Grid>\r\n      <Paper className={classes.paper}>\r\n        {open && question.no && (\r\n          <QuestionDialog\r\n            open={open}\r\n            setOpen={setOpen}\r\n            question={question}\r\n            setQuestion={setQuestion}\r\n            addData={addData}\r\n            index={question.no - 1}\r\n          />\r\n        )}\r\n        {data.length === 0 && (\r\n          <Typography variant=\"subtitle2\" style={{ textAlign: \"center\" }}>\r\n            No Questions added\r\n          </Typography>\r\n        )}\r\n        {data.map((item, index) => (\r\n          <QuestionListItem\r\n            item={item}\r\n            onEdit={onEdit}\r\n            onDelete={onDelete}\r\n            index={index}\r\n            edit={true}\r\n          />\r\n        ))}\r\n      </Paper>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container justify=\"space-between\" style={{ marginTop: 32 }}>\r\n          <TextField\r\n            id=\"ac\"\r\n            name=\"ac\"\r\n            label=\"Aptitude Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.ac}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: ac } }}\r\n          />\r\n          <TextField\r\n            id=\"lc\"\r\n            name=\"lc\"\r\n            label=\"Logical Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.lc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: lc } }}\r\n          />\r\n          <TextField\r\n            id=\"cc\"\r\n            name=\"cc\"\r\n            label=\"Comm Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.cc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: cc } }}\r\n          />\r\n          <TextField\r\n            id=\"tc\"\r\n            name=\"tc\"\r\n            label=\"Tech Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.tc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: tc } }}\r\n          />\r\n        </Grid>\r\n        <Typography variant=\"subtitle1\">*Cannot leave all question type count as 0</Typography>\r\n        <div className={classes.buttonContainer}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secodary\"\r\n            disableElevation\r\n            style={{ marginRight: \"16px\" }}\r\n            onClick={handleBack}\r\n          >\r\n            Previous\r\n        </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            type=\"submit\"\r\n            disabled={data.length === 0 || (formik.values.ac === 0 && formik.values.lc === 0 && formik.values.cc === 0 && formik.values.tc === 0)}\r\n          // onClick={() => {\r\n\r\n          // }}\r\n          >\r\n            Next\r\n        </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}