{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\Exams\\\\ExamDetails\\\\Instructions.js\";\nimport React, { useState, forwardRef, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport { Button, Paper, TextField } from \"@material-ui/core\";\nimport { Add, ArrowDownward, Search, Clear, FirstPage, LastPage, ChevronLeft, FilterList, Check, DeleteOutline, Edit, SaveAlt, ViewColumn, ChevronRight, Remove } from \"@material-ui/icons\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    marginTop: 32\n  },\n  buttonContainer: {\n    marginTop: 12,\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }\n});\nexport default function Instructions({\n  instructions,\n  edit,\n  onEdit\n}) {\n  const classes = useStyles();\n  const tableColumns = [{\n    title: \"Instruction\",\n    field: \"instruction\",\n    cellStyle: {\n      width: \"100%\"\n    },\n    editComponent: props => /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        width: \"100%\"\n      },\n      fullWidth: true,\n      type: \"text\",\n      value: props.value,\n      onChange: e => props.onChange(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    })\n  }];\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    console.log(\"ins\", instructions);\n    setData(instructions);\n    return () => {};\n  }, []);\n  const editable = {\n    onRowAdd: newData => new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log(\"new\", newData);\n        setData([...data, newData.instruction]);\n        resolve();\n      }, 0);\n    }),\n    onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log(\"new\", newData);\n        const dataUpdate = [...data];\n        const index = oldData.tableData.id;\n        dataUpdate[index] = newData.instruction;\n        setData([...dataUpdate]);\n        resolve();\n      }, 0);\n    }),\n    onRowDelete: oldData => new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const dataDelete = [...data];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setData([...dataDelete]);\n        resolve();\n      }, 0);\n    })\n  };\n  const tableIcons = {\n    Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Add, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }))),\n    Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 39\n      }\n    }))),\n    Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 39\n      }\n    }))),\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 40\n      }\n    }))),\n    DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }))),\n    Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 38\n      }\n    }))),\n    Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 40\n      }\n    }))),\n    Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 40\n      }\n    }))),\n    FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 43\n      }\n    }))),\n    LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 42\n      }\n    }))),\n    NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 42\n      }\n    }))),\n    PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }))),\n    ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 45\n      }\n    }))),\n    Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 40\n      }\n    }))),\n    SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }))),\n    ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }))),\n    ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 44\n      }\n    })))\n  };\n  const tableOptions = {\n    filtering: false,\n    search: false,\n    sorting: false,\n    pageSizeOptions: [5, 10]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: tableColumns,\n    data: data.map(val => ({\n      instruction: val.Instruction\n    })),\n    icons: tableIcons,\n    editable: edit ? editable : {},\n    disableElevation: true,\n    options: tableOptions,\n    title: \"Instructions to be displayed to students\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, edit && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    onClick: () => {\n      onEdit(data, \"instructions\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/Exams/ExamDetails/Instructions.js"],"names":["React","useState","forwardRef","useEffect","makeStyles","MaterialTable","Button","Paper","TextField","Add","ArrowDownward","Search","Clear","FirstPage","LastPage","ChevronLeft","FilterList","Check","DeleteOutline","Edit","SaveAlt","ViewColumn","ChevronRight","Remove","useStyles","root","width","marginTop","buttonContainer","display","justifyContent","Instructions","instructions","edit","onEdit","classes","tableColumns","title","field","cellStyle","editComponent","props","value","e","onChange","target","data","setData","console","log","editable","onRowAdd","newData","Promise","resolve","reject","setTimeout","instruction","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","tableIcons","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","tableOptions","filtering","search","sorting","pageSizeOptions","map","val","Instruction"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, Paper, TextField } from \"@material-ui/core\";\r\n\r\nimport {\r\n  Add,\r\n  ArrowDownward,\r\n  Search,\r\n  Clear,\r\n  FirstPage,\r\n  LastPage,\r\n  ChevronLeft,\r\n  FilterList,\r\n  Check,\r\n  DeleteOutline,\r\n  Edit,\r\n  SaveAlt,\r\n  ViewColumn,\r\n  ChevronRight,\r\n  Remove,\r\n} from \"@material-ui/icons\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: 32,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 12,\r\n    display:\"flex\",\r\n    justifyContent:\"flex-end\"\r\n  },\r\n});\r\nexport default function Instructions({ instructions,edit,onEdit }) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Instruction\",\r\n      field: \"instruction\",\r\n      cellStyle: { width: \"100%\" },\r\n      editComponent: (props) => (\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          fullWidth\r\n          type=\"text\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"ins\",instructions)\r\n    setData(instructions);\r\n    return () => {};\r\n  }, []);\r\n  const editable = {\r\n    onRowAdd: (newData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(\"new\",newData)\r\n          setData([...data, newData.instruction]);\r\n\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n    onRowUpdate: (newData, oldData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(\"new\",newData)\r\n          const dataUpdate = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataUpdate[index] = newData.instruction;\r\n          setData([...dataUpdate]);\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n    onRowDelete: (oldData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          const dataDelete = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataDelete.splice(index, 1);\r\n          setData([...dataDelete]);\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n  };\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <Add {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n  const tableOptions = {\r\n    filtering: false,\r\n    search: false,\r\n    sorting: false,\r\n    pageSizeOptions: [5, 10],\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Paper>\r\n      <MaterialTable\r\n        columns={tableColumns}\r\n        data={data.map((val)=>({instruction:val.Instruction}))}\r\n        icons={tableIcons}\r\n        editable={edit?editable:{}}\r\n        disableElevation\r\n        options={tableOptions}\r\n        title=\"Instructions to be displayed to students\"\r\n      />\r\n      <div className={classes.buttonContainer}>\r\n       {edit&& (<Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={()=>{onEdit(data,\"instructions\")}}\r\n        >\r\n          Save\r\n        </Button>)}\r\n      </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}