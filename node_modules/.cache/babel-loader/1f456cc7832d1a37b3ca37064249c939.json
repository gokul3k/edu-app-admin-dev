{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\AddPhotoAdComponent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Axios from 'axios';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, MenuItem, InputLabel, makeStyles, Select, Grid, Card, CardContent, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AdTextField from '../AdTextField';\nimport api from '../../api/api';\nimport { getCredentials } from '../../services/authService';\nimport SnackBar from '../SnackBar';\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  },\n  container: {\n    display: 'flex',\n    flex: 1\n  },\n  form: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column'\n  },\n  heading: {\n    fontSize: 14,\n    fontWeight: 600\n  },\n  buttonZoneContainer: {\n    marginTop: 18\n  },\n  dropdown: {\n    marginTop: 24\n  },\n  img: {\n    display: 'flex',\n    flex: 1,\n    width: '100%',\n    maxHeight: 350\n  },\n  button: {\n    marginLeft: 16\n  },\n  submitButton: {\n    marginTop: 16\n  }\n}));\n\nconst AddPhotoAdComponent = () => {\n  _s();\n\n  const styleClasses = useStyles();\n  const [adZone, setAdZone] = useState('adZone1');\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMesssage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const [picture, setPicture] = useState(require('../../assets/images/uploadimg.svg'));\n  const [adPic, setAdPic] = useState(null);\n  const {\n    selected\n  } = useSelector(state => state.selectedStudents);\n  const formik = useFormik({\n    initialValues: {\n      adName: '',\n      adZone: 'adZone3'\n    },\n    validationSchema: Yup.object({\n      adName: Yup.string().required('This field is required'),\n      adZone: Yup.string().required('This field is required')\n    }),\n    onSubmit: values => {\n      const formValues = { ...values,\n        adZone\n      };\n      console.log(values);\n      saveAd(formValues, selected);\n    }\n  });\n  const formRef = useRef(null);\n  const inputFile = useRef(null);\n\n  const saveAd = async (data, students) => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('adName', data.adName);\n      formData.append('adZone', data.adZone);\n      formData.append('students', JSON.stringify(students));\n      formData.append('adPic', adPic);\n      const config = {\n        method: 'POST',\n        url: 'https://api.bestenlist.com/rest/v1/admin/uploadPhotoAd',\n        data: formData,\n        headers: {\n          Authorization: `Bearer ${getCredentials()}`,\n          'Content-Type': 'multipart/form-data',\n          Accept: 'application/json'\n        }\n      };\n      const response = await Axios(config);\n      handleReset();\n      setLoading(false);\n      setMesssage('Ad succesfully created');\n      setSeverity('success');\n      setOpen(true);\n    } catch (error) {\n      setLoading(false);\n      setMesssage('Ad creation failed');\n      setSeverity('error');\n      setOpen(true);\n      console.log(error);\n    }\n  };\n\n  const selectImage = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', data => {\n      setAdPic(file);\n      setPicture(data.target.result);\n    });\n    reader.readAsDataURL(file);\n  };\n\n  const handleReset = () => {\n    formik.resetForm();\n    setPicture(require('../../assets/images/uploadimg.svg'));\n    formRef.current.reset();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styleClasses.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(Backdrop, {\n    className: styleClasses.backdrop,\n    open: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })), open && /*#__PURE__*/React.createElement(SnackBar, {\n    open: open,\n    message: message,\n    severity: severity,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    ref: formRef,\n    noValidate: true,\n    className: styleClasses.form,\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    direction: \"column\",\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AdTextField, {\n    error: !!formik.errors.adName && formik.touched.adName,\n    helperText: !!formik.errors.adName && formik.touched.adName ? formik.errors.adName : '',\n    onChange: formik.handleChange,\n    value: formik.values.adName,\n    name: \"adName\",\n    label: \"Ad Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: styleClasses.dropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"adZone\",\n    variant: \"outlined\",\n    size: \"small\",\n    value: adZone,\n    onChange: event => setAdZone(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"adZone1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, \"Ad Zone 1\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"adZone2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  }, \"Ad Zone 2\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"adZone3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 41\n    }\n  }, \"Ad Zone 3\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"adZone4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 41\n    }\n  }, \"Ad Zone 4\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: styleClasses.button,\n    variant: \"outlined\",\n    onClick: () => inputFile.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 41\n    }\n  }, \"Upload\"))), /*#__PURE__*/React.createElement(Button, {\n    className: styleClasses.submitButton,\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    accept: \"image/*\",\n    ref: inputFile,\n    onChange: selectImage,\n    style: {\n      marginTop: 16,\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styleClasses.img,\n    src: picture,\n    onClick: () => inputFile.current.click(),\n    alt: \"upload certificate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  })))))));\n};\n\n_s(AddPhotoAdComponent, \"GdqPMivrwbhizeaLytHHGiLdFlQ=\", false, function () {\n  return [useStyles, useSelector, useFormik];\n});\n\n_c = AddPhotoAdComponent;\nexport default AddPhotoAdComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPhotoAdComponent\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/AddPhotoAdComponent/index.js"],"names":["React","useState","useRef","Axios","useFormik","Yup","TextField","Button","MenuItem","InputLabel","makeStyles","Select","Grid","Card","CardContent","Typography","useDispatch","useSelector","Backdrop","CircularProgress","AdTextField","api","getCredentials","SnackBar","useStyles","theme","backdrop","zIndex","drawer","color","container","display","flex","form","flexDirection","heading","fontSize","fontWeight","buttonZoneContainer","marginTop","dropdown","img","width","maxHeight","button","marginLeft","submitButton","AddPhotoAdComponent","styleClasses","adZone","setAdZone","loading","setLoading","open","setOpen","message","setMesssage","severity","setSeverity","picture","setPicture","require","adPic","setAdPic","selected","state","selectedStudents","formik","initialValues","adName","validationSchema","object","string","required","onSubmit","values","formValues","console","log","saveAd","formRef","inputFile","data","students","formData","FormData","append","JSON","stringify","config","method","url","headers","Authorization","Accept","response","handleReset","error","selectImage","event","file","target","files","reader","FileReader","addEventListener","result","readAsDataURL","resetForm","current","reset","handleSubmit","errors","touched","handleChange","value","click"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    MenuItem,\r\n    InputLabel,\r\n    makeStyles,\r\n    Select,\r\n    Grid, Card, CardContent, Typography\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AdTextField from '../AdTextField';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\nimport SnackBar from '../SnackBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    heading: {\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    },\r\n    buttonZoneContainer: {\r\n        marginTop: 18\r\n    },\r\n    dropdown: {\r\n        marginTop: 24\r\n    },\r\n    img: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        maxHeight: 350\r\n    },\r\n    button: {\r\n        marginLeft: 16\r\n    },\r\n    submitButton: {\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst AddPhotoAdComponent = () => {\r\n\r\n    const styleClasses = useStyles();\r\n    const [adZone, setAdZone] = useState('adZone1');\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n    const [picture, setPicture] = useState(\r\n        require('../../assets/images/uploadimg.svg')\r\n    );\r\n    const [adPic, setAdPic] = useState(null);\r\n\r\n    const { selected } = useSelector((state) => state.selectedStudents);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            adName: '',\r\n            adZone: 'adZone3'\r\n        },\r\n        validationSchema: Yup.object({\r\n            adName: Yup.string().required('This field is required'),\r\n            adZone: Yup.string().required('This field is required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            const formValues = {...values, adZone};\r\n            console.log(values);\r\n            saveAd(formValues, selected);\r\n        }\r\n    });\r\n\r\n    const formRef = useRef(null);\r\n    const inputFile = useRef(null);\r\n\r\n    const saveAd = async (data, students) => {\r\n        try {\r\n            setLoading(true);\r\n            const formData = new FormData();\r\n            formData.append('adName', data.adName);\r\n            formData.append('adZone', data.adZone);\r\n            formData.append('students', JSON.stringify(students));\r\n            formData.append('adPic', adPic);\r\n\r\n            const config = {\r\n                method: 'POST',\r\n                url: 'https://api.bestenlist.com/rest/v1/admin/uploadPhotoAd',\r\n                data: formData,\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Accept: 'application/json',\r\n                },\r\n            };\r\n\r\n            const response = await Axios(config);\r\n            handleReset();\r\n            setLoading(false);\r\n            setMesssage('Ad succesfully created');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Ad creation failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const selectImage = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', (data) => {\r\n            setAdPic(file);\r\n            setPicture(data.target.result);\r\n        });\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        formik.resetForm();\r\n        setPicture(require('../../assets/images/uploadimg.svg'));\r\n        formRef.current.reset();\r\n    };\r\n\r\n    return (\r\n        <div className={styleClasses.container}>\r\n            {loading && (\r\n                <Backdrop className={styleClasses.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen}/>\r\n            )}\r\n            <form ref={formRef} noValidate className={styleClasses.form} onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-between\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid\r\n                                direction=\"column\"\r\n                                item\r\n                                xs\r\n\r\n                            >\r\n                                <AdTextField\r\n                                    error={!!formik.errors.adName && formik.touched.adName}\r\n                                    helperText={\r\n                                        !!formik.errors.adName && formik.touched.adName\r\n                                            ? formik.errors.adName\r\n                                            : ''\r\n                                    }\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.adName}\r\n                                    name='adName'\r\n                                    label='Ad Name'\r\n                                />\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    alignItems=\"center\"\r\n                                    className={styleClasses.dropdown}\r\n                                >\r\n                                    <Select\r\n\r\n                                        labelId='demo-simple-select-label'\r\n                                        id='adZone'\r\n                                        variant='outlined'\r\n                                        size=\"small\"\r\n                                        value={adZone}\r\n                                        onChange={(event) => setAdZone(event.target.value)}\r\n                                    >\r\n                                        <MenuItem value='adZone1'>Ad Zone 1</MenuItem>\r\n                                        <MenuItem value='adZone2'>Ad Zone 2</MenuItem>\r\n                                        <MenuItem value='adZone3'>Ad Zone 3</MenuItem>\r\n                                        <MenuItem value='adZone4'>Ad Zone 4</MenuItem>\r\n                                    </Select>\r\n                                    <div>\r\n                                        <Button\r\n                                            className={styleClasses.button}\r\n                                            variant='outlined'\r\n                                            onClick={() => inputFile.current.click()}\r\n                                        >\r\n                                            Upload\r\n                                    </Button>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Button\r\n                                    className={styleClasses.submitButton}\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    type='submit'\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                                <input\r\n                                    type='file'\r\n                                    id='file'\r\n                                    accept='image/*'\r\n                                    ref={inputFile}\r\n                                    onChange={selectImage}\r\n                                    style={{ marginTop: 16, display: 'none' }}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <img\r\n                                    className={styleClasses.img}\r\n                                    src={picture}\r\n                                    onClick={() => inputFile.current.click()}\r\n                                    alt='upload certificate'\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default AddPhotoAdComponent;"]},"metadata":{},"sourceType":"module"}