{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\components\\\\SuggestionForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles, TextField, Grid, Select, MenuItem, Button } from \"@material-ui/core\";\nimport { Formik, Field, FieldArray, Form } from 'formik';\nimport ChipInput from \"material-ui-chip-input\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SnackBar from '../SnackBar';\nimport api from '../../api/api';\nimport { getCredentials } from '../../services/authService';\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  },\n  container: {\n    display: 'flex',\n    flex: 1\n  },\n  label: {\n    marginRight: 24,\n    marginBottom: 24,\n    fontWeight: \"bold\"\n  },\n  textField: {\n    minHeight: 50,\n    minWidth: 300,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#D3D3D3\",\n    padding: 5\n  },\n  form: {\n    marginTop: 24\n  },\n  dropDown: {\n    height: 50,\n    marginBottom: 24\n  },\n  row: {\n    marginBottom: 24\n  },\n  and: {\n    marginLeft: 18,\n    marginRight: 18\n  }\n}));\nconst initialValues = {\n  conditionName: '',\n  conditions: [{\n    lowerCgpa: '',\n    lowerPercentage: '',\n    upperCgpa: '',\n    upperPercentage: ''\n  }],\n  avgPackage: ''\n};\n\nconst SuggestionForm = props => {\n  _s();\n\n  const classes = useStyles();\n  const [conditionTag, setConditionTag] = useState(['10th']);\n  const [college, setCollege] = useState([]);\n  const [improvement, setImprovement] = useState([]);\n  const [sector, setSector] = useState([]);\n  const [company, setCompany] = useState([]);\n  const [course, setCourse] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMesssage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const handleCourseChange = chips => {\n    setCourse(chips);\n  };\n\n  const handleCompanyChange = chips => {\n    setCompany(chips);\n  };\n\n  const handleSectorChange = chips => {\n    setSector(chips);\n  };\n\n  const handleCollegeChange = chips => {\n    setCollege(chips);\n  };\n\n  const handleImprovementChange = chips => {\n    setImprovement(chips);\n  };\n\n  const handleButtonClick = () => {\n    props.history.push(\"/app/suggestion/list\");\n  };\n\n  const checkConditionExist = async conditionName => {\n    try {\n      const res = await api.post(\"/admin/checkConditionExist\", {\n        conditionName\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      console.log(\"CONDITON \", res.data);\n      return res.data.response;\n    } catch (error) {\n      setMesssage('Something went wrong');\n      setSeverity('error');\n      setOpen(true);\n      console.log(error);\n    }\n  };\n\n  const saveSuggestion = async (conditions, conditionName, avgPackage) => {\n    try {\n      setLoading(true);\n      await api.post(\"/admin/saveSuggestion\", {\n        conditions,\n        conditionName,\n        colleges: college,\n        improvements: improvement,\n        courses: course,\n        companies: company,\n        sectors: sector,\n        avgPackage\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      setLoading(false);\n      setMesssage('Suggestion succesfully created');\n      setSeverity('success');\n      setOpen(true);\n    } catch (error) {\n      setLoading(false);\n      setMesssage('Suggestion creation failed');\n      setSeverity('error');\n      setOpen(true);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  })), open && /*#__PURE__*/React.createElement(SnackBar, {\n    open: open,\n    message: message,\n    severity: severity,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: async values => {\n      conditionTag.map((condition, index) => {\n        values.conditions[index].condition = condition;\n      });\n      var flag = false;\n      values.conditions.forEach(cond => {\n        if (cond.lowerCgpa == '' || cond.lowerPercentage == '' || cond.upperCgpa == '' || cond.upperPercentage == '') {\n          flag = true;\n        }\n      });\n\n      if (flag || values.conditionName == '' || values.avgPackage == '' || college.length == 0 || improvement.length == 0 || course.length == 0 || company.length == 0 || sector.length == 0) {\n        setMesssage('Fields cannot be empty');\n        setSeverity('error');\n        setOpen(true);\n      } else if (await checkConditionExist(values.conditionName)) {\n        setMesssage('Condition name already exist');\n        setSeverity('error');\n        setOpen(true);\n      } else {\n        saveSuggestion(values.conditions, values.conditionName, values.avgPackage);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, ({\n    values\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.row,\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 37\n    }\n  }, \"Condition Name : \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: classes.textField,\n    name: \"conditionName\",\n    placeholder: \"name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"conditions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, ({\n    insert,\n    remove,\n    push\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, values.conditions.map((condition, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.row,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 49\n    }\n  }, \"Set Condition \", index + 1, \" :\"), /*#__PURE__*/React.createElement(Select, {\n    className: classes.dropDown,\n    labelId: \"demo-simple-select-label\",\n    id: \"conditionTag\",\n    variant: \"outlined\",\n    size: \"small\",\n    value: conditionTag[index],\n    onChange: event => {\n      var items = [...conditionTag];\n      items[index] = event.target.value;\n      setConditionTag(items);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"10th\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 53\n    }\n  }, \"10th Standard\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"12th\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 53\n    }\n  }, \"12th Standard\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"degree\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 53\n    }\n  }, \"Degree\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"communication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 53\n    }\n  }, \"Communication\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"aptitude\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 53\n    }\n  }, \"Aptitude\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"logical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 53\n    }\n  }, \"Logical Reasoning\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"technical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 53\n    }\n  }, \"Technical\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: classes.row,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 53\n    }\n  }, \"Lower Limit :\"), /*#__PURE__*/React.createElement(Field, {\n    className: classes.textField,\n    name: `conditions.${index}.lowerCgpa`,\n    placeholder: \"CGPA\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.and,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 53\n    }\n  }, \"and\"), /*#__PURE__*/React.createElement(Field, {\n    className: classes.textField,\n    name: `conditions.${index}.lowerPercentage`,\n    placeholder: \"Percentage\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: classes.row,\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 53\n    }\n  }, \"Upper Limit :\"), /*#__PURE__*/React.createElement(Field, {\n    className: classes.textField,\n    name: `conditions.${index}.upperCgpa`,\n    placeholder: \"CGPA\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 53\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.and,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 53\n    }\n  }, \"and\"), /*#__PURE__*/React.createElement(Field, {\n    className: classes.textField,\n    name: `conditions.${index}.upperPercentage`,\n    placeholder: \"Percentage\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 53\n    }\n  })), index === 0 ? null : /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"secondary\",\n    onClick: () => remove(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 57\n    }\n  }, \"X\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"secondary\",\n    onClick: () => push({\n      condition: '',\n      lowerCgpa: '',\n      lowerPercentage: '',\n      upperCgpa: '',\n      upperPercentage: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 41\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.row,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, \"Set Colleges : \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    className: classes.textField,\n    variant: \"outlined\",\n    placeholder: \"eg: college 1 , college 2\",\n    helperText: \"Press enter after each college\",\n    onChange: chips => handleCollegeChange(chips),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.row,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 37\n    }\n  }, \"Sectors To Improve : \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    className: classes.textField,\n    variant: \"outlined\",\n    placeholder: \"eg: improvement 1 , improvement 2\",\n    helperText: \"Press enter after each improvement\",\n    onChange: chips => handleImprovementChange(chips),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.row,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 37\n    }\n  }, \"Courses To Pursue : \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    className: classes.textField,\n    variant: \"outlined\",\n    placeholder: \"eg: course 1 , course 2\",\n    helperText: \"Press enter after each course\",\n    onChange: chips => handleCourseChange(chips),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.row,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 37\n    }\n  }, \"Offering Companies : \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    className: classes.textField,\n    variant: \"outlined\",\n    placeholder: \"eg: company 1 , company 2\",\n    helperText: \"Press enter after each company\",\n    onChange: chips => handleCompanyChange(chips),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.row,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 37\n    }\n  }, \"Strong Sectors : \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    className: classes.textField,\n    variant: \"outlined\",\n    placeholder: \"eg: sector 1 , sector 2\",\n    helperText: \"Press enter after each sector\",\n    onChange: chips => handleSectorChange(chips),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.row,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 37\n    }\n  }, \"Average Package : \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: classes.textField,\n    name: \"avgPackage\",\n    placeholder: \"Package\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 33\n    }\n  }, \"View Saved suggestions\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 33\n    }\n  }, \"Submit\"))))));\n};\n\n_s(SuggestionForm, \"kT9zKkNmsSlVyK9gxRDi+cofTBU=\", false, function () {\n  return [useStyles];\n});\n\n_c = SuggestionForm;\nexport default SuggestionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionForm\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/components/SuggestionForm/index.js"],"names":["React","useState","makeStyles","TextField","Grid","Select","MenuItem","Button","Formik","Field","FieldArray","Form","ChipInput","Backdrop","CircularProgress","SnackBar","api","getCredentials","useStyles","theme","backdrop","zIndex","drawer","color","container","display","flex","label","marginRight","marginBottom","fontWeight","textField","minHeight","minWidth","borderRadius","borderWidth","borderColor","padding","form","marginTop","dropDown","height","row","and","marginLeft","initialValues","conditionName","conditions","lowerCgpa","lowerPercentage","upperCgpa","upperPercentage","avgPackage","SuggestionForm","props","classes","conditionTag","setConditionTag","college","setCollege","improvement","setImprovement","sector","setSector","company","setCompany","course","setCourse","loading","setLoading","message","setMesssage","severity","setSeverity","open","setOpen","handleCourseChange","chips","handleCompanyChange","handleSectorChange","handleCollegeChange","handleImprovementChange","handleButtonClick","history","push","checkConditionExist","res","post","headers","Authorization","timeout","console","log","data","response","error","saveSuggestion","colleges","improvements","courses","companies","sectors","values","map","condition","index","flag","forEach","cond","length","insert","remove","event","items","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    makeStyles,\r\n    TextField,\r\n    Grid,\r\n    Select,\r\n    MenuItem,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport { Formik, Field, FieldArray, Form } from 'formik';\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SnackBar from '../SnackBar';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1,\r\n    },\r\n    label: {\r\n        marginRight: 24,\r\n        marginBottom: 24,\r\n        fontWeight: \"bold\"\r\n    },\r\n    textField: {\r\n        minHeight: 50,\r\n        minWidth: 300,\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"#D3D3D3\",\r\n        padding: 5\r\n    },\r\n    form: {\r\n        marginTop: 24,\r\n    },\r\n    dropDown: {\r\n        height: 50,\r\n        marginBottom: 24\r\n    },\r\n    row: {\r\n        marginBottom: 24\r\n    },\r\n    and: {\r\n        marginLeft: 18,\r\n        marginRight: 18\r\n    }\r\n}));\r\n\r\nconst initialValues = {\r\n    conditionName: '',\r\n    conditions: [\r\n        {\r\n            lowerCgpa: '',\r\n            lowerPercentage: '',\r\n            upperCgpa: '',\r\n            upperPercentage: ''\r\n        },\r\n    ],\r\n    avgPackage: ''\r\n};\r\n\r\n\r\nconst SuggestionForm = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [conditionTag, setConditionTag] = useState(['10th']);\r\n\r\n    const [college, setCollege] = useState([]);\r\n\r\n    const [improvement, setImprovement] = useState([]);\r\n\r\n    const [sector, setSector] = useState([]);\r\n\r\n    const [company, setCompany] = useState([]);\r\n\r\n    const [course, setCourse] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [message, setMesssage] = useState('');\r\n\r\n    const [severity, setSeverity] = useState('');\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleCourseChange = (chips) => {\r\n        setCourse(chips);\r\n    }\r\n\r\n    const handleCompanyChange = (chips) => {\r\n        setCompany(chips);\r\n    }\r\n\r\n    const handleSectorChange = (chips) => {\r\n        setSector(chips);\r\n    }\r\n\r\n    const handleCollegeChange = (chips) => {\r\n        setCollege(chips);\r\n    };\r\n\r\n    const handleImprovementChange = (chips) => {\r\n        setImprovement(chips);\r\n    }\r\n\r\n    const handleButtonClick = () => {\r\n        props.history.push(\"/app/suggestion/list\");\r\n    }\r\n\r\n    const checkConditionExist = async (conditionName) => {\r\n        try {\r\n            const res = await api.post(\r\n                \"/admin/checkConditionExist\",\r\n                {\r\n                    conditionName\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            console.log(\"CONDITON \", res.data);\r\n            return res.data.response;\r\n        } catch (error) {\r\n            setMesssage('Something went wrong');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const saveSuggestion = async (conditions, conditionName, avgPackage) => {\r\n        try {\r\n            setLoading(true);\r\n            await api.post(\r\n                \"/admin/saveSuggestion\",\r\n                {\r\n                    conditions,\r\n                    conditionName,\r\n                    colleges: college,\r\n                    improvements: improvement,\r\n                    courses: course,\r\n                    companies: company,\r\n                    sectors: sector,\r\n                    avgPackage\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setLoading(false);\r\n            setMesssage('Suggestion succesfully created');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Suggestion creation failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {loading && (\r\n                <Backdrop className={classes.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen} />\r\n            )}\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={async (values) => {\r\n                    conditionTag.map((condition, index) => {\r\n                        values.conditions[index].condition = condition;\r\n                    });\r\n                    var flag = false;\r\n                    values.conditions.forEach(cond => {\r\n                        if (cond.lowerCgpa == '' || cond.lowerPercentage == '' || cond.upperCgpa == '' || cond.upperPercentage == '') {\r\n                            flag = true;\r\n                        }\r\n                    });\r\n                    if (flag || values.conditionName == '' || values.avgPackage == '' || college.length == 0 || improvement.length == 0 || course.length == 0 || company.length == 0 || sector.length == 0) {\r\n                        setMesssage('Fields cannot be empty');\r\n                        setSeverity('error');\r\n                        setOpen(true);\r\n                    }else if (await checkConditionExist(values.conditionName)) {\r\n                        setMesssage('Condition name already exist');\r\n                        setSeverity('error');\r\n                        setOpen(true);\r\n                    } else {\r\n                        saveSuggestion(values.conditions, values.conditionName, values.avgPackage);\r\n                    }\r\n                }}\r\n            >\r\n                {({ values }) => (\r\n                    <Form className={classes.form}>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                        >\r\n                            <Grid\r\n                                className={classes.row}\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label} >Condition Name : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Field\r\n                                        className={classes.textField}\r\n                                        name=\"conditionName\"\r\n                                        placeholder=\"name\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <FieldArray name=\"conditions\">\r\n                                {({ insert, remove, push }) => (\r\n                                    <>\r\n                                        {values.conditions.map((condition, index) => (\r\n                                            <Grid\r\n                                                container\r\n                                                direction=\"column\"\r\n                                                className={classes.row}\r\n                                                justify=\"space-between\"\r\n                                            >\r\n                                                <label className={classes.label} >Set Condition {index + 1} :</label>\r\n                                                <Select\r\n                                                    className={classes.dropDown}\r\n                                                    labelId='demo-simple-select-label'\r\n                                                    id='conditionTag'\r\n                                                    variant='outlined'\r\n                                                    size=\"small\"\r\n                                                    value={conditionTag[index]}\r\n                                                    onChange={(event) => {\r\n                                                        var items = [...conditionTag];\r\n                                                        items[index] = event.target.value;\r\n                                                        setConditionTag(items);\r\n                                                    }}\r\n                                                >\r\n                                                    <MenuItem value='10th'>10th Standard</MenuItem>\r\n                                                    <MenuItem value='12th'>12th Standard</MenuItem>\r\n                                                    <MenuItem value='degree'>Degree</MenuItem>\r\n                                                    <MenuItem value='communication'>Communication</MenuItem>\r\n                                                    <MenuItem value='aptitude'>Aptitude</MenuItem>\r\n                                                    <MenuItem value='logical'>Logical Reasoning</MenuItem>\r\n                                                    <MenuItem value='technical'>Technical</MenuItem>\r\n                                                </Select>\r\n                                                <Grid\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    className={classes.row}\r\n                                                    justify=\"space-around\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <label className={classes.label}>Lower Limit :</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.lowerCgpa`}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                    <label className={classes.and}>and</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.lowerPercentage`}\r\n                                                        placeholder=\"Percentage\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    className={classes.row}\r\n                                                    justify=\"space-around\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <label className={classes.label}>Upper Limit :</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.upperCgpa`}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                    <label className={classes.and}>and</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.upperPercentage`}\r\n                                                        placeholder=\"Percentage\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </Grid>\r\n                                                {\r\n                                                    (index === 0) ?\r\n                                                        null\r\n                                                        :\r\n                                                        <Button\r\n                                                            type=\"button\"\r\n                                                            className=\"secondary\"\r\n                                                            onClick={() => remove(index)}\r\n                                                        >\r\n                                                            X\r\n                                                        </Button>\r\n                                                }\r\n                                            </Grid>\r\n                                        ))}\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"secondary\"\r\n                                            onClick={() => push({\r\n                                                condition: '',\r\n                                                lowerCgpa: '',\r\n                                                lowerPercentage: '',\r\n                                                upperCgpa: '',\r\n                                                upperPercentage: ''\r\n                                            })}\r\n                                        >\r\n                                            Add\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n                            </FieldArray>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Set Colleges : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: college 1 , college 2\"\r\n                                        helperText=\"Press enter after each college\"\r\n                                        onChange={(chips) => handleCollegeChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Sectors To Improve : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: improvement 1 , improvement 2\"\r\n                                        helperText=\"Press enter after each improvement\"\r\n                                        onChange={(chips) => handleImprovementChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Courses To Pursue : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: course 1 , course 2\"\r\n                                        helperText=\"Press enter after each course\"\r\n                                        onChange={(chips) => handleCourseChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Offering Companies : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: company 1 , company 2\"\r\n                                        helperText=\"Press enter after each company\"\r\n                                        onChange={(chips) => handleCompanyChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Strong Sectors : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: sector 1 , sector 2\"\r\n                                        helperText=\"Press enter after each sector\"\r\n                                        onChange={(chips) => handleSectorChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Average Package : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Field\r\n                                        className={classes.textField}\r\n                                        name=\"avgPackage\"\r\n                                        placeholder=\"Package\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                            >\r\n                                <Button\r\n                                    variant='outlined'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    onClick={handleButtonClick}\r\n                                >View Saved suggestions</Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    type=\"submit\"\r\n                                >Submit</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuggestionForm;"]},"metadata":{},"sourceType":"module"}