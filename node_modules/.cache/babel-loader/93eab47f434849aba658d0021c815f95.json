{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AppBar, Box, Container, CssBaseline, Link, Typography } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getRoles, logout } from '../../actions/userActions';\nimport SimpleLoading from '../../components/loading/SimpleLoading';\nimport HeaderProfileMenu from '../../components/widgets/HeaderProfileMenu';\nimport clearStorage from '../../services/clearStorage';\nimport Routing from './Routing';\nimport Sidebar from './Sidebar';\nimport useStyles from './styles';\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, 'Copyright Â© ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"BestEnlist admin\"), ' ', new Date().getFullYear(), '.');\n}\n\n_c = Copyright;\n\nfunction Dashboard(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const userRole = useSelector(state => state.userRole);\n  const {\n    roles\n  } = userRole;\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [showProgress, setShowProgress] = useState(true);\n  const [status, setStatus] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  }; //redirect back to login page if request is unauthorised\n\n\n  useEffect(() => {\n    if (status === 401) dispatch(logout(props.history));\n  }, [status]);\n\n  const logoutClicked = () => {\n    clearStorage();\n    dispatch(logout(props.history));\n  }; // TODO\n\n\n  useEffect(() => {\n    dispatch(getRoles(setShowProgress, setStatus));\n  }, []);\n  if (showProgress) return /*#__PURE__*/React.createElement(SimpleLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 30\n    }\n  });else return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"absolute\",\n    elevation: 0,\n    className: clsx(classes.appBar, open && classes.appBarShift) // style={{backgroundColor:\"#1976d2\"}}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    noWrap: true,\n    className: classes.title,\n    style: open ? {\n      marginLeft: '20px'\n    } : {\n      marginLeft: '70px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"BestEnlist Admin\"), /*#__PURE__*/React.createElement(HeaderProfileMenu, {\n    logoutClicked: logoutClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Sidebar, {\n    handleDrawerClose: handleDrawerClose,\n    handleDrawerOpen: handleDrawerOpen,\n    open: open,\n    roles: roles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appBarSpacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xl\",\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Routing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    pt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  })))));\n}\n\n_s(Dashboard, \"yaUcXCqZxaQ905i63+fhmHjXZYM=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c2 = Dashboard;\nexport default _c3 = withRouter(Dashboard);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/index.js"],"names":["React","useEffect","useState","AppBar","Box","Container","CssBaseline","Link","Typography","Toolbar","clsx","useDispatch","useSelector","withRouter","getRoles","logout","SimpleLoading","HeaderProfileMenu","clearStorage","Routing","Sidebar","useStyles","Copyright","Date","getFullYear","Dashboard","props","dispatch","userRole","state","roles","classes","open","setOpen","showProgress","setShowProgress","status","setStatus","handleDrawerOpen","handleDrawerClose","history","logoutClicked","root","appBar","appBarShift","toolbar","title","marginLeft","content","appBarSpacer","container"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AppBar, Box, Container, CssBaseline, Link, Typography } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport clsx from 'clsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getRoles, logout } from '../../actions/userActions';\r\nimport SimpleLoading from '../../components/loading/SimpleLoading';\r\nimport HeaderProfileMenu from '../../components/widgets/HeaderProfileMenu';\r\nimport clearStorage from '../../services/clearStorage';\r\nimport Routing from './Routing';\r\nimport Sidebar from './Sidebar';\r\nimport useStyles from './styles';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant='body2' color='textSecondary' align='center'>\r\n            {'Copyright Â© '}\r\n            <Link color='inherit' to='/'>\r\n                BestEnlist admin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction Dashboard(props) {\r\n    const dispatch = useDispatch();\r\n    const userRole = useSelector((state) => state.userRole);\r\n    const { roles } = userRole;\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(true);\r\n    const [showProgress, setShowProgress] = useState(true);\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //redirect back to login page if request is unauthorised\r\n    useEffect(() => {\r\n        if (status === 401) dispatch(logout(props.history));\r\n    }, [status]);\r\n\r\n    const logoutClicked = () => {\r\n        clearStorage();\r\n        dispatch(logout(props.history));\r\n    };\r\n    // TODO\r\n    useEffect(() => {\r\n        dispatch(getRoles(setShowProgress, setStatus));\r\n    }, []);\r\n    if (showProgress) return <SimpleLoading/>;\r\n    else\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position='absolute'\r\n                    elevation={0}\r\n                    className={clsx(\r\n                        classes.appBar,\r\n                        open && classes.appBarShift\r\n                    )}\r\n                    // style={{backgroundColor:\"#1976d2\"}}\r\n                >\r\n                    <Toolbar className={classes.toolbar}>\r\n                        {/* <IconButton\r\n            edge=\"start\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n                        <Typography\r\n                            component='h1'\r\n                            variant='h6'\r\n                            noWrap\r\n                            className={classes.title}\r\n                            style={\r\n                                open\r\n                                    ? { marginLeft: '20px' }\r\n                                    : { marginLeft: '70px' }\r\n                            }\r\n                        >\r\n                            BestEnlist Admin\r\n                        </Typography>\r\n                        {/* <IconButton style={{color:\"white\"}}>\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton> */}\r\n                        <HeaderProfileMenu logoutClicked={logoutClicked} />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Sidebar\r\n                    handleDrawerClose={handleDrawerClose}\r\n                    handleDrawerOpen={handleDrawerOpen}\r\n                    open={open}\r\n                    roles={roles}\r\n                />\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth='xl' className={classes.container}>\r\n                        <Routing />\r\n                        <Box pt={4}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        );\r\n}\r\nexport default withRouter(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}