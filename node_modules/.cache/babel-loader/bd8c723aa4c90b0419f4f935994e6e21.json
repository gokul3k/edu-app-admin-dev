{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work-Files\\\\Maxffort\\\\Client-Projects\\\\HSST-Madhi-Consultancy\\\\Code\\\\dev\\\\edu-project\\\\live\\\\edu-app-admin\\\\src\\\\pages\\\\DashboardPage\\\\Students\\\\StudentMail\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Chip, Button, Grid, TextField, Icon, Backdrop, CircularProgress, Snackbar, Paper, useEventCallback } from \"@material-ui/core\";\nimport { useFormik } from \"formik\";\nimport api from \"../../../../api/api\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { getCredentials } from \"../../../../services/authService\";\nimport { resetSelectedStudents } from \"../../../../actions/studentActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  },\n  form: {}\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }));\n}\n\n_c = Alert;\nexport default function StudentMail(props) {\n  _s();\n\n  const selectedStudents = useSelector(state => state.selectedStudents);\n  const {\n    selected\n  } = selectedStudents;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [emails, setEmails] = useState([]);\n  useEffect(() => {\n    if (selected.length === 0) props.history.goBack();\n    selected.map(item => {\n      setEmails(emails => emails.concat(item.Email));\n    });\n    return () => {};\n  }, []);\n\n  const handleDelete = email => {\n    console.log(email);\n    setEmails(chips => chips.filter(chip => chip !== email));\n    if (emails.length === 0) props.history.goBack();\n  };\n\n  const sendEmail = async (emails, values) => {\n    setLoading(true);\n\n    try {\n      const res = await api.post(\"/admin/sendBulkEmail\", {\n        emails: emails,\n        content: values.message,\n        subject: values.subject\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCredentials()}`\n        }\n      }, {\n        timeout: 1000\n      });\n      console.log(\"res em\", res);\n      setLoading(false);\n      setComplete(true);\n      setOpen(true);\n      setTimeout(() => {\n        props.history.goBack();\n      }, 1000);\n    } catch (err) {\n      setLoading(false);\n      setComplete(false);\n      setOpen(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    setComplete(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      message: \"\",\n      subject: \"\"\n    },\n    onSubmit: values => {\n      sendEmail(emails, values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: open,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })), open && /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: complete ? \"success\" : \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, complete ? \"Email successfully send\" : \"Error\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, emails.map(em => {\n    let icon;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: em,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      icon: icon,\n      label: em,\n      onDelete: () => handleDelete(em),\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      margin: 8\n    },\n    label: \"Subject\",\n    variant: \"outlined\",\n    name: \"subject\",\n    fullWidth: true,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.subject,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      margin: 8\n    },\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.message,\n    name: \"message\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: loading || emails.length < 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"send\"))));\n}\n\n_s(StudentMail, \"BGki6f1fXSyWXFR3rpLPnmKDIFw=\", false, function () {\n  return [useSelector, useDispatch, useStyles, useFormik];\n});\n\n_c2 = StudentMail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"StudentMail\");","map":{"version":3,"sources":["E:/Work-Files/Maxffort/Client-Projects/HSST-Madhi-Consultancy/Code/dev/edu-project/live/edu-app-admin/src/pages/DashboardPage/Students/StudentMail/index.js"],"names":["React","useState","useEffect","makeStyles","Chip","Button","Grid","TextField","Icon","Backdrop","CircularProgress","Snackbar","Paper","useEventCallback","useFormik","api","MuiAlert","getCredentials","resetSelectedStudents","useDispatch","useSelector","useStyles","theme","root","display","flexDirection","justifyContent","flexWrap","listStyle","margin","chip","spacing","backdrop","zIndex","drawer","color","form","Alert","props","StudentMail","selectedStudents","state","selected","dispatch","classes","loading","setLoading","complete","setComplete","open","setOpen","emails","setEmails","length","history","goBack","map","item","concat","Email","handleDelete","email","console","log","chips","filter","sendEmail","values","res","post","content","message","subject","headers","Authorization","timeout","setTimeout","err","handleClose","event","reason","formik","initialValues","onSubmit","em","icon","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Icon,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Snackbar,\r\n  Paper,\r\n  useEventCallback,\r\n} from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport api from \"../../../../api/api\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { getCredentials } from \"../../../../services/authService\";\r\nimport { resetSelectedStudents } from \"../../../../actions/studentActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  form: {},\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default function StudentMail(props) {\r\n  const selectedStudents = useSelector((state) => state.selectedStudents);\r\n  const { selected } = selectedStudents;\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [complete, setComplete] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [emails, setEmails] = useState([]);\r\n  useEffect(() => {\r\n    if (selected.length === 0) props.history.goBack()\r\n\r\n    selected.map((item) => {\r\n      setEmails((emails) => emails.concat(item.Email));\r\n    });\r\n    return () => { };\r\n  }, []);\r\n\r\n  const handleDelete = (email) => {\r\n    console.log(email)\r\n    setEmails((chips) => chips.filter((chip) => chip !== email));\r\n    if (emails.length === 0) props.history.goBack()\r\n  };\r\n  const sendEmail = async (emails, values) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await api.post(\r\n        \"/admin/sendBulkEmail\",\r\n        { emails: emails, content: values.message, subject: values.subject },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      console.log(\"res em\", res);\r\n      setLoading(false);\r\n      setComplete(true);\r\n      setOpen(true);\r\n      setTimeout(()=>{\r\n        props.history.goBack();\r\n      }, 1000)\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setComplete(false);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false)\r\n    setComplete(false);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      message: \"\",\r\n      subject: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      sendEmail(emails, values);\r\n    },\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      {loading && (\r\n        <Backdrop\r\n          className={classes.backdrop}\r\n          open={open}\r\n          onClick={handleClose}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      )}\r\n      {open && (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert\r\n            onClose={handleClose}\r\n            severity={complete ? \"success\" : \"error\"}\r\n          >\r\n            {complete ? \"Email successfully send\" : \"Error\"}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n      <div>\r\n        {emails.map((em) => {\r\n          let icon;\r\n          return (\r\n            <li key={em}>\r\n              <Chip\r\n                icon={icon}\r\n                label={em}\r\n                onDelete={() => handleDelete(em)}\r\n                className={classes.chip}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </div>\r\n      <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n        <TextField\r\n          style={{ margin: 8 }}\r\n          label=\"Subject\"\r\n          variant=\"outlined\"\r\n          name=\"subject\"\r\n          fullWidth\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.subject}\r\n          disabled={loading}\r\n        />\r\n        <TextField\r\n          style={{ margin: 8 }}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.message}\r\n          name=\"message\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          disabled={loading}\r\n        />\r\n        <Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={loading || emails.length < 1}\r\n          >\r\n            send\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}