{"version":3,"sources":["pages/DashboardPage/Home/Home.module.css","components/AddUserComponent/AddUser.module.css","components/AddUserTextField/AddUserTextField.module.css","../node_modules/jspdf/dist sync","components/tables/UserTable/UserTable.module.css","services/authService/isLoggedIn.js","services/authService/removeCredentials.js","api/api.js","services/authService/updatePassword.js","services/authService/getCredentials.js","constants/userConstants.js","services/clearStorage.js","actions/userActions.js","services/userService/userInfo.js","components/alerts/SimpleAlert/index.js","components/buttons/AdornedButton/index.js","components/dialogs/PasswordResetDialog/index.js","pages/SigninPage/index.js","services/authService/setCredentials.js","pages/NotFoundPage/index.js","components/loading/SimpleLoading/index.js","components/widgets/HeaderProfileMenu/styles.js","components/Wrappers/Wrappers.js","components/widgets/HeaderProfileMenu/index.js","constants/studentConstants.js","actions/studentActions.js","components/tables/StudentTable/index.js","pages/DashboardPage/Users/UserItemDetails/index.js","components/tables/UserTable/index.js","pages/DashboardPage/Users/AllUsers/index.js","components/AddUserTextField/index.js","components/AddUserComponent/index.js","components/SnackBar/index.js","pages/DashboardPage/Users/AddUser/index.js","pages/DashboardPage/Users/index.js","constants/examConstants.js","actions/examActions.js","pages/DashboardPage/Exams/AddExam/One/index.js","components/buttons/ExcelReader/index.js","components/dialogs/QuestionDialog/index.js","components/dialogs/ConfirmDeletePopper/index.js","components/list/QuestionListItem/index.js","components/menu/ExamDetailsMenu/index.js","pages/DashboardPage/Exams/ExamDetails/Details.js","pages/DashboardPage/Exams/ExamDetails/Instructions.js","pages/DashboardPage/Exams/ExamDetails/Questions.js","components/tables/MarkListTable/index.js","pages/DashboardPage/Exams/ExamDetails/ExamMarkList.js","pages/DashboardPage/Exams/MarkLIst/index.js","pages/DashboardPage/Exams/ExamDetails/ExamAssignStudents.js","pages/DashboardPage/Exams/ExamDetails/EditQuestions.js","pages/DashboardPage/Exams/ExamDetails/index.js","pages/DashboardPage/Exams/AddExam/Three/index.js","pages/DashboardPage/Exams/AddExam/Two/index.js","pages/DashboardPage/Exams/AddExam/index.js","components/tables/ExamTable/index.js","pages/DashboardPage/Exams/ExamList/index.js","pages/DashboardPage/Exams/index.js","components/cards/HomeFeatureCard/index.js","assets/images/card_bg1.svg","assets/images/card_bg2.svg","assets/images/card_bg3.svg","assets/images/card_bg4.svg","pages/DashboardPage/Home/Features.js","pages/DashboardPage/Home/index.js","constants/adConstants.js","actions/adActions.js","components/tables/AdTable/AssignStudents.js","components/tables/AdTable/index.js","pages/DashboardPage/AdManager/AdListing/index.js","components/AdTextField/index.js","components/AddTextAdComponent/index.js","components/tables/AdStudentTable/index.js","pages/DashboardPage/AdManager/TextAd/index.js","assets/images/ad_uploadimg.svg","components/AddPhotoAdComponent/index.js","pages/DashboardPage/AdManager/PhotoAd/index.js","pages/DashboardPage/AdManager/index.js","constants/interviewConstants.js","components/tables/InterviewTable/index.js","actions/interviewActions.js","pages/DashboardPage/Interviews/InterviewListing/index.js","components/CustomTextField/index.js","components/CustomDateField/index.js","components/AddInterviewComponent/index.js","pages/DashboardPage/Interviews/AddInterview/index.js","components/InterviewDetailComponent/AssignStudents.js","components/InterviewDetailComponent/index.js","components/tables/InterviewStudentTable/index.js","components/InterviewStudentSelection/index.js","pages/DashboardPage/Interviews/InterviewDetail/index.js","pages/DashboardPage/Interviews/index.js","pages/DashboardPage/Settings/index.js","components/menu/StudentListMenu/index.js","pages/DashboardPage/Students/StudentList/index.js","pages/DashboardPage/Students/StudentDetails/styles.js","components/Resume/styles.js","components/Resume/BasicInfo.js","components/Resume/List.js","components/Resume/Skills.js","components/Resume/Education.js","components/Resume/Address.js","components/Resume/About.js","components/Resume/Experience.js","components/Resume/index.js","pages/DashboardPage/Students/StudentDetails/StudentMarkList.js","pages/DashboardPage/Students/StudentDetails/Details.js","pages/DashboardPage/Students/StudentDetails/index.js","pages/DashboardPage/Students/StudentMail/index.js","pages/DashboardPage/Students/index.js","components/SuggestionForm/index.js","components/tables/SuggestionTable/DetailDialog.js","components/tables/SuggestionTable/index.js","pages/DashboardPage/SuggestionManager/index.js","pages/DashboardPage/Routing.js","pages/DashboardPage/Sidebar/styles.js","pages/DashboardPage/Sidebar/index.js","pages/DashboardPage/Sidebar/listItems.js","pages/DashboardPage/styles.js","pages/DashboardPage/index.js","pages/ResetPassword/index.js","App.js","serviceWorker.js","constants/layoutConstants.js","reducers/examReducers.js","store.js","reducers/userReducers.js","reducers/layoutReducers.js","reducers/studentReducer.js","reducers/adReducers.js","reducers/interviewReducer.js","themes/default.js","themes/index.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","isLoggedIn","console","log","Cookie","get","setCredential","Cookies","remove","axios","create","baseURL","DEV_URL","updatePassword","token","password","a","api","post","encodedString","headers","data","getCredentials","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_PASSWORD_RESET_REQUEST","USER_PASSWORD_RESET_SUCCESS","USER_PASSWORD_RESET_FAIL","USER_PASSWORD_RESET_COMPLETE","USER_ROLES_REQUEST","USER_ROLES_SUCCESS","USER_ROLES_FAIL","USER_LOGOUT","clearStorage","localStorage","clear","logout","history","dispatch","type","removeCredentials","replace","SimpleAlert","severity","msg","Alert","SpinnerAdornment","withStyles","theme","root","marginLeft","props","CircularProgress","className","classes","spinner","size","AdornedButton","children","loading","rest","Button","PasswordResetDialog","handleClickOpen","open","handleClose","resetPasswordOnSubmit","ploading","useSelector","state","userSignin","useState","email","setEmail","valid","setValid","done","setDone","error","setError","onClickOk","useDispatch","Dialog","onClose","aria-labelledby","DialogTitle","renderAlert","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","disabled","length","value","onChange","currentTarget","string","required","isValidSync","DialogActions","variant","color","disableElevation","onClick","useStyles","makeStyles","paper","display","flexDirection","alignItems","avatar","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","backgroundImage","justifyContent","backgroundBlendMode","height","overflow","paperContainer","maxWidth","maxHeight","padding","SignIn","signed","alert","setAlert","openDialog","setOpenDialog","useEffect","formik","useFormik","initialValues","username","validationSchema","Yup","onSubmit","values","timeout","response","set","user","Email","name","Username","role","Role","setItem","removeItem","res","signin","Paper","elevation","resetPassword","Avatar","Typography","component","showAlert","noValidate","handleSubmit","autoComplete","errors","touched","helperText","handleChange","Grid","container","item","xs","style","textTransform","NotFoundPage","SimpleLoading","logotype","marginRight","fontWeight","fontSize","whiteSpace","breakpoints","down","toolbar","paddingLeft","paddingRight","hide","grow","flexGrow","headerMenu","headerMenuList","headerMenuItem","primary","headerMenuButton","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","boxShadow","profileMenuUser","profileMenuItem","text","hint","profileMenuIcon","profileMenuLink","textDecoration","cursor","badge","weight","colorBrightness","useTheme","getColor","getFontWeight","getFontSize","brigtness","multiplier","defaultSize","typography","HeaderProfileMenu","logoutClicked","setProfileMenu","getItem","IconButton","aria-haspopup","aria-controls","Menu","Boolean","anchorEl","disableAutoFocusItem","charAt","toUpperCase","slice","SET_SELECTED_STUDENTS","RESET_SELECTED_STUDENTS","setSelectedStudents","payload","resetSelectedStudents","StudentTable","remoteData","minimal","actionsOptions","icon","Refresh","tooltip","isFreeAction","exportButton","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","options","search","selection","filtering","headerStyle","icons","title","columns","field","align","actions","onSelectionChange","rows","onRowClick","event","rowData","push","flex","card","heading","backdrop","zIndex","drawer","UserItemDetails","setUser","setLoading","setData","selected","selectedStudents","getUserData","match","params","userId","Authorization","assignStudents","students","adminId","Backdrop","Card","CardContent","direction","justify","Name","Status","connect","allUsers","getAllUser","disableUser","status","operation","actionOptions","PersonAddDisabled","evt","editable","onRowUpdate","newData","oldData","actionsColumnIndex","rowStyle","lookup","HR_USER","SUPER_USER","ADMIN","active","inactive","btn","btnContainer","alignContent","AllUsers","AddUserTextField","styleClasses","textField","useStyle","styles","AddUserComponent","onSubmitClicked","setRole","button","borderRadius","organization","confirmpassword","matches","oneOf","buttonRoleHeadingContainer","buttonRoleContainer","Select","labelId","target","MenuItem","SnackBar","message","setOpen","reason","Snackbar","autoHideDuration","AddUser","err","setErr","createUser","goBack","link","grey","fontWeightRegular","withRouter","location","useLocation","Container","Breadcrumbs","separator","aria-label","to","aria-current","pathname","ActiveLastBreadcrumb","exact","path","GET_ALL_EXAMS","PUBLISH_EXAM_REQUEST","PUBLISH_EXAM_SUCCESS","PUBLISH_EXAM_FAIL","GET_EXAM_DETAIL","GET_EXAM_QUESTIONS","GET_EXAM_INSTRUCTIONS","GET_EXAM_REQUEST","GET_EXAM_SUCCESS","GET_EXAM_FAIL","getExam","details","exam","questions","instructions","getExamQuestions","counts","grid","marginBottom","One","handleNext","publishExam","startDate","endDate","startTime","endTime","duration","difficulty","examtype","getExamDetails","multiline","rowsMax","onBlur","handleBlur","FormControl","formControl","InputLabel","format","setFieldValue","InputLabelProps","shrink","InputProps","inputProps","min","moment","input","borderColor","opacity","ExcelReader","setCols","accept","multiple","files","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","bookVBA","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","make_cols","readAsArrayBuffer","htmlFor","startIcon","refstr","o","C","decode_range","c","i","encode_col","key","appBar","position","add","Transition","React","Slide","QuestionDialog","question","setQuestion","addData","index","resetForm","no","option1","option2","option3","option4","answer","mark","neg","fullScreen","TransitionComponent","AppBar","Toolbar","edge","ConfirmDeletePopper","handleClick","onDelete","setAnchorEl","undefined","Popover","anchorOrigin","vertical","horizontal","transformOrigin","header","option","paddingTop","paddingBottom","span","ansPaper","buttonContainer","optionLabel","ansLabel","QuestionListItem","onEdit","edit","area-label","delete","Chip","square","Divider","SimpleMenu","onEditClicked","onDisableClicked","onAssignClicked","onDeleteClicked","onUpdateQuestionsClicked","onReplaceQuestionsClicked","keepMounted","getContentAnchorEl","Details","Title","StartDate","Moment","EndDate","StartTime","EndTime","Duration","ac","AptitudeCount","lc","LogicalCount","cc","CommunicationCount","tc","TechnicalCount","readOnly","Instructions","tableColumns","cellStyle","editComponent","onRowAdd","Promise","reject","setTimeout","instruction","dataUpdate","tableData","onRowDelete","dataDelete","splice","map","val","Instruction","sorting","pageSizeOptions","overflowY","overflowX","scrollbarWidth","Questions","gutterBottom","Object","reduce","k","toLowerCase","MarkListTable","studentId","examId","isStudentTable","types","tableStudentColumns","tableExamColumns","isLoading","ExamMarkList","ExamAssignStudents","setMesssage","setSeverity","EditQuestions","update","scrollbarColor","menuContainer","ExamDetails","setEdit","progress","setStatus","setUpdate","pgs","setPgs","disableExam","editExam","mode","updateQuestions","replaceQuestions","window","reload","render","insert","Three","handleBack","setAc","setLc","setCc","setTc","l","t","findIndex","x","filter","j","concat","items","textAlign","max","Two","getExamInstructions","resetContainer","light","AddExam","activeStep","setActiveStep","complete","checked","prevActiveStep","Stepper","orientation","Step","StepLabel","StepContent","getState","practise","createExam","ExamTable","allExams","limit","offset","ExamList","LinkRouter","Link","RouterLink","pathnames","split","last","join","image","focusVisible","imageButton","left","right","top","bottom","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","black","transition","transitions","imageTitle","imageMarked","HomeFeatureCard","img","bgColor","ButtonBase","focusRipple","focusVisibleClassName","flexWrap","Features","roles","userRole","features","url","cardBg1","show","ENROLLMENTS","ALL_STUDENTS","cardBg2","ADVERTISEMENTS","cardBg3","USER_ACCESS","ALL_USERS","cardBg4","EXAMS_LISTING","ALL_EXAMS","Home","studentCount","setStudentCount","examCount","setExamCount","adCount","setAdCount","getCountDetails","enrolledStudCount","Count","upcomingExamCount","adsCount","stats","welcome","paperTitle","paperContent","GET_ALL_ADS_REQUEST","GET_ALL_ADS_SUCCESS","GET_ALL_ADS_FAIL","getAllAds","AssignStudents","adId","AdTable","ads","setId","deleteAd","PersonAdd","AdListing","AdTextField","buttonZoneContainer","AddTextAdComponent","adZone","saveAd","ad","handleReset","adName","companyName","skills","designation","phoneNo","experience","domain","formValue","formRef","useRef","current","reset","AdStudentTable","then","catch","TextAd","dropdown","submitButton","AddPhotoAdComponent","setAdZone","adUploadImg","picture","setPicture","adPic","setAdPic","formValues","inputFile","formData","FormData","append","JSON","stringify","config","method","Accept","Axios","click","file","addEventListener","readAsDataURL","src","alt","PhotoAd","mapp","GET_ALL_INTERVIEWS_FAIL","GET_ALL_INTERVIEWS_REQUEST","GET_ALL_INTERVIEWS_SUCCESS","InterviewTable","interviews","InterviewListing","CustomTextField","dropDown","AddInterviewComponent","adminUsers","setAdminUsers","assignTo","setAssignTo","interviewName","interviewBy","date","saveInterview","getAdminUsers","interview","CustomDateField","ROLE","AddInterview","interviewId","InterviewDetailComponent","setInterview","getInterviewDetail","handleStatusClick","InterviewName","InterviewBy","Date","TotalCandidates","InterviewStudentTable","formGroup","gridItem","InterviewStudentSelection","aptitude","language","logical","coding","others","rejectState","setRejectState","selectState","setSelectState","studentData","setStudentData","setInterviewId","intId","getInterviewStudentData","submitInterview","studentName","selectionStatus","timesAttended","postponedDate","salary","improvements","joiningDate","apiData","submitInterviewStudentData","property","selectReason","String","rejectReason","handleRejectionChange","handleSelectionChange","subHeading","FormGroup","column","FormControlLabel","control","Checkbox","placeholder","InterviewDetail","minHeight","nested","Settings","defaultAbout","setDefaultAbout","buttonText","setButtonText","getDefaultAboutUs","aboutUs","setDefaultAboutUs","enableReinitialize","About","List","ListItem","ListItemIcon","ListItemText","Collapse","in","unmountOnExit","defaultValue","StudentListMenu","goToMail","divider","fullName","phone","StyleSheet","page","fontFamily","leftColumn","rightColumn","viewGroup","studentInfo","FullName","credDetails","addrDetails","PhoneNo","bulletPoint","itemContent","Item","skill","line","educationBlk","educationInBlk1","educationInBlk2","Skill","Education","acadDetails","SchoolName10","Location10","Cgpa10","Board10","SchoolName12","Location12","Cgpa12","Board12","degreeDetails","degree","CollegeName","Location","Degree","Cgpa","addressMain","AddressLine1","AddressLine2","City","State","about","break","miniHeading","FromDate","ToDate","JobTitle","CompanyName","MyDocument","BasicInfo","studentAbout","Address","studentSkills","Skills","studentExperience","Experience","StudentMarkList","Font","register","family","registerHyphenationCallback","word","colorBg","newPaper","newPaper1","leftMargin","inline","resumeButton","getStudentDetails","sm","ProfilePic","document","fileName","blob","Gender","Dob","ListItemAvatar","Fragment","element","certifications","CertificationName","Institute","StudentDetails","listStyle","chip","StudentMail","setComplete","emails","setEmails","sendEmail","content","subject","em","chips","StudentList","borderWidth","row","and","conditionName","conditions","lowerCgpa","lowerPercentage","upperCgpa","upperPercentage","avgPackage","SuggestionForm","conditionTag","setConditionTag","college","setCollege","improvement","setImprovement","sector","setSector","company","setCompany","course","setCourse","handleButtonClick","checkConditionExist","saveSuggestion","colleges","courses","companies","sectors","condition","flag","forEach","cond","handleCollegeChange","handleImprovementChange","handleCourseChange","handleCompanyChange","handleSectorChange","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","DetailDialog","ConditionName","getDetail","dividers","paging","showTitle","border","SuggestionTable","suggestions","setSuggestions","getSuggestions","deleteSuggestion","suggestionName","TrainRounded","AdManager","Interviews","Students","SuggestionManager","Users","Exams","toolbarIcon","mixins","menuButton","drawerPaper","background","nav","backgroundRepeat","easing","sharp","enteringScreen","drawerPaperClose","leavingScreen","up","listHeading","Sidebar","handleDrawerClose","handleDrawerOpen","Drawer","clsx","menuButtonHidden","RLLink","ListSubheader","inset","enrolmentsList","INTERVIEWS","userListItems","examsList","ADMIN_SETTINGS","appBarShift","appBarSpacer","fixedHeight","Copyright","getFullYear","showProgress","setShowProgress","withCredentials","getRoles","CssBaseline","noWrap","Box","pt","ResetPassword","st","setSt","pass","pass2","yup","passwordShown","setPasswordShown","endAdornment","InputAdornment","mt","App","Reset","Signin","Dashboard","NotFound","hostname","TOGGLE_SIDEBAR","initialState","userInfo","getJSON","reducer","combineReducers","action","userRegister","userProfile","userUpdate","sidebar","isSidebarOpened","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","warning","success","info","lightenRate","tinycolor","lighten","toHexString","dark","darken","contrastText","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","MuiMenu","MuiSelect","MuiListItem","MuiTouchRipple","child","MuiTableRow","MuiTableCell","borderBottom","head","body","createMuiTheme","defaultTheme","h1","h2","h3","h4","h5","h6","ReactDOM","StrictMode","ThemeProvider","Themes","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e196183.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__AiQlQ\",\"stats\":\"Home_stats__2Kb4H\",\"welcome\":\"Home_welcome__1W6an\",\"paper\":\"Home_paper__sebj3\",\"paperTitle\":\"Home_paperTitle__2tHH5\",\"paperContent\":\"Home_paperContent__39rZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddUser_container__2Chgy\",\"form\":\"AddUser_form__2Lt67\",\"btn\":\"AddUser_btn__N4RcD\",\"buttonRoleHeadingContainer\":\"AddUser_buttonRoleHeadingContainer__3_MKy\",\"heading\":\"AddUser_heading__1H1xW\",\"buttonRoleContainer\":\"AddUser_buttonRoleContainer__3rDc0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddUserTextField_container__3ImWA\",\"textField\":\"AddUserTextField_textField__2CTVp\",\"heading\":\"AddUserTextField_heading__2lEa5\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 560;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserTable_container__IVN68\"};","// import { STORAGE_KEYS } from '../../constants';\r\nimport Cookie from 'js-cookie';\r\n\r\nconst isLoggedIn = () => {\r\n    console.log(\"admtk\",Cookie.get(\"admtk\")?true:false);\r\n    // return localStorage.getItem(\"tk\")? true:false;\r\n    return Cookie.get(\"admtk\") ? true:false;\r\n};\r\n\r\nexport default isLoggedIn;\r\n","import Cookies from 'js-cookie'\r\n\r\n\r\nexport default function setCredential(){\r\n    Cookies.remove('admtk');\r\n    // Cookies.remove('exp')\r\n}","import axios from 'axios';\r\nexport const BASE_URL = 'https://edu-app-server-beta.herokuapp.com';\r\nconst DEV_URL = 'https://edu-app-server-beta.herokuapp.com';\r\n\r\nexport default axios.create({\r\n    baseURL: DEV_URL+'/rest/v1'\r\n});\r\n","import api from '../../api/api';\r\nimport setCredentials from \"./setCredentials\";\r\n\r\nconst updatePassword = async (token,password) => {\r\n    try {\r\n        const data = await api.post('/admin/resetPassword',{ encodedString:token,password },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n        console.log(data);\r\n        // setCredentials(tk)\r\n        return 200;\r\n    } catch (err) {\r\n        console.log(err);\r\n        return 400;\r\n    }\r\n};\r\n    \r\nexport default updatePassword;","import Cookies from 'js-cookie'\r\n\r\nconst getCredentials = () => {\r\n     const tk = Cookies.get(\"admtk\")\r\n    // return localStorage.getItem(\"tk\")\r\n    return tk;\r\n};\r\n\r\nexport default getCredentials;\r\n","export const USER_SIGNIN_REQUEST = 'USER_SIGNIN_REQUEST';\r\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\r\nexport const USER_SIGNIN_FAIL = 'USER_SIGNIN_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_VERFIY_RESEND = 'USER_VERIY_RESEND';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\nexport const USER_VERIFY_SUCCESS = 'USER_VERIFY_SUCCESS';\r\n\r\n\r\nexport const USER_PASSWORD_RESET_REQUEST=\"USER_PASSWORD_RESET_REQUEST\";\r\nexport const USER_PASSWORD_RESET_SUCCESS=\"USER_PASSWORD_RESET_SUCCESS\";\r\nexport const USER_PASSWORD_RESET_FAIL=\"USER_PASSWORD_RESET_FAIL\";\r\nexport const USER_PASSWORD_RESET_COMPLETE=\"USER_PASSWORD_RESET_COMPLETE\";\r\n\r\nexport const ADD_PROFILE_DATA = 'ADD_PROFILE_DATA';\r\nexport const ADD_PROFILE_REG_DATA = 'ADD_PROFILE_REG_DATA';\r\nexport const ADD_PROFILE_REG_ADDRESS_DATA = 'ADD_PROFILE_REG_ADDRESS_DATA';\r\nexport const ADD_PROFILE_REG_RES_ADDRESS_DATA =\r\n    'ADD_PROFILE_REG_RES_ADDRESS_DATA';\r\nexport const ADD_PROFILE_REG_SCHOOL_DATA = 'ADD_PROFILE_REG_SCHOOL_DATA';\r\n\r\n\r\nexport const USER_ROLES_REQUEST = 'USER_ROLES_REQUEST';\r\nexport const USER_ROLES_SUCCESS = 'USER_ROLES_SUCCESS';\r\nexport const USER_ROLES_FAIL = 'USER_ROLES_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';","export default function clearStorage(){\r\n    localStorage.clear();\r\n\r\n}","import Axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport api from '../api/api';\r\nimport { getCredentials, isLoggedIn } from '../services/authService';\r\n\r\nimport {\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNIN_FAIL,   \r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_VERFIY_RESEND,\r\n    USER_REGISTER_FAIL,\r\n    USER_PASSWORD_RESET_REQUEST,\r\n    USER_PASSWORD_RESET_SUCCESS,\r\n    USER_PASSWORD_RESET_FAIL,\r\n    USER_PASSWORD_RESET_COMPLETE,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_ROLES_REQUEST,\r\n    USER_ROLES_SUCCESS,\r\n    USER_ROLES_FAIL,\r\n} from '../constants/userConstants';\r\nimport { setCredentials, removeCredentials } from '../services/authService';\r\nimport clearStorage from '../services/clearStorage';\r\nimport { setUserInfo } from '../services/userService';\r\nconst timeout = 1000;\r\nconst headers = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${getCredentials()}`,\r\n    },\r\n};\r\n\r\nconst signin = (username, password, history, setError) => async (\r\n    dispatch\r\n) => {\r\n    console.log(username, password);\r\n    removeCredentials();\r\n    clearStorage();\r\n    dispatch({ type: USER_SIGNIN_REQUEST, });\r\n    try {\r\n        const { data } = await api.post(\r\n            '/admin/login',\r\n            { username, password },\r\n            {\r\n                headers: { 'Content-Type': 'application/json' },\r\n            },\r\n            { timeout }\r\n        );\r\n        setCredentials(data.response.token);\r\n        setUserInfo(\r\n            data.response.user.Email,\r\n            data.response.user.Username,\r\n            data.response.user.Role\r\n        );\r\n        // setError(null);\r\n        localStorage.removeItem(\"signRe\")\r\n        localStorage.setItem(\"signRe\", true);\r\n        dispatch({ type: USER_SIGNIN_SUCCESS});\r\n        // setRedirect('app');\r\n        console.log(history);\r\n        history.replace('/app')\r\n    } catch (error) {\r\n        console.log(error);\r\n        const res = { ...error };\r\n        setError('error');\r\n        console.log('sign req error ', res);\r\n        if (res.response) {\r\n            dispatch({\r\n                type: USER_SIGNIN_FAIL,\r\n            });\r\n            setError('invalid request');\r\n        } else {\r\n            dispatch({\r\n                type: USER_SIGNIN_FAIL,\r\n            });\r\n            setError('Connection timeout');\r\n        }\r\n    }\r\n};\r\n\r\nconst getAllUser = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await api.post(\r\n                '/admin/getAdminUsers',\r\n                {},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                }\r\n            );\r\n            dispatch({\r\n                type: 'ADD_ALL_USERS',\r\n                payload: data.response,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst getRoles = (setShowProgress, setStatus) => async (dispatch) => {\r\n    setShowProgress(true);\r\n    dispatch({ type: USER_ROLES_REQUEST, payload: {} });\r\n    if (isLoggedIn()==false) {\r\n        dispatch({\r\n            type: USER_ROLES_FAIL,\r\n        });\r\n        setStatus(401);\r\n    }else\r\n    \r\n    try {\r\n        const { data } = await api.post(\r\n            '/admin/getFeatures',\r\n            {},\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                },\r\n            },\r\n            { withCredentials: true },\r\n            { timeout }\r\n        );\r\n        console.log(data, 'roles');\r\n        dispatch({ type: USER_ROLES_SUCCESS, payload: data.response });\r\n        setShowProgress(false);\r\n    } catch (error) {\r\n        const res = { ...error };\r\n        // clearStorage()\r\n        // removeCredentials()\r\n        console.log('roles error ', res);\r\n        if (res.response) {\r\n            dispatch({\r\n                type: USER_ROLES_FAIL,\r\n            });\r\n            if (res.response.status === 401) {\r\n                removeCredentials();\r\n                setStatus(401);\r\n            }\r\n            setShowProgress(true);\r\n        } else {\r\n            dispatch({\r\n                type: USER_ROLES_FAIL,\r\n            });\r\n            setShowProgress(true);\r\n        }\r\n    }\r\n};\r\n\r\nconst register = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n    try {\r\n        const data = await api.post(\r\n            '/signup/email',\r\n            { email, password },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n        console.log('register req', data);\r\n        console.log('st', data.status);\r\n        if (data.status === 200) {\r\n            Cookies.set('regRe', true);\r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: { email },\r\n                status: 200,\r\n            });\r\n        } //TODO\r\n        // Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        const res = { ...error };\r\n        Cookies.set('regRe', false);\r\n        console.log('reg req error ', res);\r\n        if (res.response)\r\n            dispatch({\r\n                type: USER_REGISTER_FAIL,\r\n                payload: res.response.data,\r\n                status: res.response.status,\r\n            });\r\n        else\r\n            dispatch({\r\n                type: USER_REGISTER_FAIL,\r\n                payload: 'Not found',\r\n                status: 404,\r\n            });\r\n    }\r\n};\r\n\r\nconst resetPassword = (email, setDone, setError) => async (dispatch) => {\r\n    console.log('reset password', email);\r\n    dispatch({ type: USER_PASSWORD_RESET_REQUEST });\r\n    try {\r\n        const data = await api.post(\r\n            '/admin/forgotPassword',\r\n            { email },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n        dispatch({ type: USER_PASSWORD_RESET_SUCCESS }); //TODO\r\n        setDone(true);\r\n        setError(null);\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_PASSWORD_RESET_FAIL,\r\n        }); //TODO\r\n        setError('Password reset failed');\r\n    }\r\n};\r\nconst passwordResetComplete = () => (dispatch) => {\r\n    dispatch({ type: USER_PASSWORD_RESET_COMPLETE });\r\n};\r\nconst logout = (history) => (dispatch) => {\r\n    dispatch({ type: USER_LOGOUT });\r\n    removeCredentials();\r\n    clearStorage();\r\n    history.replace('/app/login');\r\n};\r\n\r\nexport {\r\n    signin,\r\n    register,\r\n    resetPassword,\r\n    passwordResetComplete,\r\n    getRoles,\r\n    logout,\r\n    getAllUser,\r\n};\r\n","export const setUserInfo = (email,name,role)=>{\r\n    localStorage.setItem(\"email\",email);\r\n    localStorage.setItem(\"name\",name);\r\n    localStorage.setItem(\"role\",role);\r\n}\r\nexport const getUserInfo = ()=>{\r\n    return {email:localStorage.getItem(\"email\"),name:localStorage.getItem(\"name\"),role:localStorage.getItem(\"role\")}\r\n}","import React from 'react'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function SimpleAlert({severity,msg}) {\r\n\r\n    return (\r\n        <div>\r\n              <Alert severity={severity}>{msg}</Alert>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nconst styles =(theme) => ({\r\n  root: {\r\n    marginLeft: 15\r\n  },\r\n\r\n})\r\nconst SpinnerAdornment = withStyles(styles)(props => (\r\n  <CircularProgress\r\n    className={props.classes.spinner}\r\n    size={20}\r\n  />\r\n))\r\nexport default function AdornedButton(props) {\r\n  const {\r\n    children,\r\n    loading,\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <Button {...rest} >\r\n      {!loading&&children}\r\n      {loading && <SpinnerAdornment {...rest} />}\r\n    </Button>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { string } from \"yup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { passwordResetComplete } from \"../../../actions/userActions\";\r\nimport SimpleAlert from '../../alerts/SimpleAlert';\r\n\r\nexport default function PasswordResetDialog({\r\n  handleClickOpen,\r\n  open,\r\n  handleClose,\r\n  resetPasswordOnSubmit,\r\n}) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { ploading  } = userSignin;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [valid, setValid] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [error, setError] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickOk = () => {\r\n    resetPasswordOnSubmit(email,setDone,setError);\r\n    // handleClose()\r\n  };\r\n  const onClickClose = () => {\r\n    handleClose();\r\n    dispatch(passwordResetComplete());\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.currentTarget.value;\r\n    setEmail(value);\r\n    setValid(string().required().email().isValidSync(value));\r\n  };\r\n\r\n  const renderAlert = () => {\r\n    if(!!error &&!ploading)\r\n      return <SimpleAlert severity=\"error\" msg={error} />\r\n  };\r\n  const renderMsg = () => {\r\n    if (done)\r\n      return \"A password reset link has been sent to your email address\";\r\n    else if (!!error &&! ploading) return \"network error\";\r\n    else return \"We will send a password reset link to your email address.\";\r\n  };\r\n  const renderButtons = () => {\r\n    if (done)\r\n      return (\r\n        <DialogActions>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      );\r\n    else\r\n      return (\r\n        <DialogActions>\r\n          <Button size=\"small\" onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            disabled={!valid}\r\n            onClick={onClickOk}\r\n            color=\"primary\"\r\n          >\r\n            Reset password\r\n          </Button>\r\n        </DialogActions>\r\n      );\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Reset password</DialogTitle>\r\n          {renderAlert()}\r\n        <DialogContent>\r\n          <DialogContentText>{renderMsg()}</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            type=\"name\"\r\n            fullWidth\r\n            disabled={done}\r\n            error={!valid && email.length > 3}\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </DialogContent>\r\n        {renderButtons()}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Paper } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { resetPassword, signin } from \"../../actions/userActions\";\r\nimport SimpleAlert from \"../../components/alerts/SimpleAlert\";\r\nimport AdornedButton from \"../../components/buttons/AdornedButton\";\r\nimport PasswordResetDialog from \"../../components/dialogs/PasswordResetDialog\"\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  root: {\r\n    backgroundImage: \"url(/assets/images/tab_bg.jpg)\",\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    backgroundColor: \"#1a73e8\",\r\n    backgroundBlendMode:\"color-burn\",\r\n    height:\"100vh\",\r\n    width:\"100%\",\r\n    overflow:\"hidden\"\r\n  },\r\n  paperContainer:{\r\n    maxWidth:350,\r\n    maxHeight:450,\r\n    padding:36,\r\n  }\r\n}));\r\n\r\nfunction SignIn({history}) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { loading, signed } = userSignin;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState(\"\");\r\n  const [alert, setAlert] = useState(false);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  const resetPasswordOnSubmit = (email, setDone, setError) => {\r\n    dispatch(resetPassword(email, setDone, setError));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setAlert(true);\r\n    } \r\n  }, [loading]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      username: Yup.string().required(\"Required\"),\r\n      password: Yup.string().required(\"Required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      setError(null);\r\n      // console.log(isLoggedIn===false,isLoggedIn);\r\n      setAlert(false)\r\n      dispatch(signin(values.username, values.password, history, setError));\r\n    },\r\n  });\r\n\r\n  const showAlert = () => {\r\n    if (alert) return <SimpleAlert severity=\"error\" msg={error} />;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paperContainer} elevation={0}>\r\n        {openDialog && (\r\n          <PasswordResetDialog\r\n            resetPasswordOnSubmit={resetPasswordOnSubmit}\r\n            handleClickOpen={handleClickOpen}\r\n            handleClose={handleClose}\r\n            open={openDialog}\r\n          />\r\n        )}\r\n\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in \r\n          </Typography>\r\n          {showAlert()}\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              disabled={loading}\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoComplete=\"email\"\r\n              error={!!formik.errors.username && formik.touched.username}\r\n              helperText={\r\n                formik.touched.username && !!formik.errors.username\r\n                  ? !!formik.errors.username\r\n                  : \"\"\r\n              }\r\n              autoFocus\r\n              onChange={formik.handleChange}\r\n              value={formik.values.username}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              disabled={loading}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              error={formik.touched.password && !!formik.errors.password}\r\n              helperText={\r\n                formik.touched.password && !!formik.errors.password\r\n                  ? formik.errors.password\r\n                  : \"\"\r\n              }\r\n              onChange={formik.handleChange}\r\n              id=\"password\"\r\n              value={formik.values.password}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <AdornedButton\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading}\r\n              color={loading ? \"secondary\" : \"primary\"}\r\n              // disabled={loading}\r\n              loading={loading}\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </AdornedButton>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Button\r\n                  style={{ textTransform: \"none\" }}\r\n                  onClick={() => setOpenDialog(true)}\r\n                >\r\n                  Forgot password?\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        {/* <Box mt={8}>\r\n          <Copyright />\r\n        </Box> */}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","\r\nimport Cookies from 'js-cookie'\r\nexport default function setCredential(token){\r\n    // localStorage.setItem(\"tk\",token)\r\n    Cookies.set('admtk', token)\r\n}","import React from \"react\";\r\n\r\nexport default function NotFoundPage() {\r\n  return (\r\n    <div>\r\n      <h1>Page not found</h1>\r\n      <p>Look for something else</p>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height:\"100vh\",\r\n    justifyContent:'center',\r\n    alignItems:\"center\"\r\n  },\r\n}));\r\n\r\nexport default function SimpleLoading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import { makeStyles } from \"@material-ui/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2.5),\r\n    marginRight: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"white\",\r\n    },\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5),\r\n    color:\"white\",\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\",\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\",\r\n  },\r\n  profileMenu: {\r\n    minWidth: 265,\r\n    boxShadow:\"0px 3px 11px 0px #959FFF, 0 3px 3px -2px #0000001A, 0 1px 8px 0 #9A9A9A1A\"\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Badge as BadgeBase,\r\n  Typography as TypographyBase,\r\n  Button as ButtonBase,\r\n} from \"@material-ui/core\";\r\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nvar useStyles = makeStyles(theme => ({\r\n  badge: {\r\n    fontWeight: 600,\r\n    height: 16,\r\n    minWidth: 16,\r\n  },\r\n}));\r\n\r\nfunction Badge({ children, colorBrightness, color, ...props }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var Styled = createStyled({\r\n    badge: {\r\n      backgroundColor: getColor(color, theme, colorBrightness),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {styledProps => (\r\n        <BadgeBase\r\n          classes={{\r\n            badge: classnames(classes.badge, styledProps.classes.badge),\r\n          }}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </BadgeBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nfunction Typography({\r\n  children,\r\n  weight,\r\n  size,\r\n  colorBrightness,\r\n  color,\r\n  ...props\r\n}) {\r\n  var theme = useTheme();\r\n\r\n  return (\r\n    <TypographyBase\r\n      style={{\r\n        color: getColor(color, theme, colorBrightness),\r\n        fontWeight: getFontWeight(weight),\r\n        fontSize: getFontSize(size, props.variant, theme),\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </TypographyBase>\r\n  );\r\n}\r\n\r\nfunction Button({ children, color, className, ...props }) {\r\n  var theme = useTheme();\r\n\r\n  var Styled = createStyled({\r\n    root: {\r\n      color: getColor(color, theme),\r\n    },\r\n    contained: {\r\n      backgroundColor: getColor(color, theme),\r\n      boxShadow: theme.customShadows.widget,\r\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\r\n      \"&:hover\": {\r\n        backgroundColor: getColor(color, theme, \"light\"),\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n      \"&:active\": {\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      },\r\n    },\r\n    outlined: {\r\n      color: getColor(color, theme),\r\n      borderColor: getColor(color, theme),\r\n    },\r\n    select: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {({ classes }) => (\r\n        <ButtonBase\r\n          classes={{\r\n            contained: classes.contained,\r\n            root: classes.root,\r\n            outlined: classes.outlined,\r\n          }}\r\n          {...props}\r\n          className={classnames(\r\n            {\r\n              [classes.select]: props.select,\r\n            },\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </ButtonBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n}\r\n\r\nexport { Badge, Typography, Button };\r\n\r\n// ########################################################################\r\n\r\nfunction getColor(color, theme, brigtness = \"main\") {\r\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\r\n    return theme.palette[color][brigtness];\r\n  }\r\n}\r\n\r\nfunction getFontWeight(style) {\r\n  switch (style) {\r\n    case \"light\":\r\n      return 300;\r\n    case \"medium\":\r\n      return 500;\r\n    case \"bold\":\r\n      return 600;\r\n    default:\r\n      return 400;\r\n  }\r\n}\r\n\r\nfunction getFontSize(size, variant = \"\", theme) {\r\n  var multiplier;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      multiplier = 0.8;\r\n      break;\r\n    case \"md\":\r\n      multiplier = 1.5;\r\n      break;\r\n    case \"xl\":\r\n      multiplier = 2;\r\n      break;\r\n    case \"xxl\":\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n      break;\r\n  }\r\n\r\n  var defaultSize =\r\n    variant && theme.typography[variant]\r\n      ? theme.typography[variant].fontSize\r\n      : theme.typography.fontSize + \"px\";\r\n\r\n  return `calc(${defaultSize} * ${multiplier})`;\r\n}\r\n\r\nfunction createStyled(styles, options) {\r\n  var Styled = function(props) {\r\n    const { children, ...other } = props;\r\n    return children(other);\r\n  };\r\n\r\n  return withStyles(styles, options)(Styled);\r\n}\r\n","import React,{useState} from \"react\";\r\nimport {\r\n    Menu,\r\n    MenuItem,\r\n    IconButton,\r\n\r\n  } from \"@material-ui/core\";\r\n  import {\r\n    Person as AccountIcon,\r\n  } from \"@material-ui/icons\";\r\n  import classNames from \"classnames\";\r\n  import useStyles from \"./styles\";\r\n\r\n  import {  Typography } from \"../../Wrappers/Wrappers\";\r\nimport { getUserInfo } from \"../../../services/userService/userInfo\";\r\n\r\nexport default function HeaderProfileMenu({logoutClicked}) {\r\n    var classes = useStyles();\r\n    var [profileMenu, setProfileMenu] = useState(null);\r\n    const user = getUserInfo()\r\n\r\n  return (\r\n    <div>\r\n          <IconButton\r\n          aria-haspopup=\"true\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon style={{color:\"white\"}} classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n           <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {user.name?user.name.charAt(0).toUpperCase()+user.name.slice(1):\"\"}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n            >\r\n             {user.email}\r\n            </Typography>\r\n          </div>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem> */}\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem> */}\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"secondary\"\r\n              onClick={logoutClicked}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n    </div>\r\n  );\r\n}\r\n","export const SET_SELECTED_STUDENTS ='SET_SELECTED_STUDENTS'\r\nexport const RESET_SELECTED_STUDENTS ='RESET_SELECTED_STUDENTS'","import {SET_SELECTED_STUDENTS,RESET_SELECTED_STUDENTS} from '../constants/studentConstants.js';\r\n\r\nconst setSelectedStudents = (data) => (dispatch) => {\r\n    dispatch({ type: SET_SELECTED_STUDENTS, payload:data });\r\n}\r\nconst resetSelectedStudents = () => (dispatch) => {\r\n    dispatch({ type: RESET_SELECTED_STUDENTS});\r\n}\r\n\r\nexport {setSelectedStudents,resetSelectedStudents}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useEffect,useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport { setSelectedStudents,resetSelectedStudents } from \"../../../actions/studentActions\";\r\nimport {\r\n  AddBox,\r\n  ArrowDownward,\r\n  Search,\r\n  Clear,\r\n  FirstPage,\r\n  LastPage,\r\n  ChevronLeft,\r\n  FilterList,\r\n  Check,\r\n  DeleteOutline,\r\n  Edit,\r\n  SaveAlt,\r\n  Delete,\r\n  ViewColumn,\r\n  ChevronRight,\r\n  Remove,\r\n  PhoneDisabled,\r\n  PersonAddDisabled,\r\n  Refresh\r\n} from \"@material-ui/icons\";\r\nimport { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 32,\r\n  },\r\n}));\r\nconst StudentTable = ({history,data,remoteData,minimal=false}) => {\r\n  const tableRef = React.createRef();\r\n\r\n  const classes = useStyles();\r\n    // const selectedStudents = useSelector((state) => state.selectedStudents);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSelectedStudents());\r\n  }, []);\r\n\r\n  const tableColumns = [\r\n    // { title: 'Avatar',field: 'avatar', filtering: false,sorting: false,\r\n    //   render: rowData => (\r\n    //     <img style={{ height: 36, borderRadius: '50%' }} src={rowData.avatar}/>\r\n    // ),},\r\n    { title: \"Id\", field: \"id\", align: \"left\" },\r\n    { title: \"Name\", field: \"FullName\", align: \"left\" },\r\n    { title: \"10th Marks\", field: \"Cgpa10\", align: \"left\" },\r\n    { title: \"10th Mark Type\", field: \"MarkType10\", align: \"left\" },\r\n    { title: \"12th Marks\", field: \"Cgpa12\", align: \"left\" },\r\n    { title: \"12th Mark Type\", field: \"MarkType12\", align: \"left\" },\r\n    { title: \"Degree Marks\", field: \"degree1\", align: \"left\" },\r\n    { title: \"Degree Mark Type\", field: \"degree1MarkType\", align: \"left\" },\r\n    // { title: \"Degree 2 Marks\", field: \"degree2\", align: \"left\" },\r\n    // { title: \"Degree Mark Type\", field: \"degree1\", align: \"left\" },\r\n    // { title: \"Degree 3 Marks\", field: \"degree3\", align: \"left\" },\r\n    // { title: \"Degree Mark Type\", field: \"degree1\", align: \"left\" },\r\n    { title: \"Email\", field: \"Email\", align: \"left\" },\r\n    { title: \"City/Town\", field: \"City\", align: \"left\" },\r\n    { title: \"Date of Birth\", field: \"Dob\", align: \"left\" },\r\n    { title: \"Interviews Attended\", field: \"InterviewsAttended\", align: \"left\" },\r\n    // { title: \"Certification Name\", field: \"InterviewsAttended\", align: \"left\" },\r\n    // { title: \"Experience\", field: \"InterviewsAttended\", align: \"left\" },\r\n    // { title: \"HSST score\", field: \"score\", align: \"left\" },\r\n    // { title: \"Category\", field: \"Category\", align: \"left\" ,lookup:{active:\"active\",inactive:'inactive'}},\r\n  ];\r\n  const tableColumnsMinimal = [\r\n    // { title: 'Avatar',field: 'avatar', filtering: false,sorting: false,\r\n    //   render: rowData => (\r\n    //     <img style={{ height: 36, borderRadius: '50%' }} src={rowData.avatar}/>\r\n    // ),},\r\n    { title: \"Id\", field: \"id\", align: \"left\" },\r\n    { title: \"Name\", field: \"FullName\", align: \"left\" },\r\n    // { title: \"10th Marks\", field: \"Cgpa10\", align: \"left\" },\r\n    // { title: \"12th Marks\", field: \"Cgpa12\", align: \"left\" },\r\n    { title: \"Degree Marks\", field: \"degree1\", align: \"left\" },\r\n    { title: \"Email\", field: \"Email\", align: \"left\" },\r\n    // { title: \"Skills\", field: \"InterviewsAttended\", align: \"left\" },\r\n    { title: \"Date of Birth\", field: \"Dob\", align: \"left\" },\r\n    { title: \"Interviews Attended\", field: \"InterviewsAttended\", align: \"left\" },\r\n    // { title: \"Certification Name\", field: \"InterviewsAttended\", align: \"left\" },\r\n    // { title: \"Experience\", field: \"InterviewsAttended\", align: \"left\" },\r\n  ];\r\n\r\n  const tableOptions = {\r\n    search: true,\r\n    selection: true,\r\n    filtering: true,\r\n    exportButton: true,\r\n    headerStyle: {\r\n      backgroundColor: '#1a73e8',\r\n      color: '#FFF'\r\n    }\r\n  };\r\n\r\n  const actionsOptions=[\r\n    {\r\n      icon: ()=><Refresh />,\r\n      tooltip: 'Refresh Data',\r\n      isFreeAction: true,\r\n      exportButton: true,\r\n      // onClick: () => tableRef.current && tableRef.current.onQueryChange,\r\n      onClick:()=>remoteData(null)\r\n    }\r\n  ]\r\n \r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n \r\n const searchHandler = (text)=>{            // 6\r\n    // setSearchText(text);\r\n    tableRef.current.onSearchChange(text);  // 7\r\n }\r\n\r\n  const handleRowclick=(id)=>{\r\n    history.push('/app/students/details/'+id)  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        options={tableOptions}\r\n        icons={tableIcons}\r\n        title=\"Students\"\r\n        columns={minimal?tableColumnsMinimal:tableColumns}\r\n        data={data}\r\n        // isLoading={data.length===0}\r\n        actions={actionsOptions}\r\n        onSelectionChange={(rows) => dispatch(setSelectedStudents(rows))}\r\n        onRowClick={(event,rowData)=>{handleRowclick(rowData.id)}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, makeStyles, Grid, Button } from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSelector } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getCredentials } from '../../../../services/authService';\r\nimport api from '../../../../api/api';\r\nimport StudentTable from '../../../../components/tables/StudentTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        marginTop: 24\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n        color: \"#4169E1\"\r\n    },\r\n    value: {\r\n        fontSize: 14,\r\n        color: \"#FFA500\"\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nconst UserItemDetails = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n\r\n    const { selected } = useSelector((state) => state.selectedStudents);\r\n\r\n    useEffect(() => {\r\n        getUserData(props.match.params.id);\r\n        remoteData(props.match.params.id);\r\n    }, []);\r\n\r\n    const getUserData = async (userId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/getAdminUserDetail\",\r\n                { userId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setUser(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const assignStudents = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/assignStudentsToAdmin\",\r\n                { students: selected, adminId: props.match.params.id }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n            remoteData(props.match.params.id);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const remoteData = async (userId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/getUnassignedStudents\",\r\n                { userId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setData(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <Backdrop className={classes.backdrop} open={loading} >\r\n                <CircularProgress color=\"primary\" />\r\n            </Backdrop>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.container}>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"flex-end\"\r\n                        >\r\n                            <Button\r\n                                variant='outlined'\r\n                                color='primary'\r\n                                size='small'\r\n                                onClick={assignStudents}\r\n                            >Assign Students</Button>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <Grid\r\n                                item\r\n                                direction=\"column\"\r\n                            >\r\n                                <p className={classes.heading}>ID  : <span className={classes.value}>{user.id}</span></p>\r\n                                <p className={classes.heading}>Name  : <span className={classes.value}>{user.Name}</span></p>\r\n                                <p className={classes.heading}>Username  : <span className={classes.value}>{user.Username}</span></p>\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                direction=\"column\"\r\n                            >\r\n                                <p className={classes.heading}>Email  : <span className={classes.value}>{user.Email}</span></p>\r\n                                <p className={classes.heading}>Role  : <span className={classes.value}>{user.Role}</span></p>\r\n                                <p className={classes.heading}>Status  : <span className={classes.value}>{user.Status}</span></p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <StudentTable history={props.history} data={data} remoteData={remoteData} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserItemDetails;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport api from '../../../api/api';\r\nimport { getCredentials } from '../../../services/authService';\r\nimport { connect } from 'react-redux';\r\nimport { getAllUser } from '../../../actions/userActions';\r\nimport style from './UserTable.module.css';\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Search,\r\n    Clear,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    FilterList,\r\n    Check,\r\n    DeleteOutline,\r\n    Edit,\r\n    SaveAlt,\r\n    Delete,\r\n    ViewColumn,\r\n    ChevronRight,\r\n    Remove,\r\n    PhoneDisabled,\r\n    PersonAddDisabled,\r\n} from '@material-ui/icons';\r\nimport { icon } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst UserTable = (props) => {\r\n    useEffect(() => {\r\n        props.getAllUser();\r\n    }, []);\r\n\r\n    const tableColumns = [\r\n        { title: 'Email', field: 'Email' },\r\n        { title: 'Username', field: 'Username' },\r\n        { title: 'Role', field: 'Role' ,editable: 'never',\r\n        lookup:{HR_USER:\"HR_USER\",SUPER_USER:\"SUPER_USER\",ADMIN:\"ADMIN\"}},\r\n        { title: 'Status', field: 'Status' ,editable: 'never',lookup:{active:\"active\",inactive:\"inactive\"}},\r\n    ];\r\n\r\n    const tableOptions = {\r\n        search: true,\r\n        // selection: true,\r\n        filtering: true,\r\n        actionsColumnIndex: -1,\r\n        rowStyle: (rowData) => ({\r\n            backgroundColor: rowData.Status === 'inactive' ? '#d3d3d3' : '#FFF',\r\n        }),\r\n        headerStyle: {\r\n            backgroundColor: '#1a73e8',\r\n            color: '#FFF'\r\n          }\r\n    };\r\n\r\n    const handleRowClick = (id) => {\r\n        props.history.push('/app/users/'+id);\r\n    }\r\n\r\n    const disableUser = async (userId, status) => {\r\n        try {\r\n            const res = await api.post(\r\n                'admin/updateAdminUser',\r\n                {\r\n                    userId,\r\n                    operation: status === 'active' ? 'DISABLE' : 'ENABLE',\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            props.getAllUser();\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error, 'DU');\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const actionOptions = [\r\n        // {\r\n        //     tooltip: 'Remove All Selected Users',\r\n        //     icon: () => <Delete />,\r\n        //     onClick: (evt, data) => console.log(data),\r\n        // },\r\n        // {\r\n        //     icon: () => <Edit />,\r\n        //     tooltip: 'Edit',\r\n        //     onClick: (evt, data) => console.log(data),\r\n        // },\r\n        {\r\n            icon: () => <PersonAddDisabled />,\r\n            tooltip: 'Disable',\r\n            onClick: (evt, data) => disableUser(data.id, data.Status),\r\n        },\r\n    ];\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => (\r\n            <DeleteOutline {...props} ref={ref} />\r\n        )),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => (\r\n            <FirstPage {...props} ref={ref} />\r\n        )),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => (\r\n            <ArrowDownward {...props} ref={ref} />\r\n        )),\r\n        ThirdStateCheck: forwardRef((props, ref) => (\r\n            <Remove {...props} ref={ref} />\r\n        )),\r\n        ViewColumn: forwardRef((props, ref) => (\r\n            <ViewColumn {...props} ref={ref} />\r\n        )),\r\n    };\r\n\r\n    const editable = {\r\n        onRowUpdate: async (newData, oldData) => {\r\n            console.log(newData, oldData);\r\n            try {\r\n                const { id, Email, Username, Name, Role } = newData;\r\n                const res = await api.post(\r\n                    'admin/updateAdminUser',\r\n                    {\r\n                        userId: id,\r\n                        email: Email,\r\n                        username: Username,\r\n                        name: Name,\r\n                        role: Role,\r\n                        operation: 'UPDATE',\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: `Bearer ${getCredentials()}`,\r\n                        },\r\n                    },\r\n                    { timeout: 1000 }\r\n                );\r\n                props.getAllUser();\r\n            } catch (error) {\r\n                console.log(error, 'UU');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        // onRowDelete: async (oldData) => {\r\n        //     try {\r\n        //         const { id } = oldData;\r\n        //         const res = await api.post(\r\n        //             'admin/updateAdminUser',\r\n        //             { userId: id, operation: 'DELETE' },\r\n        //             {\r\n        //                 headers: {\r\n        //                     'Content-Type': 'application/json',\r\n        //                     Authorization: ` Bearer ${getCredentials()}`,\r\n        //                 },\r\n        //             },\r\n        //             { timeout: 1000 }\r\n        //         );\r\n        //         props.getAllUser();\r\n        //     } catch (error) {\r\n        //         console.log(error, 'LU');\r\n        //         return false;\r\n        //     }\r\n        //     return true;\r\n        // },\r\n    };\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <MaterialTable\r\n            // isLoading={props.allUsers.length===0}\r\n                options={tableOptions}\r\n                icons={tableIcons}\r\n                actions={actionOptions}\r\n                editable={editable}\r\n                title='Manage Users'\r\n                columns={tableColumns}\r\n                data={props.allUsers}\r\n                onRowClick={(event, rowData) => {handleRowClick(rowData.id)}}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.allUsers);\r\n    return {\r\n        allUsers: state.allUsers,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllUser: () => dispatch(getAllUser()),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UserTable);\r\n","import React from 'react';\r\nimport UserTable from '../../../../components/tables/UserTable';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {},\r\n    btnContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignContent: 'flex-end',\r\n    },\r\n}));\r\nexport default function AllUsers(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.btnContainer}>\r\n                <Button\r\n                    className={classes.btn}\r\n                    disableElevation\r\n                    onClick={() => props.history.push('/app/users/add')}\r\n                    variant='contained'\r\n                    color='primary'\r\n                >\r\n                    Add User\r\n                </Button>\r\n            </div>\r\n            <UserTable history={props.history}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { TextField, makeStyles } from '@material-ui/core';\r\nimport styles from './AddUserTextField.module.css';\r\n\r\nconst AddUserTextField = ({\r\n    error,\r\n    helperText,\r\n    value,\r\n    onChange,\r\n    name,\r\n    type = 'text',\r\n    label,\r\n}) => {\r\n    const useStyle = makeStyles({\r\n        textField: {\r\n            display: 'flex',\r\n            marginLeft: '16px',\r\n            flex: 3,\r\n        },\r\n    });\r\n    const styleClasses = useStyle();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <p className={styles.heading}>{label}</p>\r\n            <TextField\r\n                className={styleClasses.textField}\r\n                name={name}\r\n                variant='outlined'\r\n                autoFocus\r\n                type={type}\r\n                error={error}\r\n                helperText={helperText}\r\n                onChange={onChange}\r\n                value={value}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddUserTextField;\r\n","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport styles from './AddUser.module.css';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    MenuItem,\r\n    InputLabel,\r\n    makeStyles,\r\n    Select,\r\n} from '@material-ui/core';\r\nimport AddUserTextField from '../AddUserTextField';\r\n\r\nconst AddUserComponent = ({ onSubmitClicked, loading }) => {\r\n    const [role, setRole] = useState('SUPER_USER');\r\n\r\n    const useStyle = makeStyles({\r\n        textField: {\r\n            marginTop: 16,\r\n        },\r\n        button: {\r\n            backgroundColor: '#ed6c1f',\r\n            color: 'white',\r\n            textTransform: 'capitalize',\r\n            fontSize: 16,\r\n            borderRadius: 10,\r\n        },\r\n    });\r\n\r\n    const styleClasses = useStyle();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            name: '',\r\n            organization: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            role: 'SUPER_USER',\r\n        },\r\n\r\n        validationSchema: Yup.object({\r\n            password: Yup.string()\r\n                .required(\r\n                    'Password must contain at least 8 characters, one uppercase, one lowercase, one number and one special case character'\r\n                )\r\n                .matches(\r\n                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n                    'Password must contain at least 8 characters, one uppercase, one lowercase, one number and one special case character'\r\n                ),\r\n            confirmpassword: Yup.string()\r\n                .required('This field is required')\r\n                .oneOf([Yup.ref('password'), null], 'Password mismatch'),\r\n            email: Yup.string()\r\n                .required('Enter valid email')\r\n                .email('Enter valid email'),\r\n            name: Yup.string().required('This field is required'),\r\n            organization: Yup.string().required('This field is required'),\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log(loading);\r\n            onSubmitClicked({ ...values, role });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <form className={styles.form} onSubmit={formik.handleSubmit}>\r\n                <AddUserTextField\r\n                    error={!!formik.errors.email && formik.touched.email}\r\n                    helperText={\r\n                        !!formik.errors.email && formik.touched.email\r\n                            ? formik.errors.email\r\n                            : ''\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                    disabled={loading}\r\n                    name='email'\r\n                    label='Email'\r\n                />\r\n                <AddUserTextField\r\n                    error={!!formik.errors.name && formik.touched.name}\r\n                    helperText={\r\n                        !!formik.errors.name && formik.touched.name\r\n                            ? formik.errors.name\r\n                            : ''\r\n                    }\r\n                    disabled={loading}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.name}\r\n                    name='name'\r\n                    label='Username'\r\n                />\r\n                <AddUserTextField\r\n                    disabled={loading}\r\n                    error={\r\n                        !!formik.errors.organization &&\r\n                        formik.touched.organization\r\n                    }\r\n                    helperText={\r\n                        !!formik.errors.organization &&\r\n                        formik.touched.organization\r\n                            ? formik.errors.organization\r\n                            : ''\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.organization}\r\n                    name='organization'\r\n                    label='Organization Name'\r\n                />\r\n                <AddUserTextField\r\n                    error={!!formik.errors.password && formik.touched.password}\r\n                    helperText={\r\n                        !!formik.errors.password && formik.touched.password\r\n                            ? formik.errors.password\r\n                            : ''\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                    disabled={!loading}\r\n                    value={formik.values.password}\r\n                    name='password'\r\n                    type='password'\r\n                    label='Password'\r\n                />\r\n                <AddUserTextField\r\n                    disabled={loading}\r\n                    error={\r\n                        !!formik.errors.confirmpassword &&\r\n                        formik.touched.confirmpassword\r\n                    }\r\n                    helperText={\r\n                        !!formik.errors.confirmpassword &&\r\n                        formik.touched.confirmpassword\r\n                            ? formik.errors.confirmpassword\r\n                            : ''\r\n                    }\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confirmpassword}\r\n                    name='confirmpassword'\r\n                    type='password'\r\n                    label='Confirm Password'\r\n                />\r\n                <div className={styles.buttonRoleHeadingContainer}>\r\n                    <p className={styles.heading} id='demo-simple-select-label'>\r\n                        Role\r\n                    </p>\r\n                    <div className={styles.buttonRoleContainer}> \r\n                        <Select\r\n                            labelId='demo-simple-select-label'\r\n                            id='role'\r\n                            variant='outlined'\r\n                            value={role}\r\n                            onChange={(event) => setRole(event.target.value)}\r\n                        >\r\n                            <MenuItem value='SUPER_USER'>Admin</MenuItem>\r\n                            <MenuItem value='HR_USER'>HR Admin</MenuItem>\r\n                        </Select>\r\n                        <Button\r\n                            className={styleClasses.button}\r\n                            variant='contained'\r\n                            disableElevation\r\n                            // disabled={loading}\r\n                            type='submit'\r\n                        >\r\n                            Create User\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddUserComponent;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}));\r\n\r\nexport default function SnackBar({open, message, severity, setOpen}) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport AddUserComponent from '../../../../components/AddUserComponent';\r\nimport api from '../../../../api/api';\r\nimport { getCredentials } from '../../../../services/authService';\r\nimport SnackBar from 'components/SnackBar';\r\n\r\nexport default function AddUser({ history }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [err, setErr] = useState('')\r\n    const [open, setOpen] = useState(false)\r\n    const createUser = async (values) => {\r\n        const { email, name, password, role, organization } = values;\r\n\r\n        setLoading(true);\r\n        console.log('values dd', values);\r\n        try {\r\n            const data = await api.post(\r\n                '/admin/createAdminUser',\r\n                { email, username: name, name: organization, password, role },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            console.log(data);\r\n            setLoading(false);\r\n            history.goBack();\r\n            setOpen(false)\r\n        } catch (error) {\r\n           \r\n            setLoading(false);\r\n            setOpen(true)\r\n            setErr(\"Bad request or Username already exists!\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <SnackBar open={open} message={err} setOpen={setOpen} severity='error' />\r\n            <AddUserComponent onSubmitClicked={createUser} loading={loading} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { emphasize, makeStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NoEncryption } from \"@material-ui/icons\";\r\nimport { Switch, Route, Redirect, withRouter,useLocation } from \"react-router-dom\";\r\nimport UserItemDetails from \"./UserItemDetails\";\r\nimport AllUsers from \"./AllUsers\"\r\nimport AddUser from \"./AddUser\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 24,\r\n  },\r\n  link: {\r\n    color: theme.palette.grey[800],\r\n    fontSize:14,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Users(props) {\r\n  const classes = useStyles();\r\n  const [clickedUserm, setClickedUser] = useState();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {ActiveLastBreadcrumb(false,location)}\r\n      <Switch>\r\n        <Route exact path=\"/app/users\" component={AllUsers} />\r\n        <Route exact path=\"/app/users/add\" component={AddUser} />\r\n        <Route path=\"/app/users/:id\" component={UserItemDetails} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\nfunction ActiveLastBreadcrumb(user,location) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n      <Link className={classes.link} to=\"/app/users\">\r\n        All Users\r\n      </Link>\r\n      {user && (\r\n        <Link className={classes.link} color=\"textPrimary\" aria-current=\"page\">\r\n          {user}\r\n        </Link>\r\n      )}\r\n      {location.pathname=='/app/users/add' && (\r\n        <Link className={classes.link} color=\"textPrimary\" aria-current=\"page\">\r\n          Create User\r\n        </Link>\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n\r\nexport default withRouter(Users)","export const GET_ALL_EXAMS=\"GET_ALL_EXAMS\";\r\n\r\nexport const PUBLISH_EXAM_REQUEST=\"PUBLISH_EXAM_REQUEST\";\r\nexport const PUBLISH_EXAM_SUCCESS=\"PUBLISH_EXAM_SUCCESS\";\r\nexport const PUBLISH_EXAM_FAIL=\"PUBLISH_EXAM_FAIL\";\r\n\r\nexport const GET_EXAM_DETAIL=\"GET_EXAM_DETAIL\";\r\nexport const GET_EXAM_QUESTIONS=\"GET_EXAM_QUESTIONS\";\r\nexport const GET_EXAM_INSTRUCTIONS=\"GET_EXAM_INSTRUCTIONS\";\r\n\r\nexport const GET_EXAM_REQUEST=\"GET_EXAM_REQUEST\";\r\nexport const GET_EXAM_SUCCESS=\"GET_EXAM_SUCCESS\";\r\nexport const GET_EXAM_FAIL=\"GET_EXAM_FAIL\";\r\n\r\n","import api from \"../api/api\";\r\nimport {\r\n  GET_EXAM_FAIL,\r\n  GET_EXAM_SUCCESS,\r\n  GET_EXAM_REQUEST,\r\n  GET_ALL_EXAMS,\r\n  GET_EXAM_DETAIL,\r\n  GET_EXAM_INSTRUCTIONS,\r\n  GET_EXAM_QUESTIONS,\r\n  PUBLISH_EXAM_FAIL,\r\n  PUBLISH_EXAM_REQUEST,\r\n  PUBLISH_EXAM_SUCCESS,\r\n} from \"../constants/examConstants\";\r\nimport { getCredentials } from \"../services/authService\";\r\nimport Moment from 'moment';\r\n\r\nconst getAllExams = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await api.post(\r\n        \"/admin/getExams\",\r\n        { limit: 10, offset: 0 },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      dispatch({\r\n        type: GET_ALL_EXAMS,\r\n        payload: data.response,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nconst getExam = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GET_EXAM_REQUEST });\r\n\r\n      const { data } = await api.post(\r\n        \"/admin/getExamDetails\",\r\n        { id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      console.log(data);\r\n      dispatch({\r\n        type: GET_EXAM_SUCCESS,\r\n        details: data.response.exam,\r\n        questions: data.response.questions,\r\n        instructions: data.response.instructions,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: GET_EXAM_FAIL });\r\n    }\r\n  };\r\n};\r\n\r\nconst getExamDetails = (details) => ({\r\n  type: GET_EXAM_DETAIL,\r\n  details: details,\r\n});\r\nconst getExamInstructions = (instructions) => ({\r\n  type: GET_EXAM_INSTRUCTIONS,\r\n  instructions: instructions,\r\n}); \r\nconst getExamQuestions = (questions,counts) => ({\r\n  type: GET_EXAM_QUESTIONS,\r\n  questions: questions,\r\n  counts:counts\r\n});\r\n\r\nconst createExam = (details, instructions, questions, students,counts,checked) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({ type: PUBLISH_EXAM_REQUEST });\r\n    try {\r\n      console.log(getState().publishExam);\r\n      const { data } = await api.post(\r\n        \"/admin/createExam\",\r\n        {\r\n          exam: {\r\n            ...details,\r\n            startDate: Moment(details.StartDate).format(\"YYYY-MM-DD\"),\r\n            endDate:Moment(details.endDate).format('YYYY-MM-DD')\r\n          },\r\n          instructions: instructions,\r\n          questions: questions,\r\n          counts:counts,\r\n          students,\r\n          practise:checked\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      dispatch({\r\n        type: PUBLISH_EXAM_SUCCESS,\r\n        payload: data.response,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: PUBLISH_EXAM_FAIL });\r\n    }\r\n  };\r\n};\r\n\r\nconst resetPublishExam = () => ({ type: \"RESET_PUBLISH_EXAM\" });\r\n\r\nexport {\r\n  getAllExams,\r\n  createExam,\r\n  getExamDetails,\r\n  getExamQuestions,\r\n  getExamInstructions,\r\n  resetPublishExam,\r\n  getExam,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport MaterialTable from \"material-table\";\r\nimport * as Yup from 'yup';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, FormControl, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getExamDetails } from \"../../../../../actions/examActions\";\r\n\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 32,\r\n    \"& .MuiTextField-root\": {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  grid: {\r\n    marginTop: 16,\r\n    marginBottom: 32,\r\n  }\r\n}));\r\n\r\nexport default function One({ handleNext }) {\r\n  const publishExam = useSelector((state) => state.publishExam);\r\n  const { details } = publishExam;\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: !!details ? details.title : \"\",\r\n      startDate: !!details ? details.startDate : null,\r\n      endDate: !!details ? details.endDate : null,\r\n      startTime: !!details ? details.startTime : null,\r\n      endTime: !!details ? details.endTime : null,\r\n      duration: !!details ? details.duration : 40,\r\n      difficulty:\"medium\",\r\n      examtype:\"free\"\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      console.log(publishExam);\r\n      dispatch(getExamDetails(values))\r\n      handleNext()\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container justify=\"space-between\" className={classes.grid} >\r\n          <TextField\r\n            id=\"title\"\r\n            name=\"title\"\r\n            label=\"Name\"\r\n            multiline\r\n            style={{ flex: \".5\", marginRight: \"12px\" }}\r\n            rowsMax={4}\r\n            required\r\n            value={formik.values.title}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n          <TextField\r\n            id=\"title\"\r\n            name=\"duration\"\r\n            label=\"Duration\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"12px\" }}\r\n            required\r\n            value={formik.values.duration}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n  \r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"examtype\">Exam Type</InputLabel>\r\n                <Select\r\n                  labelId=\"examtype\"\r\n                  id=\"examtype\"\r\n                  name=\"examtype\"\r\n                  value={formik.values.examtype}\r\n                  onChange={formik.handleChange}\r\n                  fullWidth\r\n                  style={{ flex: \".3\", marginRight: \"12px\" }}\r\n\r\n                  label=\"Exam type\"\r\n                  required\r\n                  alignItems=\"center\"\r\n                >\r\n                  <MenuItem value={\"free\"}>Free</MenuItem>\r\n                  <MenuItem value={\"paid\"}>Paid(NA)</MenuItem>\r\n\r\n                </Select>\r\n              </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"difficulty\">Difficulty</InputLabel>\r\n                <Select\r\n                  labelId=\"difficulty\"\r\n                  id=\"difficulty\"\r\n                  name=\"difficulty\"\r\n                  value={formik.values.difficulty}\r\n                  onChange={formik.handleChange}\r\n                  label=\"Difficulty\"\r\n                  required\r\n                  alignItems=\"center\"\r\n                >\r\n                  <MenuItem value={\"easy\"}>easy</MenuItem>\r\n                  <MenuItem value={\"medium\"}>medium</MenuItem>\r\n                  <MenuItem value={\"hard\"}>hard</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n        </Grid>\r\n        <Grid container justify=\"space-between\" className={classes.grid}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"Start date\"\r\n            required\r\n            name=\"startDate\"\r\n            type=\"date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={formik.values.startDate}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('startDate', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true,}}\r\n            InputProps={{inputProps: { min:moment().format('YYYY-MM-DD')} }}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"Start time\"\r\n            name=\"startTime\"\r\n            type=\"time\"\r\n            required\r\n            value={formik.values.startTime}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('startTime', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"End date\"\r\n            name=\"endDate\"\r\n            type=\"date\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={formik.values.endDate}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('endDate', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{inputProps: { min:moment().format('YYYY-MM-DD')} }}\r\n\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            label=\"End time\"\r\n            name=\"endTime\"\r\n            type=\"time\"\r\n            value={formik.values.endTime}\r\n            onChange={(event) => {\r\n              console.log('event', event.target.value);\r\n              formik.setFieldValue('endTime', event.target.value);\r\n            }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n\r\n        </Grid>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>Next</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport XLSX from \"xlsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  btn:{\r\n    backgroundColor:\"#388e3c\",\r\n    color:\"white\",\r\n    borderColor: '#388e3c',\r\n    fontSize:\".8rem\",\r\n    '&:hover': {\r\n        backgroundColor: 'white',\r\n        color:\"#388e3c\",\r\n        borderColor: '#388e3c',\r\n      },\r\n      '&:active': {\r\n        backgroundColor: 'white',\r\n        color:\"#388e3c\",\r\n        borderColor: '#388e3c',\r\n      },\r\n      \"& .MuiTouchRipple-root span\":{\r\n        backgroundColor: 'grey!important',\r\n        opacity: .3,\r\n      },\r\n  },\r\n}));\r\nexport default function ExcelReader({setData}) {\r\n  const classes = useStyles();\r\n  const [cols, setCols] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n\r\n      const reader = new FileReader();\r\n      const rABS = !!reader.readAsBinaryString;\r\n\r\n      reader.onload = (e) => {\r\n        /* Parse data */\r\n        const bstr = e.target.result;\r\n        const wb = XLSX.read(bstr, {\r\n          type: rABS ? \"binary\" : \"array\",\r\n          bookVBA: true,\r\n        });\r\n        /* Get first worksheet */\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        /* Convert array of arrays */\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n        /* Update state */\r\n        setData(data)\r\n        setCols(make_cols(ws[\"!ref\"]));\r\n      };\r\n      try {\r\n        if (rABS) {\r\n          reader.readAsBinaryString(files[0]);\r\n        } else {\r\n          reader.readAsArrayBuffer(files[0]);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        accept=\"xlsx/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button size=\"small\" variant=\"contained\" className={classes.btn} component=\"span\" startIcon={<CloudUploadIcon />}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst make_cols = (refstr) => {\r\n  let o = [],\r\n    C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n  for (var i = 0; i < C; ++i) o[i] = { name: XLSX.utils.encode_col(i), key: i };\r\n  return o;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {ListItemText,ListItem,List,Divider,} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Dialog,\r\n  Slide,\r\n  Grid,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  container: {\r\n    padding: 64,\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  add:{\r\n    backgroundColor: \"white\",\r\n    color: theme.palette.primary.main\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function QuestionDialog({\r\n  open,\r\n  setOpen,\r\n  question,\r\n  setQuestion,\r\n  addData,\r\n  index,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setQuestion({});\r\n    formik.resetForm({});\r\n    setOpen(false);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      no: question.no,\r\n      question: question.question,\r\n      option1: question.option1,\r\n      option2: question.option2,\r\n      option3: question.option3,\r\n      option4: question.option4,\r\n      answer: question.answer,\r\n      type: question.type,\r\n      mark: question.mark,\r\n      neg: question.neg,\r\n    },\r\n    onSubmit: (values) => {\r\n      // alert(JSON.stringify(values, null, 2))\r\n      console.log(values);\r\n      addData({ ...values, no: question.no }, index);\r\n      formik.resetForm({});\r\n      handleClose();\r\n    },\r\n  });\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <AppBar className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={handleClose}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Question\r\n              </Typography>\r\n              <Button autoFocus disableElevation className={classes.add} type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={classes.container}>\r\n            <TextField\r\n              label=\"Enter question\"\r\n              name=\"question\"\r\n              multiline\r\n              rows={4}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={formik.handleChange}\r\n              value={formik.values.question}\r\n            />\r\n            <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              style={{ marginTop: \"16px\" }}\r\n            >\r\n              <TextField\r\n                label=\"mark\"\r\n                name=\"mark\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                required\r\n                onChange={formik.handleChange}\r\n                value={formik.values.mark}\r\n                helperText=\"Enter Only Numeric Values\"\r\n              />\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"type\">Type</InputLabel>\r\n                <Select\r\n                  labelId=\"type\"\r\n                  id=\"type\"\r\n                  name=\"type\"\r\n                  value={formik.values.type}\r\n                  onChange={formik.handleChange}\r\n                  label=\"Type\"\r\n                  required\r\n                  alignItems=\"center\"\r\n                >\r\n                  <MenuItem value={\"aptitude\"}>aptitude</MenuItem>\r\n                  <MenuItem value={\"communication\"}>communication</MenuItem>\r\n                  <MenuItem value={\"logical\"}>logical</MenuItem>\r\n                  <MenuItem value={\"technical\"}>technical</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                label=\"Negative Score\"\r\n                name=\"neg\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.neg}\r\n                helperText=\"Enter Only Negative Marks If Applicable. -ve Sign Does Not Matter.\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              style={{ marginTop: \"16px\" }}\r\n              alignItems=\"stretch\"\r\n            >\r\n              <TextField\r\n                label=\"Option A\"\r\n                name=\"option1\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                style={{ marginTop: \"16px\" }}\r\n                required\r\n                onChange={formik.handleChange}\r\n                value={formik.values.option1}\r\n              />\r\n              <TextField\r\n                label=\"Option B\"\r\n                name=\"option2\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                style={{ marginTop: \"16px\" }}\r\n                required\r\n                onChange={formik.handleChange}\r\n                value={formik.values.option2}\r\n              />\r\n              <TextField\r\n                label=\"Option C\"\r\n                name=\"option3\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                style={{ marginTop: \"16px\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.option3}\r\n              />\r\n              <TextField\r\n                label=\"Option D\"\r\n                name=\"option4\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                style={{ marginTop: \"16px\" }}\r\n                onChange={formik.handleChange}\r\n                value={formik.values.option4}\r\n              />\r\n              {/* <TextField\r\n              label=\"Option 5\"\r\n              name=\"option5\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              style={{marginTop:\"16px\"}}\r\n              onChange={formik.handleChange}\r\n              value={formik.values.option5}\r\n            /> */}\r\n              <Grid>\r\n              <FormControl className={classes.formControl} variant=\"outlined\" style={{marginTop:\"16px\"}} >\r\n                <InputLabel id=\"answer\">Answer</InputLabel>\r\n                <Select\r\n                  labelId=\"answer\"\r\n                  id=\"answer\"\r\n                  name=\"answer\"\r\n                  label=\"Answer\"\r\n                  required\r\n                  alignItems=\"center\"\r\n                  value={formik.values.answer}\r\n                  onChange={formik.handleChange}\r\n                >\r\n                  <MenuItem value={\"a\"}>A</MenuItem>\r\n                  <MenuItem value={\"b\"}>B</MenuItem>\r\n                 {formik.values.option3 &&(\r\n                  <MenuItem value={\"c\"}>C</MenuItem>\r\n                 )}\r\n                 {formik.values.option4 &&(\r\n                  <MenuItem value={\"d\"}>D</MenuItem>\r\n                 )}\r\n                </Select>\r\n              </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    padding: 16,\r\n  },\r\n  button:{\r\n      textTransform:\"none\",\r\n  }\r\n}));\r\n\r\nexport default function ConfirmDeletePopper({\r\n  handleClick,\r\n  handleClose,\r\n  anchorEl,\r\n  setAnchorEl,\r\n  onDelete,\r\n  item,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <div className={classes.root}>\r\n          <Typography className={classes.typography}>Confirm delete</Typography>\r\n          <Grid\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            container\r\n          >\r\n            <Button\r\n              className={classes.button}\r\n              size=\"small\"\r\n              onClick={handleClose}\r\n            >\r\n              {\" \"}\r\n              cancel\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                onDelete(item);\r\n                handleClose();\r\n              }}\r\n              color=\"secondary\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n  Chip,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDeletePopper from \"../../dialogs/ConfirmDeletePopper\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 8,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  option: {\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n  },\r\n  span: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    minWidth: \"300px\",\r\n  },\r\n  ansPaper: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    minWidth: \"300px\",\r\n    color:\"white\",\r\n    backgroundColor:\"#1a73e8\",\r\n  },\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  optionLabel: {\r\n    color: \"white\",\r\n    backgroundColor: \"grey\",\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n  },\r\n  ansLabel: {\r\n    backgroundColor:\"#1a73e8\",\r\n    color: \"white\",\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n  },\r\n}));\r\nexport default function QuestionListItem({ item, onEdit, onDelete,edit,index }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} key={index}>\r\n      <div className={classes.header}>\r\n        <Typography>{index+1 + \".\" + item.question}</Typography>\r\n        {edit&&(<div className={classes.buttonContainer}>\r\n          <IconButton\r\n            area-label=\"edit\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className={classes.edit}\r\n            onClick={() => onEdit(item)}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <ConfirmDeletePopper\r\n            handleClick={handleClick}\r\n            handleClose={handleClose}\r\n            anchorEl={anchorEl}\r\n            setAnchorEl={setAnchorEl}\r\n            onDelete={onDelete}\r\n            item={item}\r\n          />\r\n          <IconButton\r\n            area-label=\"delete\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className={classes.delete}\r\n            onClick={handleClick}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>)}\r\n      </div>\r\n      <Grid justify=\"space-between\" container>\r\n        <span className={classes.span}>\r\n          <Chip\r\n            label=\"Basic\"\r\n            label={item.type}\r\n            size=\"small\"\r\n            clickable\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          />\r\n        </span>\r\n\r\n        <span className={classes.span}>\r\n          {\" \"}\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={classes.label}\r\n          ></Typography>{\" \"}\r\n          <Typography>{item.neg}</Typography>\r\n        </span>\r\n        <span className={classes.span}>\r\n          {\" \"}\r\n          <Typography variant=\"subtitle1\" className={classes.label}>\r\n            Mark :{\" \"}\r\n          </Typography>{\" \"}\r\n          <Typography>{item.mark}</Typography>\r\n        </span>\r\n\r\n      </Grid>\r\n      <Grid\r\n        direction=\"row\"\r\n        container\r\n        style={{ marginTop: \"8px\" }}\r\n        spacing={5}\r\n      >\r\n        <Grid item xs>\r\n          <Paper variant=\"outlined\" elevation={0} className={classes.span}>\r\n            <Typography variant=\"body1\" className={item.answer==='a'?classes.ansLabel:classes.optionLabel}>\r\n              a\r\n            </Typography>{\" \"}\r\n            <Typography className={classes.option}>{item.option1}</Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            square\r\n            elevation={0}\r\n            className={classes.span}\r\n          >\r\n            <Typography variant=\"body1\" className={item.answer==='b'?classes.ansLabel:classes.optionLabel}>\r\n              b\r\n            </Typography>{\" \"}\r\n            <Typography className={classes.option}>{item.option2}</Typography>\r\n          </Paper>\r\n        </Grid>\r\n        {item.option3 && (\r\n          <Grid item xs>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              square\r\n              elevation={0}\r\n              className={classes.span}\r\n            >\r\n              <Typography variant=\"body1\" className={item.answer==='c'?classes.ansLabel:classes.optionLabel}>\r\n                c\r\n              </Typography>\r\n              <Typography className={classes.option}>{item.option3}</Typography>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {item.option4 && (\r\n          <Grid item xs>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              square\r\n              elevation={0}\r\n              className={classes.span}\r\n            >\r\n              <Typography variant=\"body1\" className={item.answer==='d'?classes.ansLabel:classes.optionLabel}>\r\n                d\r\n              </Typography>\r\n              <Typography className={classes.option}>{item.option4}</Typography>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n        {/* {item.option5 && (\r\n          <Grid item xs>\r\n            <Paper\r\n              variant=\"outlined\"\r\n              square\r\n              elevation={0}\r\n              className={classes.span}\r\n            >\r\n              <Typography variant=\"body1\" className={classes.optionLabel}>\r\n                e\r\n              </Typography>\r\n              <Typography className={classes.option}>\r\n                {\" \"}\r\n                {item.option5}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        )} */}\r\n        {/* <Grid item xs>\r\n          <Paper className={classes.ansPaper} elevation={0}>\r\n            <Typography className={classes.ansLabel}>ans</Typography>\r\n            <Typography variant=\"body1\">{item.answer}</Typography>\r\n          </Paper>\r\n        </Grid> */}\r\n      </Grid>\r\n\r\n      <Divider style={{ margin: \"8px\" }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function SimpleMenu({\r\n  onEditClicked,\r\n  onDisableClicked,\r\n  onDeleteClicked,\r\n  onAssignClicked,\r\n  onUpdateQuestionsClicked,\r\n  onReplaceQuestionsClicked,\r\n  disabled\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };  \r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        variant=\"outlined\"\r\n        disableElevation\r\n        size=\"small\"\r\n      >\r\n        Action\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        getContentAnchorEl={null}\r\n        elevation={0}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\", \r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onEditClicked();\r\n            handleClose();\r\n          }}\r\n        >\r\n          Edit\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            onDisableClicked();\r\n            handleClose();\r\n          }}\r\n        >\r\n         { disabled?\"Disable\":\"Enable\"}\r\n        </MenuItem>\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            onDeleteClicked();\r\n            handleClose();\r\n          }}\r\n        >\r\n          Delete\r\n        </MenuItem> */}\r\n        <MenuItem\r\n          onClick={() => {\r\n            onAssignClicked();\r\n            handleClose();\r\n          }}\r\n        >\r\n          Assign Students\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            onUpdateQuestionsClicked();\r\n            handleClose();\r\n          }}\r\n        >\r\n         Update questions\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            onReplaceQuestionsClicked();\r\n            handleClose();\r\n          }}\r\n        >\r\n         Replace questions\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, TextField, Grid, Button } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport Moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid:{\r\n    marginTop:16,\r\n    marginBottom:32,\r\n    padding:4,\r\n},\r\n}));\r\n\r\nexport default function Details({ details, edit,onEdit,counts }) {\r\n  const classes = useStyles();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      id: !!details ? details.id : \"\",\r\n      Title: !!details ? details.Title : \"\",\r\n      StartDate: !!details ?  Moment(details.StartDate).format('YYYY-MM-DD') : null,\r\n      EndDate: !!details ?  Moment(details.EndDate).format('YYYY-MM-DD') : null,\r\n      StartTime: !!details ? details.StartTime : null,\r\n      EndTime: !!details ? details.EndTime : null,\r\n      Duration: !!details ? details.Duration : 40,\r\n      ac:!!details ? details.AptitudeCount : 0,\r\n      lc:!!details ? details.LogicalCount : 0,\r\n      cc:!!details ? details.CommunicationCount : 0,\r\n      tc:!!details ? details.TechnicalCount : 0\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(values)\r\n      onEdit(values,\"details\")\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Grid container justify=\"space-between\" className={classes.grid}>\r\n            <TextField\r\n              id=\"Title\"\r\n              name=\"Title\"\r\n              label=\"Name\"\r\n              multiline\r\n              style={{ flex: \".8\", marginRight: \"16px\" }}\r\n              rowsMax={4}\r\n              required={edit}\r\n              inputProps={{ readOnly: !edit }}\r\n              value={formik.values.Title}\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <TextField\r\n              id=\"Title\"\r\n              name=\"Duration\"\r\n              label=\"Duration\"\r\n              type=\"number\"\r\n              style={{ flex: \".2\", marginRight: \"16px\" }}\r\n              required={edit}\r\n              inputProps={{ readOnly: !edit }}\r\n              value={formik.values.Duration}\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid container justify=\"space-between\" className={classes.grid}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              label=\"Start date\"\r\n              required={edit}\r\n              name=\"StartDate\"\r\n              type=\"date\"\r\n              inputProps={{ readOnly: !edit  }}\r\n              InputProps={{inputProps: { min:Moment().format('YYYY-MM-DD')}  }}\r\n              value={formik.values.StartDate}\r\n              onChange={(event) => {\r\n                console.log(\"event\", event.target.value);\r\n                formik.setFieldValue(\"StartDate\", event.target.value);\r\n              }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              label=\"Start time\"\r\n              name=\"StartTime\"\r\n              type=\"time\"\r\n              required={edit}\r\n              inputProps={{ readOnly: !edit }}\r\n              value={formik.values.StartTime}\r\n              onChange={(event) => {\r\n                console.log(\"event\", event.target.value);\r\n                formik.setFieldValue(\"StartTime\", event.target.value);\r\n              }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              label=\"End date\"\r\n              inputProps={{ readOnly: !edit }}\r\n              InputProps={{inputProps: { min:Moment().format('YYYY-MM-DD')}  }}\r\n              name=\"EndDate\"\r\n              type=\"date\"\r\n              required={edit}\r\n              format=\"MM/dd/yyyy\"\r\n              value={formik.values.EndDate}\r\n              onChange={(event) => {\r\n                console.log(\"event\", event.target.value);\r\n                formik.setFieldValue(\"EndDate\", event.target.value);\r\n              }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              label=\"End time\"\r\n              name=\"EndTime\"\r\n              type=\"time\"\r\n              inputProps={{ readOnly: !edit }}\r\n              required={edit}\r\n              value={formik.values.EndTime}\r\n              onChange={(event) => {\r\n                console.log(\"event\", event.target.value);\r\n                formik.setFieldValue(\"EndTime\", event.target.value);\r\n              }}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n            <Grid container justify=\"space-between\" style={{marginTop:32,marginBottom:32,marginLeft:8,marginRight:8}}>\r\n        <TextField\r\n            id=\"ac\"\r\n            name=\"ac\"\r\n            label=\"Aptitude Qtns\"\r\n            variant=\"outlined\"\r\n            inputProps={{ readOnly: !edit }}\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.ac}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n        <TextField\r\n            id=\"lc\"\r\n            name=\"lc\"\r\n            label=\"Logical Qtns\"\r\n            variant=\"outlined\"\r\n            inputProps={{ readOnly: !edit }}\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.lc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n        <TextField\r\n            id=\"cc\"\r\n            name=\"cc\"\r\n            label=\"Comm Qtns\"\r\n            variant=\"outlined\"\r\n            inputProps={{ readOnly: !edit }}\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.cc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n        <TextField\r\n            id=\"tc\"\r\n            name=\"tc\"\r\n            label=\"Tech Qtns\"\r\n            variant=\"outlined\"\r\n            inputProps={{ readOnly: !edit }}\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.tc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n          />\r\n        </Grid>\r\n          <Grid container justify=\"flex-end\">\r\n          {edit && (\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              inputProps={{ readOnly: !edit }}\r\n              color=\"primary\"\r\n              disableElevation\r\n              size=\"small\"\r\n              style={{margin:\"8px\"}}\r\n            >\r\n              Save\r\n            </Button>\r\n          )}{\" \"}\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React, { useState, forwardRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, Paper, TextField } from \"@material-ui/core\";\r\n\r\nimport {\r\n  Add,\r\n  ArrowDownward,\r\n  Search,\r\n  Clear,\r\n  FirstPage,\r\n  LastPage,\r\n  ChevronLeft,\r\n  FilterList,\r\n  Check,\r\n  DeleteOutline,\r\n  Edit,\r\n  SaveAlt,\r\n  ViewColumn,\r\n  ChevronRight,\r\n  Remove,\r\n} from \"@material-ui/icons\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: 32,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 12,\r\n    display:\"flex\",\r\n    justifyContent:\"flex-end\"\r\n  },\r\n});\r\nexport default function Instructions({ instructions,edit,onEdit }) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Instruction\",\r\n      field: \"instruction\",\r\n      cellStyle: { width: \"100%\" },\r\n      editComponent: (props) => (\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          fullWidth\r\n          type=\"text\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"ins\",instructions)\r\n    setData(instructions);\r\n    return () => {};\r\n  }, []);\r\n  const editable = {\r\n    onRowAdd: (newData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(\"new\",newData)\r\n          setData([...data, newData.instruction]);\r\n\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n    onRowUpdate: (newData, oldData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(\"new\",newData)\r\n          const dataUpdate = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataUpdate[index] = newData.instruction;\r\n          setData([...dataUpdate]);\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n    onRowDelete: (oldData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          const dataDelete = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataDelete.splice(index, 1);\r\n          setData([...dataDelete]);\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n  };\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <Add {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n  const tableOptions = {\r\n    filtering: false,\r\n    search: false,\r\n    sorting: false,\r\n    pageSizeOptions: [5, 10],\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Paper>\r\n      <MaterialTable\r\n        columns={tableColumns}\r\n        data={data.map((val)=>({instruction:val.Instruction}))}\r\n        icons={tableIcons}\r\n        editable={edit?editable:{}}\r\n        disableElevation\r\n        options={tableOptions}\r\n        title=\"Instructions to be displayed to students\"\r\n      />\r\n      <div className={classes.buttonContainer}>\r\n       {edit&& (<Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={()=>{onEdit(data,\"instructions\")}}\r\n        >\r\n          Save\r\n        </Button>)}\r\n      </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, TextField, Grid, Button, Typography } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport QuestionListItem from \"../../../../components/list/QuestionListItem\";\r\nimport QuestionDialog from \"../../../../components/dialogs/QuestionDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    marginTop: 16,\r\n    marginBottom: 32,\r\n    padding: 4,\r\n    maxHeight:600,\r\n    overflowY:\"auto\",\r\n    overflowX:\"hidden\",\r\n    scrollbarWidth:\"thin\"\r\n  },\r\n}));\r\n\r\nexport default function Questions({ questions }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [question, setQuestion] = useState({});\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.grid}>\r\n        <Typography gutterBottom variant=\"body2\">\r\n         Total Questions : {questions.length}\r\n      </Typography>\r\n        {open && question.id && (\r\n          <QuestionDialog\r\n            open={open}\r\n            setOpen={setOpen}\r\n            question={question}\r\n            setQuestion={setQuestion}\r\n            // addData={addData}\r\n            index={question.no - 1}\r\n          />\r\n        )}\r\n        {questions.map((item, index) => (\r\n          <QuestionListItem\r\n            item={Object.keys(item).reduce((c, k) => (c[k.toLowerCase()] = item[k], c), {})}\r\n            // onEdit={onEdit}\r\n            // onDelete={onDelete}\r\n            index={index}\r\n            edit={false}\r\n          />\r\n        ))}\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport {\r\n  AddBox,\r\n  ArrowDownward,\r\n  Search,\r\n  Clear,\r\n  FirstPage,\r\n  LastPage,\r\n  ChevronLeft,\r\n  FilterList,\r\n  Check,\r\n  DeleteOutline,\r\n  Edit,\r\n  SaveAlt,\r\n  Delete,\r\n  ViewColumn,\r\n  ChevronRight,\r\n  Remove,\r\n  PhoneDisabled,\r\n  PersonAddDisabled,\r\n  Refresh\r\n} from \"@material-ui/icons\";\r\nimport { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 32,\r\n  },\r\n}));\r\nconst MarkListTable = ({ history, data, remoteData, loading=false, studentId, examId, isStudentTable = true,\r\n  types = [\"AptitudeTotal\", \"AptitudeOutOf\", \"CommunicationTotal\", \"CommunicationOutOf\", \"LogicalTotal\", \"LogicalOutOf\", \"TechnicalTotal\", \"TechnicalOutOf\"] }) => {\r\n  const tableRef = React.createRef();\r\n\r\n  const classes = useStyles();\r\n  // const selectedStudents = useSelector((state) => state.selectedStudents);\r\n  const dispatch = useDispatch();\r\n\r\n  const tableStudentColumns = [\r\n    { title: \"Exam Id\", field: \"ExamId\", align: \"left\" },\r\n    { title: \"Exam title\", field: \"Title\", align: \"left\" },\r\n    { title: \"Marks\", field: \"Total\", align: \"left\" },\r\n    { title: \"Aptitude Score\", field: \"AptitudeTotal\" },\r\n    { title: \"Aptitude Total\", field: \"AptitudeOutOf\" },\r\n    { title: \"Communication Score\", field: \"CommunicationTotal\" },\r\n    { title: \"Commuincation Total\", field: \"CommunicationOutOf\" },\r\n    { title: \"Logical Score\", field: \"LogicalTotal\" },\r\n    { title: \"Logical Total\", field: \"LogicalOutOf\" },\r\n    { title: \"Technical Score\", field: \"TechnicalTotal\" },\r\n    { title: \"Technical Total\", field: \"TechnicalOutOf\" },\r\n    { title: \"Total\", field: \"TotalOutOf\", align: \"left\" },\r\n  ];\r\n\r\n  const addStudentColumns = (types) => {\r\n    types.map((type) =>\r\n      tableStudentColumns.push({ title: type, feild: [type] })\r\n    )\r\n  }\r\n  const tableExamColumns = [\r\n    { title: \"Student Id\", field: \"StudentId\", align: \"left\" },\r\n    { title: \"Email\", field: \"Email\", align: \"left\" },\r\n    { title: \"Marks\", field: \"Total\", align: \"left\" },\r\n    { title: \"Aptitude Score\", field: \"AptitudeTotal\" },\r\n    { title: \"Aptitude Total\", field: \"AptitudeOutOf\" },\r\n    { title: \"Communication Score\", field: \"CommunicationTotal\" },\r\n    { title: \"Commuincation Total\", field: \"CommunicationOutOf\" },\r\n    { title: \"Logical Score\", field: \"LogicalTotal\" },\r\n    { title: \"Logical Total\", field: \"LogicalOutOf\" },\r\n    { title: \"Technical Score\", field: \"TechnicalTotal\" },\r\n    { title: \"Technical Total\", field: \"TechnicalOutOf\" },\r\n    { title: \"Total\", field: \"TotalOutOf\", align: \"left\" },\r\n  ];\r\n\r\n  const addExamColumns = (types) => {\r\n    types.map((type) =>\r\n      tableExamColumns.push({ title: type, field: [type] })\r\n    )\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   isStudentTable ? addStudentColumns(types) : addExamColumns(types)\r\n  //   return () => {\r\n\r\n  //   }\r\n  // }, [])\r\n  const tableOptions = {\r\n    search: true,\r\n    filtering: true,\r\n    exportButton: true,\r\n    headerStyle: {\r\n      backgroundColor: '#1a73e8',\r\n      color: '#FFF'\r\n    }\r\n  };\r\n\r\n  const actionsOptions = [\r\n    {\r\n      icon: () => <Refresh />,\r\n      tooltip: 'Refresh Data',\r\n      isFreeAction: true,\r\n      exportButton: true,\r\n      // onClick: () => tableRef.current && tableRef.current.onQueryChange,\r\n      onClick: () => remoteData(null)\r\n    }\r\n  ]\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const searchHandler = (text) => {            // 6\r\n    // setSearchText(text);\r\n    tableRef.current.onSearchChange(text);  // 7\r\n  }\r\n\r\n  const handleRowclick = (id) => {\r\n    history.push('/app/students/details/' + id)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        options={tableOptions}\r\n        icons={tableIcons}\r\n        title=\"Mark list\"\r\n        columns={isStudentTable ? tableStudentColumns : tableExamColumns}\r\n        data={data}\r\n        isLoading={loading}\r\n        actions={actionsOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkListTable;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport MarkListTable from \"components/tables/MarkListTable\";\r\nimport api from 'api/api';\r\nimport {getCredentials} from 'services/authService'\r\nimport SimpleLoading from \"components/loading/SimpleLoading\";\r\nexport default function ExamMarkList(props) {\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  useEffect(() => {\r\n    remoteData()\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n    const remoteData = async () =>{\r\n      try {\r\n        setLoading(true);\r\n        const response = await api.post(\"/admin/getExamStudentMarks\", { examId:props.match.params.id }, {\r\n          headers: {\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        },\r\n          { timeout: 1000 }\r\n        );\r\n  \r\n        console.log(\"STUD DETAILD \", response.data.response);\r\n        setData(response.data.response);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  return (\r\n    <div>\r\n      {loading &&(<SimpleLoading open={loading}/>)}\r\n      <MarkListTable\r\n        data={data}\r\n        loading={loading}\r\n        examId={props.match.params.id}\r\n        history={props.history}\r\n        remoteData={remoteData}\r\n        isStudentTable={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport MarkListTable from 'components/tables/MarkListTable'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\nexport default function MarkList(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport api from \"../../../../api/api\";\r\nimport { getCredentials } from \"../../../../services/authService\";\r\nimport StudentTable from \"../../../../components/tables/StudentTable\";\r\nimport SnackBar from \"../../../../components/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    }\r\n}));\r\n\r\nconst ExamAssignStudents = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n    const students = useSelector((state) => state.selectedStudents);\r\n\r\n    useEffect(() => {\r\n        remoteData();\r\n    }, []);\r\n\r\n    const assignStudents = async (students, examId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/assignStudentsToExam',\r\n                { students, examId },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setMesssage('Students successfully assigned');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            remoteData();\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Student assignment failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const remoteData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/getExamUnassignedStudents',\r\n                { examId: props.match.params.id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setData(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleAssign = () => {\r\n        assignStudents(students.selected, props.match.params.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <Backdrop className={classes.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen}/>\r\n            )}\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                color=\"primary\"\r\n                justify=\"flex-end\"\r\n            >\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={handleAssign}\r\n                >\r\n                    Assign\r\n                </Button>\r\n            </Grid>\r\n            <StudentTable history={props.history} data={data} remoteData={remoteData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExamAssignStudents;","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ExcelReader from \"components/buttons/ExcelReader\";\r\nimport QuestionListItem from 'components/list/QuestionListItem';\r\nimport api from 'api/api'\r\nimport {getCredentials} from 'services/authService'\r\n\r\nexport default function EditQuestions({handleSubmit,open,handleClose,update,data,setData}) {\r\n   \r\n\r\n  return (\r\n    <div>\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth maxWidth=\"lg\">\r\n    <DialogTitle id=\"form-dialog-title\">{update? \"Update Questions\":\"Replace Questions\"}</DialogTitle>\r\n        <DialogContent style={{scrollbarWidth:\"thin\",scrollbarColor:\"blue\"}}>\r\n          <DialogContentText>\r\n         {update?\" Do not update with previously added questions. Only add fresh set of questions !!\":\"Replace exisiting questions with a new one.\"}\r\n          </DialogContentText>\r\n          <ExcelReader setData={setData} />\r\n          \r\n        {data.map((item, index) => (\r\n          <QuestionListItem\r\n            item={item}\r\n            // onEdit={onEdit}\r\n            // onDelete={onDelete}  \r\n            index={index}\r\n            edit={false}\r\n          />\r\n        ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>{handleClose();setData([]);}} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={()=>{handleSubmit()}} color=\"primary\">\r\n          {update? \"Update\":\"Replace\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport SimpleLoading from \"../../../../components/loading/SimpleLoading\";\r\nimport api from \"../../../../api/api\";\r\nimport { getCredentials } from \"../../../../services/authService\";\r\nimport ExamDetailsMenu from \"../../../../components/menu/ExamDetailsMenu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Chip, Grid } from \"@material-ui/core\";\r\nimport Details from \"./Details\";\r\nimport Instructions from \"./Instructions\";\r\nimport Questions from \"./Questions\";\r\nimport { getExam } from \"../../../../actions/examActions\";\r\nimport ExamMarkList from './ExamMarkList'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  withRouter,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport MarkList from \"../MarkLIst\";\r\nimport ExamAssignStudents from \"./ExamAssignStudents\";\r\nimport EditQuestions from \"./EditQuestions\";\r\nimport SnackBar from \"components/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuContainer: {\r\n    display: \" flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\nexport default function ExamDetails(props) {\r\n  const classes = useStyles();\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const exam = useSelector((state) => state.exam);\r\n  const { loading, details, instructions, questions,counts } = exam;\r\n  const [progress, setProgress] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState();\r\n  const [update, setUpdate] = useState(true)\r\n  const [pgs, setPgs] = useState(false)\r\n  const [open, setOpen] = React.useState(false);\r\n  const [data, setData] = useState([]);\r\n \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getExam(props.match.params.id));\r\n  }, []);\r\n  useEffect(() => {\r\n    setStatus(details.status);\r\n  }, [loading]);\r\n  const disableExam = async (id) => {\r\n    try {\r\n      const { data } = await api.post(\r\n        \"/admin/toggleExamStatus\",\r\n        { examId: id },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      dispatch(getExam(props.match.params.id));\r\n      // setProgress(false)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const editExam = async (values) => {\r\n    try {\r\n      const res = await api.post(\r\n        \"/admin/editExam\",\r\n        { exam:values},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const onEditClicked = () => {\r\n    setEdit(!edit);\r\n  };\r\n\r\n  const onAssignClicked = () => {\r\n    props.history.push(\"/app/exams/details/\" + props.match.params.id + \"/assignStudents\");\r\n  }\r\n  const onDeleteClicked = () => { };\r\n  const onDisableClicked = () => {\r\n    // setProgress(true)\r\n    disableExam(props.match.params.id);\r\n    // dispatch(getExam(props.match.params.id))\r\n  };\r\n  const onEdit = async (values, mode) => {\r\n    switch (mode) {\r\n      case \"details\":\r\n        editExam(values);\r\n        dispatch(getExam(props.match.params.id));\r\n        setEdit(false);\r\n        break;\r\n\r\n      case \"instructions\":\r\n        setEdit(false);\r\n        break;\r\n\r\n      case \"questions\":\r\n        setEdit(false);\r\n        break;\r\n    }\r\n  };\r\n  const updateQuestions = () => {\r\n    setUpdate(true)\r\n    setOpen(true)\r\n  }\r\n  const replaceQuestions = () => {\r\n    setUpdate(false)\r\n    setOpen(true)\r\n  }\r\n  const handleSubmit =async () => {\r\n    console.log(\"ekfbajksnflkn\")\r\n    // setProgress(false)\r\n    setPgs(false)\r\n    try {\r\n      const resp = await api.post(update?'/admin/insertAdditionalQuestions':\"/admin/replaceQuestions\", { examId:details.id,questions:data },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getCredentials()}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n      );\r\n      // setProgress(true)\r\n      setOpen(false)\r\n      window.location.reload(false);\r\n      \r\n\r\n    } catch (error) {\r\n      // setProgress(true)\r\n      console.log(error)\r\n      setPgs(true)\r\n\r\n\r\n    }\r\n  };\r\n\r\n  if (loading && !progress) {\r\n    console.log(\"d\", !!details);\r\n    return <SimpleLoading />;\r\n  } else\r\n    return (\r\n      <div>\r\n        <EditQuestions open={open} handleSubmit={handleSubmit} handleClose={handleClose} update={update} data={data} setData={setData}/>\r\n        <SnackBar open={pgs} message={update?\"An error has occured\":\"An error has occured or exam is on progress. Cannot replace question sheet now !!\"} severity=\"error\" setOpen={setPgs} />\r\n        <Switch>\r\n          <Route path=\"/app/exams/details/:id/marklist\" component={ExamMarkList} />\r\n          <Route path=\"/app/exams/details/:id/assignStudents\" component={ExamAssignStudents} />\r\n          <Route\r\n            path=\"/app/exams/details/:id\"\r\n            render={() => (\r\n              <div>\r\n                <div className={classes.menuContainer}>\r\n                  <div></div>\r\n                  <ExamDetailsMenu\r\n                    onEditClicked={onEditClicked}\r\n                    onDeleteClicked={onDeleteClicked}\r\n                    onDisableClicked={onDisableClicked}\r\n                    onAssignClicked={onAssignClicked}\r\n                    onUpdateQuestionsClicked={updateQuestions}\r\n                    onReplaceQuestionsClicked={replaceQuestions}\r\n                    disabled={details.Status === \"active\"}\r\n                  />\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() =>\r\n                      props.history.push(\"/app/exams/details/\" + props.match.params.id + \"/marklist\")\r\n                    }\r\n                  >\r\n                    Mark list\r\n          </Button>\r\n                </div>\r\n                {details.Status && (\r\n                  <Chip\r\n                    size=\"small\"\r\n                    label={details.Status}\r\n                    color={\r\n                      details.Status === \"active\" ? \"primary\" : \"secondary\"\r\n                    }\r\n                  />\r\n                )}\r\n                <Details details={details} edit={edit} onEdit={onEdit} counts={counts} />\r\n                <Instructions\r\n                  edit={false}\r\n                  onEdit={onEdit}\r\n                  instructions={instructions}\r\n                />\r\n                <Questions questions={questions} />\r\n              </div>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ExcelReader from \"../../../../../components/buttons/ExcelReader\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport QuestionDialog from \"../../../../../components/dialogs/QuestionDialog\";\r\nimport QuestionListItem from \"../../../../../components/list/QuestionListItem\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getExamQuestions } from \"../../../../../actions/examActions\";\r\nimport index from \"../../ExamDetails\";\r\nimport { useFormik } from \"formik\";\r\nimport { set } from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 32,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 24,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  insert: {\r\n    textTransform: \"none\",\r\n    marginLeft: 32,\r\n  },\r\n  paper: {\r\n    padding: 8,\r\n    maxHeight: 600,\r\n    overflowY: \"auto\",\r\n    scrollbarWidth: \"thin\",\r\n  },\r\n});\r\nexport default function Three({ handleNext, handleBack }) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [question, setQuestion] = useState({});\r\n  const publishExam = useSelector((state) => state.publishExam);\r\n  const { questions } = publishExam;\r\n  const [ac, setAc] = useState(0)\r\n  const [lc, setLc] = useState(0)\r\n  const [cc, setCc] = useState(0)\r\n  const [tc, setTc] = useState(0)\r\n  const dispatch = useDispatch([]);\r\n  useEffect(() => {\r\n    setData(questions);\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(getExamQuestions(data));\r\n  }, [data]);\r\n  useEffect(() => {\r\n    var a = 0\r\n    var l = 0\r\n    var t = 0\r\n    var c = 0\r\n    questions.map((item, index) => {\r\n      if (item.type === 'aptitude') {\r\n        a++\r\n      }\r\n      if (item.type === 'logical')\r\n        l++\r\n      if (item.type === 'technical')\r\n        t++\r\n      if (item.type === 'communication')\r\n        c++\r\n    })\r\n    setAc(a)\r\n    setLc(l)\r\n    setTc(t)\r\n    setCc(c)\r\n  }, [questions])\r\n  const addData = (values) => {\r\n    let index = -1;\r\n    try {\r\n      data.map((val, i) => {\r\n        if (val.no == values.no) index = i;\r\n      });\r\n      if (index === -1) {\r\n        setData((data) => data.concat(values));\r\n      } else {\r\n        let items = [...data];\r\n        items[index] = values;\r\n        setData(items);\r\n      }\r\n    } catch (error) { }\r\n  };\r\n  const onEdit = (item) => {\r\n    setQuestion(item);\r\n    setOpen(true);\r\n  };\r\n  const onDelete = (item) => {\r\n    var index = data.findIndex((x) => x.no == item.no);\r\n    setData((data) => data.filter((item, j) => index !== j));\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      lc: 0,\r\n      cc: 0,\r\n      tc: 0,\r\n      ac: 0\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      dispatch(getExamQuestions(data, values));\r\n      handleNext();\r\n    },\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography gutterBottom variant=\"body2\">\r\n        Upload or manually enter questions here.\r\n      </Typography>\r\n      <Grid\r\n        direction=\"row\"\r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        style={{ margin: \"16px\" }}\r\n      >\r\n        <ExcelReader setData={setData} />\r\n        <Typography variant=\"subtitle1\" style={{ marginLeft: \"32px\" }}>\r\n          - or -\r\n        </Typography>\r\n        <Button\r\n          className={classes.insert}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          onClick={() => {\r\n            setQuestion({ no: data.length + 1 });\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          <Add />\r\n          Insert Question\r\n        </Button>\r\n      </Grid>\r\n      <Paper className={classes.paper}>\r\n        {open && question.no && (\r\n          <QuestionDialog\r\n            open={open}\r\n            setOpen={setOpen}\r\n            question={question}\r\n            setQuestion={setQuestion}\r\n            addData={addData}\r\n            index={question.no - 1}\r\n          />\r\n        )}\r\n        {data.length === 0 && (\r\n          <Typography variant=\"subtitle2\" style={{ textAlign: \"center\" }}>\r\n            No Questions added\r\n          </Typography>\r\n        )}\r\n        {data.map((item, index) => (\r\n          <QuestionListItem\r\n            item={item}\r\n            onEdit={onEdit}\r\n            onDelete={onDelete}\r\n            index={index}\r\n            edit={true}\r\n          />\r\n        ))}\r\n      </Paper>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container justify=\"space-between\" style={{ marginTop: 32 }}>\r\n          <TextField\r\n            id=\"ac\"\r\n            name=\"ac\"\r\n            label=\"Aptitude Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.ac}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: ac } }}\r\n          />\r\n          <TextField\r\n            id=\"lc\"\r\n            name=\"lc\"\r\n            label=\"Logical Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.lc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: lc } }}\r\n          />\r\n          <TextField\r\n            id=\"cc\"\r\n            name=\"cc\"\r\n            label=\"Comm Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.cc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: cc } }}\r\n          />\r\n          <TextField\r\n            id=\"tc\"\r\n            name=\"tc\"\r\n            label=\"Tech Qtns\"\r\n            variant=\"outlined\"\r\n            type=\"number\"\r\n            style={{ flex: \".2\", marginRight: \"16px\" }}\r\n            required\r\n            value={formik.values.tc}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            InputProps={{ inputProps: { min: 0, max: tc } }}\r\n          />\r\n        </Grid>\r\n        <Typography variant=\"subtitle1\">*Cannot leave all question type count as 0</Typography>\r\n        <div className={classes.buttonContainer}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secodary\"\r\n            disableElevation\r\n            style={{ marginRight: \"16px\" }}\r\n            onClick={handleBack}\r\n          >\r\n            Previous\r\n        </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            type=\"submit\"\r\n            disabled={data.length === 0 || (formik.values.ac === 0 && formik.values.lc === 0 && formik.values.cc === 0 && formik.values.tc === 0)}\r\n          // onClick={() => {\r\n\r\n          // }}\r\n          >\r\n            Next\r\n        </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, forwardRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Add,\r\n  ArrowDownward,\r\n  Search,\r\n  Clear,\r\n  FirstPage,\r\n  LastPage,\r\n  ChevronLeft,\r\n  FilterList,\r\n  Check,\r\n  DeleteOutline,\r\n  Edit,\r\n  SaveAlt,\r\n  ViewColumn,\r\n  ChevronRight,\r\n  Remove,\r\n} from \"@material-ui/icons\";\r\nimport { getExamInstructions } from \"../../../../../actions/examActions\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: 32,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 12,\r\n  },\r\n});\r\nexport default function Two({ handleNext, handleBack }) {\r\n  const classes = useStyles();\r\n  const publishExam = useSelector((state) => state.publishExam);\r\n  const { instructions } = publishExam;\r\n  const dispatch = useDispatch();\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"Instruction\",\r\n      field: \"instruction\",\r\n      cellStyle: { width: \"100%\" },\r\n      editComponent: (props) => (\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          fullWidth\r\n          type=\"text\"\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    setData(instructions);\r\n    return () => {};\r\n  }, []);\r\n  const editable = {\r\n    onRowAdd: (newData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(\"new\",newData)\r\n          setData([...data, newData.instruction]);\r\n\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n    onRowUpdate: (newData, oldData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(\"new\",newData)\r\n          const dataUpdate = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataUpdate[index] = newData.instruction;\r\n          setData([...dataUpdate]);\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n    onRowDelete: (oldData) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          const dataDelete = [...data];\r\n          const index = oldData.tableData.id;\r\n          dataDelete.splice(index, 1);\r\n          setData([...dataDelete]);\r\n          resolve();\r\n        }, 0);\r\n      }),\r\n  };\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <Add {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n  const tableOptions = {\r\n    filtering: false,\r\n    search: false,\r\n    sorting: false,\r\n    pageSizeOptions: [5, 10],\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        columns={tableColumns}\r\n        data={data.map((val)=>({instruction:val}))}\r\n        icons={tableIcons}\r\n        editable={editable}\r\n        options={tableOptions}\r\n        title=\"Instructions to be displayed to students\"\r\n      />\r\n      <div className={classes.buttonContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secodary\"\r\n          disableElevation\r\n          style={{ marginRight: \"16px\" }}\r\n          onClick={handleBack}\r\n        >\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={()=>{dispatch(getExamInstructions(data));handleNext()}}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Step,\r\n  StepContent,\r\n  StepLabel,\r\n  Grid,\r\n  Stepper,\r\n  Typography,\r\n  Button,\r\n  Backdrop,\r\n  CircularProgress,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport One from \"./One\";\r\nimport Three from \"./Three\";\r\nimport Two from \"./Two\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetPublishExam, createExam } from \"../../../../actions/examActions\";\r\nimport StudentTable from \"../../../../components/tables/StudentTable\";\r\nimport api from \"../../../../api/api\";\r\nimport { getCredentials } from '../../../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 32,\r\n    \"& .MuiTextField-root\": {\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  grid: {\r\n    marginTop: 16,\r\n    marginBottom: 32,\r\n  },\r\n  resetContainer: {\r\n    marginTop: 16,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: theme.palette.primary.light[100],\r\n    backgroundColor: '#fff'\r\n  },\r\n  button: {\r\n    marginLeft: 24\r\n  }\r\n}));\r\n\r\nexport default function AddExam(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const publishExam = useSelector((state) => state.publishExam);\r\n  const students = useSelector((state) => state.selectedStudents);\r\n  const { loading, details, instructions, questions, complete, counts } = publishExam;\r\n  const [data, setData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch(resetPublishExam());\r\n    remoteData();\r\n    return () => { };\r\n  }, []);\r\n\r\n  const remoteData = async () => {\r\n    try {\r\n      const res = await api.post(\r\n        '/admin/getStudents',\r\n        {},\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n\r\n      setData(res.data.response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (complete) props.history.replace(\"/app/exams\")\r\n    return () => { };\r\n  }, [complete]);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handlePublish = () => {\r\n    dispatch(createExam(details, instructions, questions, students.selected, counts,checked?\"yes\":\"no\"))\r\n  };\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {loading && (<Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>)}\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        <Step key={1}>\r\n          <StepLabel>Exam details</StepLabel>\r\n          <StepContent>\r\n            <One handleNext={handleNext} />\r\n          </StepContent>\r\n        </Step>\r\n        <Step>\r\n          <StepLabel>Instructions</StepLabel>\r\n          <StepContent>\r\n            <Two handleBack={handleBack} handleNext={handleNext} />\r\n          </StepContent>\r\n        </Step>\r\n        <Step>\r\n          <StepLabel>Questions</StepLabel>\r\n          <StepContent>\r\n            <Three handleBack={handleBack} handleNext={handleNext} />\r\n          </StepContent>\r\n        </Step>\r\n        <Step>\r\n          <StepLabel>Assign Students</StepLabel>\r\n          <StepContent>\r\n            <StudentTable history={props.history} data={data} remoteData={remoteData} />\r\n            <Grid container direction=\"row\" style={{ marginTop: 24 }}>\r\n              <Button\r\n                style={{ marginLeft: 24 }}\r\n                variant=\"contained\"\r\n                color=\"secodary\"\r\n                disableElevation\r\n                onClick={handleBack}\r\n              >Back</Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                onClick={handleNext}\r\n              >Next</Button>\r\n            </Grid>\r\n          </StepContent>\r\n        </Step>\r\n        {activeStep === 4 && (\r\n          <Paper square elevation={0} className={classes.resetContainer}>\r\n            <Typography style={{ marginBottom: \"8px\" }}>All steps completed</Typography>\r\n            {/* <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={checked}\r\n                    onChange={handleChange}\r\n                    name=\"checked\"\r\n                    color=\"primary\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                }\r\n                label=\"Practise test\"\r\n              />\r\n            </FormGroup> */}\r\n            <Button onClick={handleBack} className={classes.button}>\r\n              previous\r\n            </Button>\r\n            <Button\r\n              onClick={handlePublish}\r\n              className={classes.button}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disabled={!details && !instructions && !questions}\r\n            >\r\n              Publish Exam\r\n            </Button>\r\n          </Paper>\r\n        )}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar }  from \"material-table\";\r\nimport api from \"../../../api/api\";\r\nimport { getCredentials } from \"../../../services/authService\";\r\nimport { getAllExams } from \"../../../actions/examActions\";\r\nimport {\r\n  AddBox,\r\n  ArrowDownward,\r\n  Search,\r\n  Clear,\r\n  FirstPage,\r\n  LastPage,\r\n  ChevronLeft,\r\n  FilterList,\r\n  Check,\r\n  DeleteOutline,\r\n  Edit,\r\n  SaveAlt,\r\n  Delete,\r\n  ViewColumn,\r\n  ChevronRight,\r\n  Remove,\r\n  PhoneDisabled,\r\n  PersonAddDisabled,\r\n} from \"@material-ui/icons\";\r\nimport { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 32,\r\n  },\r\n  toolbar:{\r\n    backgroundColor:theme.palette.primary.main,\r\n    color:\"white\",\r\n  }\r\n}));\r\nconst ExamTable = (props) => {\r\n  const classes = useStyles();\r\n  const allExams = useSelector((state) => state.allExams);\r\n  const {loading,data}=allExams\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllExams());\r\n  }, []);\r\n\r\n  const tableColumns = [\r\n    { title: \"Id\", field: \"id\", align: \"left\" },\r\n    { title: \"Name\", field: \"Title\", align: \"left\" },\r\n    { title: \"Start date\", field: \"StartDate\", align: \"left\" },\r\n    { title: \"End date\", field: \"EndDate\", align: \"left\" },\r\n    { title: \"Status\", field: \"Status\", align: \"left\", lookup: { active: \"active\", inactive: 'inactive' } },\r\n    // { title: \"Practise\", field: \"Practise\", align: \"left\", lookup: { yes: \"yes\", no: 'no' } },\r\n  ];\r\n\r\n  const tableOptions = {\r\n    search: true,\r\n    exportButton: true,\r\n    // selection: true,\r\n    filtering: true,\r\n    // actionsColumnIndex: -1,\r\n    headerStyle: {\r\n      backgroundColor: '#1a73e8',\r\n      color: '#FFF'\r\n    }\r\n  };\r\n\r\n  const disableExam = async (userId, status) => {\r\n    try {\r\n      const res = await api.post(\r\n        \"admin/\",\r\n        {},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      props.getAllUser();\r\n      return true;\r\n    } catch (error) {\r\n      console.log(error, \"DU\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const actionOptions = [\r\n    {\r\n      icon: () => <Edit />,\r\n      tooltip: \"Edit\",\r\n      onClick: (evt, data) => console.log(data),\r\n      isFreeAction: false,\r\n    },\r\n    {\r\n      icon: () => <PersonAddDisabled />,\r\n      tooltip: \"Disable\",\r\n      onClick: (evt, data) => disableExam(data.id, data.Status),\r\n    },\r\n  ];\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n      <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n      <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n      <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n      <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  };\r\n\r\n  const editable = {\r\n    onRowDelete: async (oldData) => {\r\n      try {\r\n        const { id } = oldData;\r\n        const res = await api.post(\r\n          \"admin/\",\r\n          {},\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: ` Bearer ${getCredentials()}`,\r\n            },\r\n          },\r\n          { timeout: 1000 }\r\n        );\r\n        props.getAllUser();\r\n      } catch (error) {\r\n        console.log(error, \"LU\");\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n  };\r\n  const handleRowclick = (id) => {\r\n    props.history.push('/app/exams/details/' + id)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialTable\r\n        options={tableOptions}\r\n        isLoading={loading}\r\n        icons={tableIcons}\r\n\r\n        // editable={editable}\r\n        title=\"Exams\"\r\n        columns={tableColumns}\r\n        data={data}\r\n        onRowClick={(event, rowData) => { console.log(rowData.id, \"r\"); handleRowclick(rowData.id) }}\r\n      // actions={actionOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamTable;\r\n","import React from 'react';\r\nimport ExamTable from '../../../../components/tables/ExamTable';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {},\r\n    btnContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignContent: 'flex-end',\r\n    },\r\n}));\r\nexport default function ExamList(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.btnContainer}>\r\n                <Button\r\n                    className={classes.btn}\r\n                    disableElevation\r\n                    onClick={() => props.history.push('/app/exams/add')}\r\n                    variant='contained'\r\n                    color='primary'\r\n                    size='small'\r\n                >\r\n                    Create\r\n                </Button>\r\n            </div>\r\n            <ExamTable history={props.history}/>\r\n        </div>\r\n    );\r\n}\r\n","import { Breadcrumbs, Container,Link,Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Route, Switch, useLocation, withRouter } from \"react-router-dom\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { resetPublishExam } from \"../../../actions/examActions\";\r\nimport AddExam from './AddExam';\r\nimport ExamDetails from \"./ExamDetails\";\r\nimport ExamList from \"./ExamList\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 24,\r\n    backgroundColor:\"white\",\r\n  },\r\n  link: {\r\n    color: theme.palette.grey[800],\r\n    fontSize:14,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Exams(props) {\r\n  const classes = useStyles();\r\n  const [clickedUserm, setClickedUser] = useState();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(resetPublishExam())\r\n    return () => {\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {ActiveLastBreadcrumb(false,location)}\r\n      <div>\r\n          \r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/app/exams\" component={ExamList} />\r\n        <Route exact path=\"/app/exams/add\" component={AddExam} />\r\n        <Route path=\"/app/exams/details/:id\" component={ExamDetails} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\n\r\nfunction ActiveLastBreadcrumb(exam,location) {\r\n  const classes = useStyles();\r\n  const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n  return (\r\n    <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n       {pathnames.map((value, index) => {\r\n                  const last = index === pathnames.length - 1;\r\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                if(value==='app'||value==='details') return\r\n                  return last ? (\r\n                    <Typography style={{textTransform:\"capitalize\"}} color=\"textPrimary\" key={to}>\r\n                      {value}\r\n                    </Typography>\r\n                  ) : (\r\n                    <LinkRouter style={{textTransform:\"capitalize\"}} color=\"inherit\" to={to} key={to}>\r\n                      {value}\r\n                    </LinkRouter>\r\n                  );\r\n                })}\r\n    </Breadcrumbs>\r\n  )\r\n}\r\n\r\nexport default withRouter(Exams)","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    margin:16,\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    borderRadius:25,\r\n    height:250,\r\n    // [theme.breakpoints.down('sm')]: {\r\n    //   width: '100% !important', // Overrides inline-style\r\n    //   height: 100,\r\n    // },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      }\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    borderRadius:25,\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n    borderRadius:25,\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    borderRadius:25,\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    fontSize:18,\r\n    fontWeight:800,\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\nexport default function HomeFeatureCard({img,link,title,history, bgColor}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n   <div className={classes.root}>\r\n        <ButtonBase\r\n          focusRipple\r\n          key={title}\r\n          className={classes.image}\r\n          onClick={()=>history.push(link)}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: 400,\r\n          }}\r\n        >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${img})`,\r\n            }}\r\n          />\r\n          {/* <span className={classes.imageBackdrop} /> */}\r\n          <span className={classes.imageButton}>\r\n            {/* <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"inherit\"\r\n              className={classes.imageTitle}\r\n            >\r\n              {title}\r\n              <span className={classes.imageMarked} />\r\n            </Typography> */}\r\n          </span>\r\n        </ButtonBase>\r\n   </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/card_bg1.66449080.svg\";","export default __webpack_public_path__ + \"static/media/card_bg2.7aac556c.svg\";","export default __webpack_public_path__ + \"static/media/card_bg3.4885e787.svg\";","export default __webpack_public_path__ + \"static/media/card_bg4.ac8b06a8.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HomeFeatureCard from '../../../components/cards/HomeFeatureCard'\r\nimport {useSelector} from 'react-redux'\r\nimport cardBg1 from \"assets/images/card_bg1.svg\";\r\nimport cardBg2 from \"assets/images/card_bg2.svg\";\r\nimport cardBg3 from \"assets/images/card_bg3.svg\";\r\nimport cardBg4 from \"assets/images/card_bg4.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    display:\"flex\",\r\n    flexWrap:\"wrap\",\r\n    flexDirection:\"row\",\r\n    flexGrow: 1,\r\n    justifyContent:'space-evenly',\r\n    padding:\"24px\",\r\n    alignItems:\"center\",\r\n  }\r\n  });\r\n  \r\nexport default function Features({history}) {\r\n    const classes = useStyles();\r\n    const userRole = useSelector((state) => state.userRole);\r\n    const { roles } = userRole;\r\n  //  try {\r\n    const features = [{\r\n      bgColor: \"#e63946\",\r\n      url: cardBg1,\r\n      title:\"Student Enrolment\",\r\n      link:'/app/students',\r\n      show:roles.ENROLLMENTS? (!!roles.ENROLLMENTS.ALL_STUDENTS):false\r\n    },\r\n    {\r\n      bgColor: \"#a8dadc\",\r\n      url: cardBg2,\r\n      title:\"Adverisement Board\",\r\n      link:'/app/ad',\r\n      show:roles.ENROLLMENTS?(!!roles.ENROLLMENTS.ADVERTISEMENTS):false\r\n    },\r\n    {\r\n      bgColor: \"#457b9d\",\r\n      url: cardBg3,\r\n      title:\"Manage Users\",\r\n      link:'/app/users',\r\n      show:roles.USER_ACCESS?!!roles.USER_ACCESS.ALL_USERS:false\r\n    },\r\n    {\r\n      bgColor: \"#1d3557\",\r\n      url: cardBg4,\r\n      title:\" Exams\",\r\n      link:'/app/exams',\r\n      show:roles.EXAMS_LISTING? !!roles.EXAMS_LISTING.ALL_EXAMS :false\r\n\r\n    },\r\n  ]\r\n  //  } catch (error) {\r\n  //    console.log(error);\r\n  //  }\r\n    return (\r\n        <div className={classes.root}>\r\n        {console.log(features,\"ne\")}\r\n        {\r\n          features.map((item)=>{\r\n            if(item.show)\r\n          return <HomeFeatureCard key={item.title} img={item.url} title={item.title} link={item.link} history={history} bgColor={item.bgColor}/>\r\n\r\n          })\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Home.module.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Features from \"./Features\";\r\nimport api from '../../../api/api';\r\nimport { getCredentials } from '../../../services/authService';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n\r\n  const classes = useStyles();\r\n  const [studentCount, setStudentCount] = useState(0);\r\n  const [examCount, setExamCount] = useState(0);\r\n  const [adCount, setAdCount] = useState(0);\r\n  const {roles} = useSelector((state) => state.userRole);\r\n\r\n  useEffect(() => {\r\n    getCountDetails();\r\n  }, []);\r\n\r\n  const getCountDetails = async () => {\r\n    try {\r\n      const res = await api.post(\r\n        \"/admin/getCountDetails\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          }\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      setStudentCount(res.data.response.enrolledStudCount.Count);\r\n      setExamCount(res.data.response.upcomingExamCount.Count);\r\n      setAdCount(res.data.response.adsCount.Count);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.stats}>\r\n        <p className={styles.welcome}>Welcome,admin!</p>\r\n        <Grid container justify=\"space-around\" spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <Paper className={styles.paper} elevation={0}>\r\n              <p className={styles.paperTitle}>Total Students</p>\r\n              <p className={styles.paperContent}>{studentCount}</p>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item>\r\n            <Paper className={styles.paper} elevation={0}>\r\n              <p className={styles.paperTitle}>Total Exams</p>\r\n              <p className={styles.paperContent}>{examCount}</p>\r\n            </Paper>\r\n          </Grid>\r\n          {roles.ENROLLMENTS&&roles.ENROLLMENTS.ADVERTISEMENTS&&(<Grid item>\r\n            <Paper className={styles.paper} elevation={0} >\r\n              <p className={styles.paperTitle}>Ads Published</p>\r\n              <p className={styles.paperContent}>{adCount}</p>\r\n            </Paper>\r\n          </Grid>)}\r\n        </Grid>\r\n      </div>\r\n      <Features history={props.history} />\r\n    </div>\r\n  );\r\n}\r\n","export const GET_ALL_ADS_REQUEST ='GET_ALL_ADS_REQUEST'\r\nexport const GET_ALL_ADS_SUCCESS ='GET_ALL_ADS_SUCCESS'\r\nexport const GET_ALL_ADS_FAIL ='GET_ALL_ADS_FAIL'","import api from '../api/api';\r\nimport {GET_ALL_ADS_FAIL,GET_ALL_ADS_REQUEST,GET_ALL_ADS_SUCCESS} from '../constants/adConstants';\r\nimport { getCredentials } from '../services/authService';\r\n\r\nconst getAllAds = () => { \r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({type:GET_ALL_ADS_REQUEST})\r\n            const { data } = await api.post(\r\n                '/admin/getAllAds',\r\n                {},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                {timeout:1000}\r\n            );\r\n            dispatch({\r\n                type: GET_ALL_ADS_SUCCESS,\r\n                payload: data.response,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_ALL_ADS_FAIL\r\n            });\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst deleteAd = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await api.post(\r\n                '/admin/deleteAd',\r\n                {id},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                {timeout:1000}\r\n            );\r\n            dispatch(getAllAds());\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport {getAllAds, deleteAd}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    makeStyles,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Slide\r\n} from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport api from \"api/api\";\r\nimport { getCredentials } from \"services/authService\";\r\nimport StudentTable from \"components/tables/StudentTable\";\r\nimport SnackBar from \"components/SnackBar\";\r\nimport { resetSelectedStudents } from 'actions/studentActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    }\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\nconst AssignStudents = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n\r\n    const students = useSelector((state) => state.selectedStudents);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(resetSelectedStudents())\r\n        remoteData();\r\n        return ()=>{\r\n            dispatch(resetSelectedStudents())\r\n        }\r\n    }, []);\r\n    \r\n\r\n    const assignStudents = async (students, id) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/assignStudentsToAd',\r\n                { students, adId:id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setMesssage('Students successfully assigned');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            remoteData();\r\n            dispatch(resetSelectedStudents())\r\n            props.handleClose()\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Student assignment failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const remoteData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/getAdUnassignedStudents',\r\n                { adId: props.id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setData(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleAssign = () => {\r\n        assignStudents(students.selected, props.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\r\n                <DialogTitle id=\"form-dialog-title\">Assign students</DialogTitle>\r\n                <DialogContent>\r\n                    {loading && (\r\n                        <Backdrop className={classes.backdrop} open={loading} >\r\n                            <CircularProgress color=\"primary\" />\r\n                        </Backdrop>\r\n                    )}\r\n                    {open && (\r\n                        <SnackBar open={open} message={message} severity={severity} setOpen={setOpen} />\r\n                    )}\r\n                    \r\n                    <StudentTable minimal={true} history={props.history} data={data} remoteData={remoteData} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleAssign} color=\"primary\" variant=\"contained\">\r\n                        Assign\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignStudents;","import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Search,\r\n    Clear,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    FilterList,\r\n    Check,\r\n    DeleteOutline,\r\n    Edit,\r\n    SaveAlt,\r\n    Delete,\r\n    ViewColumn,\r\n    ChevronRight,\r\n    Remove,\r\n    PhoneDisabled,\r\n    PersonAddDisabled,\r\n    PersonAdd\r\n} from \"@material-ui/icons\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllAds, deleteAd } from '../../../actions/adActions';\r\nimport AssignStudents from './AssignStudents'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 32,\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nconst AdTable = (props) => {\r\n    const classes = useStyles();\r\n    const ads = useSelector((state) => state.ads);\r\n    const { loading, data } = ads;\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = useState(false)\r\n    const [id, setId] = useState()\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getAllAds());\r\n    }, []);\r\n\r\n\r\n    const tableColumns = [\r\n        { title: \"Id\", field: \"id\", align: \"left\" },\r\n        { title: \"Ad Name\", field: \"AdName\", align: \"left\" },\r\n        { title: \"Ad Type\", field: \"AdType\", align: \"left\" },\r\n        { title: \"Ad Zone\", field: \"AdZone\", align: \"left\" },\r\n    ];\r\n\r\n    const editable = {\r\n        onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n                console.log(\"OLD\", oldData);\r\n                dispatch(deleteAd(oldData.id));\r\n                resolve()\r\n            })\r\n    }\r\n\r\n    const tableOptions = {\r\n        search: true,\r\n        filtering: true,\r\n        actionsColumnIndex: -1,\r\n        headerStyle: {\r\n            backgroundColor: '#1a73e8',\r\n            color: '#FFF'\r\n        }\r\n    };\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => (\r\n            <ArrowDownward {...props} ref={ref} />\r\n        )),\r\n        ThirdStateCheck: forwardRef((props, ref) => (\r\n            <Remove {...props} ref={ref} />\r\n        )),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {loading && (\r\n                <Backdrop className={classes.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n             { open &&id&& (<AssignStudents id={id} open={open} handleClose={handleClose} />) }\r\n            <MaterialTable\r\n                editable={editable}\r\n                isLoading={false}\r\n                options={tableOptions}\r\n                icons={tableIcons}\r\n                title=\"Advertisements\"\r\n                columns={tableColumns}\r\n                actions={[\r\n                    {\r\n                        icon: ()=><PersonAdd />,\r\n                        tooltip: 'Assign Students',\r\n                        onClick: (event, rowData) =>{setId(rowData.id);setOpen(true)}\r\n\r\n                    }\r\n                ]}\r\n                data={data}>\r\n            </MaterialTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdTable;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AdTable from '../../../../components/tables/AdTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {},\r\n    btnContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignContent: 'flex-end',\r\n    },\r\n}));\r\n\r\nexport default function AdListing(props) {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.btnContainer}>\r\n                <Button\r\n                    className={classes.btn}\r\n                    disableElevation\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}\r\n                    variant='contained'\r\n                    color='primary'\r\n                    size='small'\r\n                >\r\n                    Upload\r\n                </Button>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={() => {\r\n                        handleClose();\r\n                        props.history.push('/app/ad/photoad');\r\n                    }}>Photo Ad</MenuItem>\r\n                    <MenuItem onClick={() => {\r\n                        handleClose();\r\n                        props.history.push('/app/ad/textad');\r\n                    }}>Text Ad</MenuItem>\r\n                </Menu>\r\n            </div>\r\n            <AdTable />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { TextField, makeStyles } from '@material-ui/core';\r\n\r\nconst AdTextField = ({\r\n    error,\r\n    helperText,\r\n    value,\r\n    onChange, \r\n    name,\r\n    type = 'text',\r\n    label,\r\n}) => {\r\n\r\n    const useStyle = makeStyles({\r\n        textField: {\r\n            minWidth: 300\r\n        },\r\n    });\r\n    const styleClasses = useStyle();\r\n\r\n    return (\r\n        <div>\r\n            <p>{label}</p>\r\n            <TextField\r\n                className={styleClasses.textField}\r\n                name={name}\r\n                size=\"small\"\r\n                variant='outlined'\r\n                autoFocus\r\n                type={type}\r\n                error={error}\r\n                helperText={helperText}\r\n                onChange={onChange}\r\n                value={value}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdTextField;","import React, { useState, useRef } from 'react';\r\n    import { useFormik } from 'formik';\r\n    import * as Yup from 'yup';\r\nimport {\r\n    TextField,\r\n    Button, \r\n    MenuItem,\r\n    InputLabel,\r\n    makeStyles,\r\n    Select,\r\n    Grid, Card, CardContent, Typography\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AdTextField from '../AdTextField';\r\nimport { StyleSharp } from '@material-ui/icons';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\nimport SnackBar from '../SnackBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    heading: {\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    },\r\n    buttonZoneContainer: {\r\n        marginTop: 18\r\n    }\r\n}));\r\n\r\nconst AddTextAdComponent = () => {\r\n\r\n    const styleClasses = useStyles();\r\n    const [adZone, setAdZone] = useState('adZone1');\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState(''); \r\n\r\n    const { selected } = useSelector((state) => state.selectedStudents);\r\n\r\n    const saveAd = async (ad, students) => {\r\n        try {\r\n            setLoading(true);\r\n            ad.adZone = \"adZone5\";\r\n            const res = await api.post(\r\n                \"/admin/createTextAd\",\r\n                { ad: ad, students: students },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            handleReset();\r\n            setLoading(false);\r\n            setMesssage('Ad succesfully created');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            console.log(\"res em\", res);\r\n        } catch (err) {\r\n            setLoading(false);\r\n            setMesssage('Ad creation failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            adName: '',\r\n            companyName: '',\r\n            skills: '',\r\n            designation: '',\r\n            phoneNo: '',\r\n            experience: '',\r\n            email: '',\r\n            domain: '',\r\n            adZone: 'adZone5'\r\n        },\r\n        validationSchema: Yup.object({\r\n            adName: Yup.string().required('This field is required'),\r\n            companyName: Yup.string().required('This field is required'),\r\n            skills: Yup.string().required('This field is required'),\r\n            designation: Yup.string().required('This field is required'),\r\n            phoneNo: Yup.string().required('This field is required'),\r\n            experience: Yup.string().required('This field is required'),\r\n            email: Yup.string().required('This field is required'),\r\n            domain: Yup.string().required('This field is required'),\r\n            adZone: Yup.string().required('This field is required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            const formValue = { ...values, adZone };\r\n            saveAd(formValue, selected);\r\n        }\r\n    });\r\n\r\n    const formRef = useRef(null);\r\n    \r\n    const handleReset = () => {\r\n        formik.resetForm();\r\n        formRef.current.reset();\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styleClasses.container}>\r\n            {loading && (\r\n                <Backdrop className={styleClasses.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen}/>\r\n            )}\r\n            <form ref={formRef} noValidate className={styleClasses.form} onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            justify=\"center\"\r\n                        >\r\n                            <Typography variant=\"h6\" className={styleClasses.heading}>\r\n                                Upload Text Ad\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"flex-end\"\r\n                        >\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                size='small'\r\n                                type='submit'\r\n                            >\r\n                                Upload\r\n                             </Button>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.adName && formik.touched.adName}\r\n                                helperText={\r\n                                    !!formik.errors.adName && formik.touched.adName\r\n                                        ? formik.errors.adName\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.adName}\r\n                                name='adName'\r\n                                label='Ad Name'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.companyName && formik.touched.companyName}\r\n                                helperText={\r\n                                    !!formik.errors.companyName && formik.touched.companyName\r\n                                        ? formik.errors.companyName\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.companyName}\r\n                                name='companyName'\r\n                                label='Company Name'\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.skills && formik.touched.skills}\r\n                                helperText={\r\n                                    !!formik.errors.skills && formik.touched.skills\r\n                                        ? formik.errors.skills\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.skills}\r\n                                name='skills'\r\n                                label='Skills'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.designation && formik.touched.designation}\r\n                                helperText={\r\n                                    !!formik.errors.designation && formik.touched.designation\r\n                                        ? formik.errors.designation\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.designation}\r\n                                name='designation'\r\n                                label='Designation'\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.phoneNo && formik.touched.phoneNo}\r\n                                helperText={\r\n                                    !!formik.errors.phoneNo && formik.touched.phoneNo\r\n                                        ? formik.errors.phoneNo\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.phoneNo}\r\n                                name='phoneNo'\r\n                                label='Phone Number'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.experience && formik.touched.experience}\r\n                                helperText={\r\n                                    !!formik.errors.experience && formik.touched.experience\r\n                                        ? formik.errors.experience\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.experience}\r\n                                name='experience'\r\n                                label='Experience'\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <AdTextField\r\n                                error={!!formik.errors.email && formik.touched.email}\r\n                                helperText={\r\n                                    !!formik.errors.email && formik.touched.email\r\n                                        ? formik.errors.email\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email}\r\n                                name='email'\r\n                                label='Email'\r\n                            />\r\n                            <AdTextField\r\n                                error={!!formik.errors.domain && formik.touched.domain}\r\n                                helperText={\r\n                                    !!formik.errors.domain && formik.touched.domain\r\n                                        ? formik.errors.domain\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.domain}\r\n                                name='domain'\r\n                                label='Domain'\r\n                            />\r\n                        </Grid>\r\n                        {/* <Grid\r\n                            className={styleClasses.buttonZoneContainer}\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <Select\r\n                                labelId='demo-simple-select-label'\r\n                                id='adZone'\r\n                                variant='outlined'\r\n                                size=\"small\"\r\n                                value={adZone}\r\n                                onChange={(event) => setAdZone(event.target.value)}\r\n                            >\r\n                                <MenuItem value='adZone5'>Ad Zone 5</MenuItem>\r\n                            </Select>\r\n\r\n                        </Grid> */}\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTextAdComponent;\r\n","import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Search,\r\n    Clear,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    FilterList,\r\n    Check,\r\n    DeleteOutline,\r\n    Edit,\r\n    SaveAlt,\r\n    Delete,\r\n    ViewColumn,\r\n    ChevronRight,\r\n    Remove,\r\n    PhoneDisabled,\r\n    PersonAddDisabled,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport api from \"../../../api/api\";\r\nimport { getCredentials } from \"../../../services/authService\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSelectedStudents,resetSelectedStudents } from \"../../../actions/studentActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 32,\r\n    },\r\n}));\r\n\r\nconst AdStudentTable = () => {\r\n\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(resetSelectedStudents())\r\n        remoteData();\r\n    },[]);\r\n\r\n    const remoteData =async ()=>{\r\n        // setLoading(true)\r\n          api.post(\r\n                '/admin/getStudents',\r\n                {},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                {timeout:1000}\r\n            ).then((res)=>{\r\n              console.log(\"res\",res.data.response)\r\n              setData(res.data.response)\r\n            //   setLoading(false)\r\n              })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n                // setLoading(false)\r\n            })\r\n           \r\n      \r\n     } \r\n\r\n\r\n    const tableColumns = [\r\n        { title: \"Id\", field: \"id\", align: \"left\" },\r\n        { title: \"Email\", field: \"Email\", align: \"left\" },\r\n        { title: \"Name\", field: \"FullName\", align: \"left\" },\r\n        { title: \"Date of Birth\", field: \"Dob\", align: \"left\" },\r\n        { title: \"Interviews Attended\", field: \"InterviewsAttended\", align: \"left\" },\r\n        { title: \"City\", field: \"City\", align: \"left\" },\r\n    ];\r\n\r\n    const tableOptions = {\r\n        search: true,\r\n        selection: true,\r\n        filtering: true,\r\n        headerStyle: {\r\n            backgroundColor: '#1a73e8',\r\n            color: '#FFF'\r\n          }\r\n    };\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => (\r\n            <ArrowDownward {...props} ref={ref} />\r\n        )),\r\n        ThirdStateCheck: forwardRef((props, ref) => (\r\n            <Remove {...props} ref={ref} />\r\n        )),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n          <MaterialTable\r\n            options={tableOptions}\r\n            icons={tableIcons}\r\n            title=\"Students\"\r\n            columns={tableColumns}\r\n            data={data}\r\n            onSelectionChange={(rows) => dispatch(setSelectedStudents(rows))}\r\n          />\r\n        </div>\r\n      );\r\n\r\n}\r\n\r\nexport default AdStudentTable;","import React from 'react';\r\nimport AddTextAdComponent from '../../../../components/AddTextAdComponent';\r\nimport AdStudentTable from '../../../../components/tables/AdStudentTable';\r\n\r\nexport default function TextAd(props) {\r\n\r\n    return ( \r\n        <div>\r\n            <AddTextAdComponent />\r\n            <AdStudentTable />\r\n        </div>\r\n    );\r\n}   ","export default __webpack_public_path__ + \"static/media/ad_uploadimg.8d22a74e.svg\";","import React, { useState, useRef } from 'react';\r\nimport Axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    MenuItem,\r\n    InputLabel,\r\n    makeStyles,\r\n    Select,\r\n    Grid, Card, CardContent, Typography\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AdTextField from '../AdTextField';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\nimport SnackBar from '../SnackBar';\r\nimport adUploadImg from \"assets/images/ad_uploadimg.svg\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    heading: {\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    },\r\n    buttonZoneContainer: {\r\n        marginTop: 18\r\n    },\r\n    dropdown: {\r\n        marginTop: 24\r\n    },\r\n    img: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        maxHeight: 350\r\n    },\r\n    button: {\r\n        marginLeft: 16\r\n    },\r\n    submitButton: {\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst AddPhotoAdComponent = () => {\r\n\r\n    const styleClasses = useStyles();\r\n    const [adZone, setAdZone] = useState('adZone1');\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n    const [picture, setPicture] = useState(\r\n        adUploadImg\r\n    );\r\n    const [adPic, setAdPic] = useState(null);\r\n\r\n    const { selected } = useSelector((state) => state.selectedStudents);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            adName: '',\r\n            adZone: 'adZone3'\r\n        },\r\n        validationSchema: Yup.object({\r\n            adName: Yup.string().required('This field is required'),\r\n            adZone: Yup.string().required('This field is required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            const formValues = { ...values, adZone };\r\n            console.log(values);\r\n            saveAd(formValues, selected);\r\n        }\r\n    });\r\n\r\n    const formRef = useRef(null);\r\n    const inputFile = useRef(null);\r\n\r\n    const saveAd = async (data, students) => {\r\n        try {\r\n            setLoading(true);\r\n            const formData = new FormData();\r\n            formData.append('adName', data.adName);\r\n            formData.append('adZone', data.adZone);\r\n            formData.append('students', JSON.stringify(students));\r\n            formData.append('adPic', adPic);\r\n\r\n            const config = {\r\n                method: 'POST',\r\n                url: 'https://edu-app-server-beta.herokuapp.com/rest/v1/admin/uploadPhotoAd',\r\n                data: formData,\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Accept: 'application/json',\r\n                },\r\n            };\r\n\r\n            const response = await Axios(config);\r\n            handleReset();\r\n            setLoading(false);\r\n            setMesssage('Ad succesfully created');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Ad creation failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const selectImage = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', (data) => {\r\n            setAdPic(file);\r\n            setPicture(data.target.result);\r\n        });\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        formik.resetForm();\r\n        setPicture(adUploadImg);\r\n        formRef.current.reset();\r\n    };\r\n\r\n    return (\r\n        <div className={styleClasses.container}>\r\n            {loading && (\r\n                <Backdrop className={styleClasses.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen} />\r\n            )}\r\n            <form ref={formRef} noValidate className={styleClasses.form} onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-between\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid\r\n                                direction=\"column\"\r\n                                item\r\n                                xs\r\n\r\n                            >\r\n                                <AdTextField\r\n                                    error={!!formik.errors.adName && formik.touched.adName}\r\n                                    helperText={\r\n                                        !!formik.errors.adName && formik.touched.adName\r\n                                            ? formik.errors.adName\r\n                                            : ''\r\n                                    }\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.adName}\r\n                                    name='adName'\r\n                                    label='Ad Name'\r\n                                />\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    alignItems=\"center\"\r\n                                    className={styleClasses.dropdown}\r\n                                >\r\n                                    <Select\r\n\r\n                                        labelId='demo-simple-select-label'\r\n                                        id='adZone'\r\n                                        variant='outlined'\r\n                                        size=\"small\"\r\n                                        value={adZone}\r\n                                        onChange={(event) => setAdZone(event.target.value)}\r\n                                    >\r\n                                        <MenuItem value='adZone1'>Ad Zone 1</MenuItem>\r\n                                        <MenuItem value='adZone2'>Ad Zone 2</MenuItem>\r\n                                        <MenuItem value='adZone3'>Ad Zone 3</MenuItem>\r\n                                        <MenuItem value='adZone4'>Ad Zone 4</MenuItem>\r\n                                    </Select>\r\n                                    <div>\r\n                                        <Button\r\n                                            className={styleClasses.button}\r\n                                            variant='outlined'\r\n                                            onClick={() => inputFile.current.click()}\r\n                                        >\r\n                                            Upload\r\n                                    </Button>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Button\r\n                                    className={styleClasses.submitButton}\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    type='submit'\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                                <input\r\n                                    type='file'\r\n                                    id='file'\r\n                                    accept='image/*'\r\n                                    ref={inputFile}\r\n                                    onChange={selectImage}\r\n                                    style={{ marginTop: 16, display: 'none' }}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <img\r\n                                    className={styleClasses.img}\r\n                                    src={picture}\r\n                                    onClick={() => inputFile.current.click()}\r\n                                    alt='upload certificate'\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"column\">\r\n                            <Typography>Recommended Dimensions</Typography>\r\n                            <Typography variant=\"subtitle1\" >Please note that to follow the minimum dimensions of the photos to be uploaded should be of below specifed sizes and if is larger it should have the same Width x Height ratio of the below specifed dimesnions.</Typography>\r\n                            <Typography variant=\"subtitle1\" ><em>Ad Zone 1</em>: 1910 X 275</Typography>\r\n                            <Typography variant=\"subtitle1\" ><em>Ad Zone 2</em>: 1910 X 275</Typography>\r\n                            <Typography variant=\"subtitle1\" ><em>Ad Zone 3</em>: lksnlalskndl</Typography>\r\n                            <Typography variant=\"subtitle1\" ><em>Ad Zone 4</em>: lksnlalskndl</Typography>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default AddPhotoAdComponent;","import React from 'react';\r\nimport AddPhotoAdComponent from '../../../../components/AddPhotoAdComponent';\r\nimport AdStudentTable from '../../../../components/tables/AdStudentTable';\r\n\r\nexport default function PhotoAd(props) {\r\n\r\n    return (\r\n        <div>\r\n            <AddPhotoAdComponent />\r\n            <AdStudentTable />\r\n        </div>\r\n    );\r\n} ","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport { NoEncryption } from \"@material-ui/icons\";\r\nimport { Switch, Route, Redirect, withRouter, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Typography, Grid,Link } from \"@material-ui/core\";\r\nimport AdListing from './AdListing/index';\r\nimport TextAd from './TextAd';\r\nimport PhotoAd from \"./PhotoAd\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 24,\r\n        backgroundColor: \"white\",\r\n    },\r\n    link: {\r\n        color: theme.palette.grey[800],\r\n        fontSize:14,\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        \"&:hover, &:focus\": {\r\n          textDecoration: \"none\",\r\n          color: theme.palette.primary,\r\n        },\r\n      },\r\n    heading: {\r\n        fontWeight: 600\r\n    }\r\n}));\r\n\r\nfunction AdManager() {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    return (\r\n        <Container className={classes.root}>\r\n               \r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n            >\r\n                <Typography variant=\"h6\" className={classes.heading}>\r\n                    Advertisement Board\r\n                </Typography>\r\n            </Grid>\r\n            {ActiveLastBreadcrumb(false,location)}\r\n\r\n            <Switch>\r\n                <Route exact path=\"/app/ad\" component={AdListing} />\r\n                <Route exact path=\"/app/ad/textad\" component={TextAd} />\r\n                <Route exact path=\"/app/ad/photoad\" component={PhotoAd}/>\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\nconst mapp ={\r\n    \"ad\":\"Advertisement\",\r\n    \"textad\": \"Text Ad\",\r\n}\r\n\r\nfunction ActiveLastBreadcrumb(exam,location) {\r\n  const classes = useStyles();\r\n  const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n  return (\r\n    <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n       {pathnames.map((value, index) => {\r\n                  const last = index === pathnames.length - 1;\r\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                  if(value==='app') return\r\n                  return last ? (\r\n                    <Typography style={{textTransform:\"capitalize\"}} color=\"textPrimary\" key={to}>\r\n                      {mapp[value]}\r\n                    </Typography>\r\n                  ) : (\r\n                    <LinkRouter style={{textTransform:\"capitalize\"}} color=\"inherit\" to={to} key={to}>\r\n                      {mapp[value]}\r\n                    </LinkRouter>\r\n                  );\r\n                })}\r\n    </Breadcrumbs>\r\n  )\r\n}\r\n\r\nexport default withRouter(AdManager);\r\n","export const GET_ALL_INTERVIEWS_FAIL = 'GET_ALL_INTERVIEWS_FAIL';\r\nexport const GET_ALL_INTERVIEWS_REQUEST = 'GET_ALL_INTERVIEWS_REQUEST';\r\nexport const GET_ALL_INTERVIEWS_SUCCESS = 'GET_ALL_INTERVIEWS_SUCCESS';","import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Search,\r\n    Clear,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    FilterList,\r\n    Check,\r\n    DeleteOutline,\r\n    Edit,\r\n    SaveAlt,\r\n    Delete,\r\n    ViewColumn,\r\n    ChevronRight,\r\n    Remove,\r\n    PhoneDisabled,\r\n    PersonAddDisabled,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllInterviews } from \"actions/interviewActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 32,\r\n    },\r\n}));\r\n\r\nconst InterviewTable = ( {history}) => {\r\n\r\n    const classes = useStyles();\r\n    const interviews = useSelector((state) => state.interviews);\r\n    const { loading, data } = interviews;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllInterviews());\r\n    }, []);\r\n\r\n    const tableColumns = [\r\n        { title: \"Id\", field: \"id\", align: \"left\" },\r\n        { title: \"Interview Name\", field: \"InterviewName\", align: \"left\" },\r\n        { title: \"Interview By\", field: \"InterviewBy\", align: \"left\" },\r\n        { title: \"Date\", field: \"Date\", align: \"left\" },\r\n        { title: \"Total Candidates\", field: \"TotalCandidates\", align: \"left\" },\r\n        { title: \"Status\", field: \"Status\", align: \"left\" },\r\n    ];\r\n\r\n    const tableOptions = {\r\n        search: true,\r\n        filtering: true,\r\n        headerStyle: {\r\n            backgroundColor: '#1a73e8',\r\n            color: '#FFF'\r\n          }\r\n    };\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => (\r\n            <ArrowDownward {...props} ref={ref} />\r\n        )),\r\n        ThirdStateCheck: forwardRef((props, ref) => (\r\n            <Remove {...props} ref={ref} />\r\n        )),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    };\r\n\r\n    const handleRowclick = (id) => {\r\n        history.push('/app/interviews/detail/'+id);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MaterialTable\r\n                // editable={editable}\r\n                isLoading={loading}\r\n                options={tableOptions}\r\n                icons={tableIcons}\r\n                title=\"Interviews\"\r\n                columns={tableColumns}\r\n                data={data}\r\n                onRowClick={(event, rowData) => {\r\n                    handleRowclick(rowData.id);\r\n                }}\r\n                >\r\n            </MaterialTable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InterviewTable;","import api from '../api/api';\r\nimport {GET_ALL_INTERVIEWS_FAIL,GET_ALL_INTERVIEWS_REQUEST,GET_ALL_INTERVIEWS_SUCCESS} from '../constants/interviewConstants';\r\nimport { getCredentials } from '../services/authService';\r\n\r\nconst getAllInterviews = () => { \r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({type:GET_ALL_INTERVIEWS_REQUEST})\r\n            const { data } = await api.post(\r\n                '/admin/getInterviews',\r\n                {},\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                {timeout:1000}\r\n            );\r\n            dispatch({\r\n                type: GET_ALL_INTERVIEWS_SUCCESS,\r\n                payload: data.response,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GET_ALL_INTERVIEWS_FAIL\r\n            });\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport {getAllInterviews};","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InterviewTable from '../../../../components/tables/InterviewTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {},\r\n    btnContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n    },\r\n}));\r\n\r\nexport default function InterviewListing(props) {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.btnContainer}>\r\n                <Button\r\n                    className={classes.btn}\r\n                    disableElevation\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleClick}\r\n                    variant='outlined'\r\n                    color='primary'\r\n                    size='small'\r\n                >\r\n                    Actions\r\n                </Button>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={() => {\r\n                        handleClose();\r\n                        props.history.push('/app/interviews/add');\r\n                    }}>Create Interview</MenuItem>\r\n                </Menu>\r\n            </div>\r\n            <InterviewTable history={props.history} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { TextField, makeStyles } from '@material-ui/core';\r\n\r\nconst CustomTextField = ({\r\n    error,\r\n    helperText,\r\n    value,\r\n    onChange,\r\n    name,\r\n    type = 'text',\r\n    label,\r\n    InputLabelProps\r\n}) => {\r\n\r\n    const useStyle = makeStyles({\r\n        textField: {\r\n            minWidth: 300\r\n        },\r\n        container: {\r\n            marginBottom: 24\r\n        }\r\n    });\r\n    const styleClasses = useStyle();\r\n\r\n    return (\r\n        <div className={styleClasses.container}>\r\n            <TextField\r\n                label={label}\r\n                className={styleClasses.textField}\r\n                name={name}\r\n                size=\"small\"\r\n                variant='outlined'\r\n                autoFocus\r\n                type={type}\r\n                error={error}\r\n                helperText={helperText}\r\n                onChange={onChange}\r\n                value={value}\r\n                InputLabelProps={InputLabelProps}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport { TextField, makeStyles } from '@material-ui/core';\r\n\r\nconst CustomTextField = ({\r\n    error,\r\n    helperText,\r\n    value,\r\n    onChange,\r\n    name,\r\n    type = 'text',\r\n    label,\r\n    InputProps\r\n}) => {\r\n\r\n    const useStyle = makeStyles({\r\n        textField: {\r\n            minWidth: 200\r\n        },\r\n        container: {\r\n            marginBottom: 24\r\n        }\r\n    });\r\n    const styleClasses = useStyle();\r\n\r\n    return (\r\n        <div className={styleClasses.container}>\r\n            <TextField\r\n                className={styleClasses.textField}\r\n                label=\"Date\"\r\n                size=\"small\"\r\n                type={type}\r\n                variant='outlined'\r\n                name={name}\r\n                error={error}\r\n                helperText={helperText}\r\n                InputLabelProps={{ shrink: true }}\r\n                value={value}\r\n                onChange={onChange}\r\n                InputProps={InputProps}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomTextField;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    MenuItem,\r\n    InputLabel,\r\n    makeStyles,\r\n    Select,\r\n    Grid, Card, CardContent, Typography\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CustomTextField from '../CustomTextField';\r\nimport CustomDateField from '../CustomDateField';\r\nimport { StyleSharp } from '@material-ui/icons';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\nimport SnackBar from '../SnackBar';\r\nimport { resetSelectedStudents} from 'actions/studentActions'\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    heading: {\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    },\r\n    dropDown: {\r\n        height: 35,\r\n        width: 200\r\n    },\r\n\r\n}));\r\n\r\nconst AddInterviewComponent = (props) => {\r\n    const styleClasses = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [adminUsers, setAdminUsers] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n    const [assignTo, setAssignTo] = useState('assignTo');\r\n    const dispatch = useDispatch()\r\n\r\n    const { selected } = useSelector((state) => state.selectedStudents);\r\n    const { roles } = useSelector((state) => state.userRole);\r\n\r\n    useEffect(() => {\r\n        dispatch(resetSelectedStudents())\r\n        return () => {\r\n        }\r\n    }, [])\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            interviewName: '',\r\n            interviewBy: '',\r\n            date: '',\r\n            assignTo: 'assignTo'\r\n        },\r\n        validationSchema: Yup.object({\r\n            interviewName: Yup.string().required('This field is required'),\r\n            interviewBy: Yup.string().required('This field is required'),\r\n            date: Yup.date().required('This field is required'),\r\n        }),\r\n        onSubmit: (values) => {\r\n            const formValues = {\r\n                ...values, assignTo\r\n            };\r\n            saveInterview(formValues, selected);\r\n        }\r\n    });\r\n\r\n    const formRef = useRef(null);\r\n\r\n    const handleReset = () => {\r\n        formik.resetForm();\r\n        formRef.current.reset();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAdminUsers();\r\n    },[]);\r\n\r\n    const saveInterview = async (interview, students) => {\r\n        try {\r\n            setLoading(true);\r\n            await api.post(\r\n                \"/admin/saveInterview\",\r\n                {interview, students},\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            handleReset();\r\n            setLoading(false);\r\n            setMesssage('Interview succesfully created');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            setTimeout(()=>{props.history.goBack()},1000);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Interview creation failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getAdminUsers = async () => {\r\n        try {\r\n            const res = await api.post(\r\n                \"/admin/getAdminUsers\",\r\n                null,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setAdminUsers(res.data.response);\r\n        } catch (error) {   \r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styleClasses.container}>\r\n            {loading && (\r\n                <Backdrop className={styleClasses.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen} />\r\n            )}\r\n\r\n            <form ref={formRef} noValidate className={styleClasses.form} onSubmit={formik.handleSubmit}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            justify=\"center\"\r\n                        >\r\n                            <Typography variant=\"h6\" className={styleClasses.heading}>\r\n                                Create Interview\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"flex-end\"\r\n                        >\r\n                            <Button\r\n                                variant='contained'\r\n                                color='primary'\r\n                                size='small'\r\n                                type='submit'\r\n                            >\r\n                                Upload\r\n                             </Button>\r\n                        </Grid>\r\n                        <Grid \r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <CustomTextField\r\n                                error={!!formik.errors.interviewName && formik.touched.interviewName}\r\n                                helperText={\r\n                                    !!formik.errors.interviewName && formik.touched.interviewName\r\n                                        ? formik.errors.interviewName\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interviewName}\r\n                                name='interviewName'\r\n                                label='Interview Name'\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                            <CustomDateField\r\n                                label='Date of Interview'\r\n                                type='date'\r\n                                name='date'\r\n                                InputProps={{inputProps: { min:moment().format('YYYY-MM-DD')} }}\r\n                                error={!!formik.errors.date && formik.touched.date}\r\n                                helperText={\r\n                                    !!formik.errors.date && formik.touched.date\r\n                                        ? formik.errors.date\r\n                                        : ''\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                value={formik.values.date}\r\n                                onChange={(event) => {\r\n                                    formik.setFieldValue('date', event.target.value);\r\n                                }}\r\n                            />\r\n\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <CustomTextField\r\n                                error={!!formik.errors.interviewBy && formik.touched.interviewBy}\r\n                                helperText={\r\n                                    !!formik.errors.interviewBy && formik.touched.interviewBy\r\n                                        ? formik.errors.interviewBy\r\n                                        : ''\r\n                                }\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interviewBy}\r\n                                name='interviewBy'\r\n                                label='Interview By'\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n\r\n                            <Select\r\n                                className={styleClasses.dropDown}\r\n                                labelId='demo-simple-select-label'\r\n                                id='assignTo'\r\n                                variant='outlined'\r\n                                size=\"small\"\r\n                                value={assignTo}\r\n                                disabled={roles.ROLE!=='SUPER_USER'}\r\n                                onChange={(event) => setAssignTo(event.target.value)}\r\n                            >\r\n                                <MenuItem value='assignTo'>Assign To</MenuItem>\r\n                                {\r\n                                    adminUsers.map((user) => {\r\n                                        return (<MenuItem value={user.id}>{user.Username}</MenuItem>)\r\n                                    })\r\n                                }\r\n                            </Select>\r\n\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddInterviewComponent;","import React, { useEffect, useState } from 'react';\r\nimport AddInterviewComponent from '../../../../components/AddInterviewComponent';\r\nimport StudentTable from '../../../../components/tables/StudentTable';\r\nimport {getCredentials} from '../../../../services/authService';\r\nimport api from '../../../../api/api';\r\n\r\nexport default function AddInterview(props) {\r\n    const [data, setData] = useState([])\r\n\r\n    const remoteData = async () => {\r\n        api.post(\r\n            '/admin/getStudents',\r\n            {},\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                },\r\n            },\r\n            { timeout: 1000 }\r\n        ).then((res) => {\r\n            console.log(\"res\", res)\r\n            setData(res.data.response)\r\n        })\r\n            .catch((err) => { console.log(err); })\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        remoteData();\r\n    }, []);\r\n\r\n\r\n    return ( \r\n        <div>\r\n            <AddInterviewComponent history={props.history}/>\r\n            <StudentTable history={props.history} data={data} remoteData={remoteData} />\r\n        </div>\r\n    );\r\n}  ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    makeStyles,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Slide\r\n} from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport api from \"api/api\";\r\nimport { getCredentials } from \"services/authService\";\r\nimport StudentTable from \"components/tables/StudentTable\";\r\nimport SnackBar from \"components/SnackBar\";\r\nimport { resetSelectedStudents } from 'actions/studentActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    }\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\nconst AssignStudents = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMesssage] = useState('');\r\n    const [severity, setSeverity] = useState('');\r\n\r\n    const students = useSelector((state) => state.selectedStudents);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(resetSelectedStudents())\r\n        remoteData();\r\n        return ()=>{\r\n            dispatch(resetSelectedStudents())\r\n        }\r\n    }, []);\r\n    \r\n\r\n    const assignStudents = async (students, id) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/assignStudentsToInterview',\r\n                { students, interviewId:id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setMesssage('Students successfully assigned');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            remoteData();\r\n            dispatch(resetSelectedStudents())\r\n            props.handleClose()\r\n\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Student assignment failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const remoteData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                '/admin/getInterviewUnassignedStudents',\r\n                { interviewId: props.id },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setData(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleAssign = () => {\r\n        assignStudents(students.selected, props.id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\r\n                <DialogTitle id=\"form-dialog-title\">Assign students</DialogTitle>\r\n                <DialogContent>\r\n                    {loading && (\r\n                        <Backdrop className={classes.backdrop} open={loading} >\r\n                            <CircularProgress color=\"primary\" />\r\n                        </Backdrop>\r\n                    )}\r\n                    {open && (\r\n                        <SnackBar open={open} message={message} severity={severity} setOpen={setOpen} />\r\n                    )}\r\n                    \r\n                    <StudentTable minimal={true} history={props.history} data={data} remoteData={remoteData} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleAssign} color=\"primary\" variant=\"contained\">\r\n                        Assign\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignStudents;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, makeStyles, Grid, Button } from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AssignStudents from './AssignStudents';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        marginTop: 24\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n        color: \"#4169E1\"\r\n    },\r\n    value: {\r\n        fontSize: 14,\r\n        color: \"#FFA500\"\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default function InterviewDetailComponent({ interviewId }) {\r\n\r\n    const classes = useStyles();\r\n    const [interview, setInterview] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false)\r\n    useEffect(() => {\r\n        getInterviewDetail(interviewId);\r\n    }, []);\r\n\r\n    const handleStatusClick = async (interviewId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/toggleInterviewStatus\",\r\n                { interviewId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n            getInterviewDetail(interviewId);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const getInterviewDetail = async (interviewId) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/getInterviewDetails\",\r\n                { interviewId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n\r\n            );\r\n\r\n            setInterview(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    if (loading) {\r\n        return (\r\n            <Backdrop className={classes.backdrop} open={loading} >\r\n                <CircularProgress color=\"primary\" />\r\n            </Backdrop>\r\n        )\r\n    }\r\n    const handleClose=()=>{\r\n        setOpen(false)\r\n    }\r\n    return (\r\n        <div className={classes.container}>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"flex-end\"\r\n                    >\r\n                        {interview.Status==='pending'&&(<Button variant=\"contained\" color=\"primary\" style={{marginLeft:8,marginRight:8}} onClick={()=>setOpen(true)}>Assign students</Button>)}\r\n                        {open&&(<AssignStudents id={interviewId} open={open} handleClose={handleClose}/>)}\r\n                        {\r\n                            (interview.Status === 'pending') ?\r\n                                <Button\r\n                                    variant='outlined'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    onClick={() => { handleStatusClick(interview.id) }}\r\n                                > Mark as completed</Button>\r\n                                :\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    onClick={() => { handleStatusClick(interview.id) }}\r\n                                > Completed</Button>\r\n                        }\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-around\"\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            direction=\"column\"\r\n                        >\r\n                            <p className={classes.heading}>ID  : <span className={classes.value}>{interview.id}</span></p>\r\n                            <p className={classes.heading}>Interview Name  : <span className={classes.value}>{interview.InterviewName}</span></p>\r\n                            <p className={classes.heading}>Interview By  : <span className={classes.value}>{interview.InterviewBy}</span></p>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            direction=\"column\"\r\n                        >\r\n                            <p className={classes.heading}>Date  : <span className={classes.value}>{interview.Date}</span></p>\r\n                            <p className={classes.heading}>Total Candidates  : <span className={classes.value}>{interview.TotalCandidates}</span></p>\r\n                            <p className={classes.heading}>Status  : <span className={classes.value}>{interview.Status}</span></p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport {\r\n    AddBox,\r\n    ArrowDownward,\r\n    Search,\r\n    Clear,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    FilterList,\r\n    Check,\r\n    DeleteOutline,\r\n    Edit,\r\n    SaveAlt,\r\n    Delete,\r\n    ViewColumn,\r\n    ChevronRight,\r\n    Remove,\r\n    PhoneDisabled,\r\n    PersonAddDisabled,\r\n    Refresh\r\n} from \"@material-ui/icons\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { icon } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 32,\r\n    },\r\n}));\r\nconst InterviewStudentTable = ({ history, data, remoteData, interviewId }) => {\r\n    const tableRef = React.createRef();\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const tableColumns = [\r\n        // {\r\n        //     title: 'Avatar', field: 'avatar', filtering: false, sorting: false,\r\n        //     render: rowData => (\r\n        //         <img style={{ height: 36, borderRadius: '50%' }} src={rowData.ProfilePic} />\r\n        //     ),\r\n        // },\r\n        { title: \"Id\", field: \"id\", align: \"left\" },\r\n        { title: \"Name\", field: \"FullName\", align: \"left\" },\r\n        { title: \"Email\", field: \"Email\", align: \"left\" },\r\n        { title: \"10th Marks\", field: \"Cgpa10\", align: \"left\" },\r\n        { title: \"10th Mark Type\", field: \"MarkType10\", align: \"left\" },\r\n        { title: \"12th Marks\", field: \"Cgpa12\", align: \"left\" },\r\n        { title: \"12th Mark Type\", field: \"MarkType12\", align: \"left\" },\r\n        { title: \"Degree 1 Marks\", field: \"degree1\", align: \"left\" },\r\n        { title: \"Degree 1 Mark Type\", field: \"degree1MarkType\", align: \"left\" },\r\n        {\r\n            title: \"Status\", field: \"Status\", align: \"left\",\r\n            render: rowData => (\r\n                <Chip label={rowData.Status} color=\"primary\"/>\r\n            )\r\n        }\r\n    ];\r\n\r\n    const tableOptions = {\r\n        search: true,\r\n        filtering: true,\r\n        headerStyle: {\r\n            backgroundColor: '#1a73e8',\r\n            color: '#FFF'\r\n          }\r\n    };\r\n\r\n    const actionsOptions = [\r\n        {\r\n            icon: () => <Refresh />,\r\n            tooltip: 'Refresh Data',\r\n            isFreeAction: true,\r\n            exportButton: true,\r\n            // onClick: () => tableRef.current && tableRef.current.onQueryChange,\r\n            onClick: () => remoteData(null)\r\n        }\r\n    ]\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => (\r\n            <ArrowDownward {...props} ref={ref} />\r\n        )),\r\n        ThirdStateCheck: forwardRef((props, ref) => (\r\n            <Remove {...props} ref={ref} />\r\n        )),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    };\r\n\r\n\r\n    const handleRowclick = (id, status) => {\r\n        if(status === 'pending'){\r\n            history.push('/app/interviews/edit/'+id+'/'+interviewId);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MaterialTable\r\n                options={tableOptions}\r\n                icons={tableIcons}\r\n                title=\"Students\"\r\n                columns={tableColumns}\r\n                data={data}\r\n                // isLoading={data.length === 0}\r\n                actions={actionsOptions}\r\n                onRowClick={(event, rowData) => { console.log(rowData.id, \"r\"); handleRowclick(rowData.id, rowData.Status) }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InterviewStudentTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, makeStyles, Grid, Select, MenuItem, TextField, Button } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        marginTop: 24\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    heading: {\r\n        color: '#4169E1',\r\n        fontWeight: \"bold\",\r\n    },\r\n    dropDown: {\r\n        height: 24,\r\n    },\r\n    form: {\r\n        width: '100%'\r\n    },\r\n    textField: {\r\n        marginLeft: 24\r\n    },\r\n    formGroup: {\r\n        marginLeft: 24\r\n    },\r\n    gridItem: {\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\nfunction InterviewStudentSelection(props) {\r\n\r\n    const classes = useStyles();\r\n    const [status, setStatus] = useState('pending');\r\n    const [rejectState, setRejectState] = useState({\r\n        aptitude: false,\r\n        language: false,\r\n        logical: false,\r\n        coding: false,\r\n        others: false\r\n    });\r\n\r\n    const [selectState, setSelectState] = useState({\r\n        aptitude: false,\r\n        language: false,\r\n        logical: false,\r\n        coding: false,\r\n        others: false\r\n    });\r\n\r\n    const [studentData, setStudentData] = useState({});\r\n\r\n    const [interviewId, setInterviewId] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setInterviewId(props.match.params.intId);\r\n        getInterviewStudentData(props.match.params.id, props.match.params.intId);\r\n    }, []);\r\n\r\n    const getInterviewStudentData = async (studentId, interview) => {\r\n        try {\r\n            const res = await api.post(\r\n                \"/admin/getInterviewStudentDetail\",\r\n                { studentId, interview }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n            setStudentData(res.data.response);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const submitInterview = async (interviewId, studentId, studentName, selectionStatus, timesAttended = '', postponedDate = '', reason = '', salary = '', improvements = '', joiningDate = '') => {\r\n        const apiData = {\r\n            interviewId,\r\n            studentId,\r\n            studentName,\r\n            selectionStatus,\r\n            timesAttended,\r\n            postponedDate,\r\n            reason,\r\n            salary,\r\n            improvements,\r\n            joiningDate\r\n        };\r\n        console.log(\"APID ATTA \", apiData);\r\n        try {\r\n            const res = await api.post(\r\n                \"/admin/addInterviewResult\",\r\n                { apiData }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n            setLoading(false);\r\n            props.history.replace('/app/interviews/detail/'+interviewId);\r\n            console.log(\"RESONSESSS \", res.data);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const submitInterviewStudentData = async (values, selectState, rejectState, status) => {\r\n        setLoading(true);\r\n        const studentId = studentData.id;\r\n        if (status === 'selected') {\r\n            var reason = '';\r\n            for (const property in selectState) {\r\n                if (selectState[property]) {\r\n                    if (property === 'others') {\r\n                        reason += values.selectReason;\r\n                    } else {\r\n                        reason += String(property) + \", \";\r\n                    }\r\n                }\r\n            }\r\n            submitInterview(interviewId, studentData.id, studentData.Name, status, studentData.Count, values.postponedDate, reason, values.salary, values.improvements, values.joiningDate);\r\n        } else if (status === 'rejected') {\r\n            var reason = '';\r\n            for (const property in rejectState) {\r\n                if (rejectState[property]) {\r\n                    if (property === 'others') {\r\n                        reason += values.rejectReason;\r\n                    } else {\r\n                        reason += String(property) + \", \";\r\n                    }\r\n                }\r\n            }\r\n            submitInterview(interviewId, studentData.id, studentData.Name, status, studentData.Count, values.postponedDate, reason, values.salary, values.improvements, values.joiningDate);\r\n        } else if (status === 'postponed') {\r\n            submitInterview(interviewId, studentData.id, studentData.Name, status, studentData.Count, values.postponedDate, reason, values.salary, values.improvements, values.joiningDate);\r\n        }\r\n    }\r\n\r\n    const handleRejectionChange = (event) => {\r\n        setRejectState({ ...rejectState, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleSelectionChange = (event) => {\r\n        setSelectState({ ...selectState, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            selectReason: '',\r\n            salary: '',\r\n            joiningDate: '',\r\n            postponedDate: '',\r\n            rejectReason: '',\r\n            improvements: ''\r\n        },\r\n        onSubmit: (values) => {\r\n            submitInterviewStudentData(values, selectState, rejectState, status);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {loading && (\r\n                <Backdrop className={classes.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            <form onSubmit={formik.handleSubmit} noValidate className={classes.form}>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                        >\r\n                            <Grid\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"space-between\"\r\n                            >\r\n                                <Grid\r\n                                    className={classes.gridItem}\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justify=\"space-between\"\r\n                                    alignContent=\"flex-start\"\r\n                                >\r\n                                    <p className={classes.heading}>Candidate ID :</p>\r\n                                    <p className={classes.subHeading}>{studentData.id}</p>\r\n                                </Grid>\r\n\r\n                                <Grid\r\n                                    className={classes.gridItem}\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justify=\"space-between\"\r\n                                    alignContent=\"flex-start\"\r\n                                >\r\n                                    <p className={classes.heading}>Times Attended :</p>\r\n                                    <p className={classes.subHeading}>{studentData.Count}</p>\r\n                                </Grid>\r\n\r\n                                {\r\n                                    status === 'selected' &&\r\n                                    <>\r\n                                        <Grid\r\n                                            className={classes.gridItem}\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justify=\"space-between\"\r\n                                            alignContent=\"flex-start\"\r\n                                        >\r\n                                            <p className={classes.heading}>Reason for Selection :</p>\r\n                                            <FormGroup column className={classes.formGroup}>\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={selectState.aptitude} onChange={handleSelectionChange} name=\"aptitude\" />}\r\n                                                    label=\"Aptitude\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={selectState.language} onChange={handleSelectionChange} name=\"language\" />}\r\n                                                    label=\"Language\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={selectState.logical} onChange={handleSelectionChange} name=\"logical\" />}\r\n                                                    label=\"Logical Reasoning\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={selectState.coding} onChange={handleSelectionChange} name=\"coding\" />}\r\n                                                    label=\"Coding\"\r\n                                                />\r\n                                                <FormControlLabel\r\n                                                    control={<Checkbox checked={selectState.others} onChange={handleSelectionChange} name=\"others\" />}\r\n                                                    label=\"Others\"\r\n                                                />\r\n                                                {\r\n                                                    selectState.others &&\r\n                                                    <TextField\r\n                                                        id=\"outlined-multiline-static\"\r\n                                                        multiline\r\n                                                        rows={4}\r\n                                                        placeholder=\"Specify the reasons\"\r\n                                                        variant=\"outlined\"\r\n                                                        name=\"selectReason\"\r\n                                                        value={formik.values.selectReason}\r\n                                                        onChange={(event) => {\r\n                                                            formik.setFieldValue('selectReason', event.target.value);\r\n                                                        }}\r\n                                                    />\r\n                                                }\r\n                                            </FormGroup>\r\n                                        </Grid>\r\n\r\n                                        <Grid\r\n                                            className={classes.gridItem}\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justify=\"space-between\"\r\n                                            alignContent=\"flex-start\"\r\n                                        >\r\n                                            <p className={classes.heading}>Salary Package :</p>\r\n                                            <TextField\r\n                                                name=\"salary\"\r\n                                                size=\"small\"\r\n                                                variant='outlined'\r\n                                                type=\"text\"\r\n                                                value={formik.values.salary}\r\n                                                onChange={(event) => {\r\n                                                    formik.setFieldValue('salary', event.target.value);\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid\r\n                                            className={classes.gridItem}\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            justify=\"space-between\"\r\n                                            alignContent=\"flex-start\"\r\n                                        >\r\n                                            <p className={classes.heading}>Joining Date</p>\r\n                                            <TextField\r\n                                                className={classes.textField}\r\n                                                size=\"small\"\r\n                                                type=\"date\"\r\n                                                variant='outlined'\r\n                                                name=\"joiningDate\"\r\n                                                InputLabelProps={{ shrink: true }}\r\n                                                value={formik.values.joiningDate}\r\n                                                onChange={(event) => {\r\n                                                    formik.setFieldValue('joiningDate', event.target.value);\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </>\r\n                                }\r\n\r\n\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                                item\r\n                                direction=\"column\"\r\n                                justify=\"space-between\"\r\n                            >\r\n\r\n                                <Grid\r\n                                    className={classes.gridItem}\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justify=\"space-between\"\r\n                                    alignContent=\"flex-start\"\r\n                                >\r\n                                    <p className={classes.heading}>Candidate Name :</p>\r\n                                    <p className={classes.subHeading}>{studentData.Name}</p>\r\n                                </Grid>\r\n\r\n                                <Grid\r\n                                    className={classes.gridItem}\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justify=\"space-between\"\r\n                                    alignContent=\"flex-start\"\r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <p className={classes.heading}>Status :</p>\r\n                                    <Select\r\n                                        className={classes.dropDown}\r\n                                        labelId='demo-simple-select-label'\r\n                                        id='status'\r\n                                        variant='outlined'\r\n                                        size=\"small\"\r\n                                        value={status}\r\n                                        onChange={(event) => setStatus(event.target.value)}\r\n                                    >\r\n                                        <MenuItem value='pending'>Pending</MenuItem>\r\n                                        <MenuItem value='selected'>Selected</MenuItem>\r\n                                        <MenuItem value='rejected'>Rejected</MenuItem>\r\n                                        <MenuItem value='postponed'>Postponed</MenuItem>\r\n                                    </Select>\r\n                                </Grid>\r\n                                {\r\n                                    status === 'postponed' &&\r\n                                    <Grid\r\n                                        className={classes.gridItem}\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"space-between\"\r\n                                        alignContent=\"flex-start\"\r\n                                    >\r\n                                        <p className={classes.heading}>Postponed Date :</p>\r\n                                        <TextField\r\n                                            className={classes.textField}\r\n                                            size=\"small\"\r\n                                            type=\"date\"\r\n                                            variant='outlined'\r\n                                            name=\"postponedDate\"\r\n                                            InputLabelProps={{ shrink: true }}\r\n                                            value={formik.values.postponedDate}\r\n                                            onChange={(event) => {\r\n                                                formik.setFieldValue('postponedDate', event.target.value);\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                }\r\n\r\n                                {\r\n                                    status === 'rejected' &&\r\n                                    <Grid\r\n                                        className={classes.gridItem}\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"space-between\"\r\n                                        alignContent=\"flex-start\"\r\n                                    >\r\n                                        <p className={classes.heading}>Reason for Rejection :</p>\r\n                                        <FormGroup column className={classes.formGroup}>\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox checked={rejectState.aptitude} onChange={handleRejectionChange} name=\"aptitude\" />}\r\n                                                label=\"Aptitude\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox checked={rejectState.language} onChange={handleRejectionChange} name=\"language\" />}\r\n                                                label=\"Language\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox checked={rejectState.logical} onChange={handleRejectionChange} name=\"logical\" />}\r\n                                                label=\"Logical Reasoning\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox checked={rejectState.coding} onChange={handleRejectionChange} name=\"coding\" />}\r\n                                                label=\"Coding\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                control={<Checkbox checked={rejectState.others} onChange={handleRejectionChange} name=\"others\" />}\r\n                                                label=\"Others\"\r\n                                            />\r\n                                            {\r\n                                                rejectState.others &&\r\n                                                <TextField\r\n                                                    id=\"outlined-multiline-static\"\r\n                                                    multiline\r\n                                                    rows={4}\r\n                                                    placeholder=\"Specify the reasons\"\r\n                                                    variant=\"outlined\"\r\n                                                    name=\"rejectReason\"\r\n                                                    value={formik.values.rejectReason}\r\n                                                    onChange={(event) => {\r\n                                                        formik.setFieldValue('rejectReason', event.target.value);\r\n                                                    }}\r\n                                                />\r\n                                            }\r\n\r\n                                        </FormGroup>\r\n                                    </Grid>\r\n                                }\r\n\r\n\r\n                                <Grid\r\n                                    className={classes.gridItem}\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justify=\"space-between\"\r\n                                    alignContent=\"flex-start\"\r\n                                >\r\n                                    <p className={classes.heading}>Sectors to Improve :</p>\r\n                                    <TextField\r\n                                        className={classes.textField}\r\n                                        id=\"outlined-multiline-static\"\r\n                                        multiline\r\n                                        rows={4}\r\n                                        placeholder=\"Comment if any...\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"improvements\"\r\n                                        value={formik.values.improvements}\r\n                                        onChange={(event) => {\r\n                                            formik.setFieldValue('improvements', event.target.value);\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"flex-end\"\r\n                        >\r\n                            <Button\r\n                                variant='outlined'\r\n                                color='primary'\r\n                                size='small'\r\n                                type='submit'\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InterviewStudentSelection;","import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect, withRouter, useLocation } from \"react-router-dom\";\r\nimport {\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getCredentials } from '../../../../services/authService';\r\nimport api from '../../../../api/api';\r\nimport InterviewDetailComponent from '../../../../components/InterviewDetailComponent';\r\nimport InterviewStudentTable from '../../../../components/tables/InterviewStudentTable';\r\nimport InterviewStudentSelection from '../../../../components/InterviewStudentSelection';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction InterviewDetail(props) {\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false);\r\n  const [interviewId, setInterviewId] = useState(null);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    remoteData(props.match.params.id);\r\n    setInterviewId(props.match.params.id);\r\n  }, []);\r\n\r\n  const remoteData = async (interviewId) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post(\"/admin/getInterviewStudents\", { interviewId }, {\r\n        headers: {\r\n          Authorization: `Bearer ${getCredentials()}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n        { timeout: 1000 }\r\n      );\r\n      setData(response.data.response);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  if (loading) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n      {loading && (\r\n        <Backdrop className={classes.backdrop} open={loading} >\r\n          <CircularProgress color=\"primary\" />\r\n        </Backdrop>\r\n      )}\r\n      <InterviewDetailComponent interviewId={props.match.params.id} />\r\n      <InterviewStudentTable history={props.history} data={data} remoteData={remoteData} interviewId={props.match.params.id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterviewDetail;","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { NoEncryption } from \"@material-ui/icons\";\r\nimport { Switch, Route, Redirect, withRouter, useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Typography, Grid,Link } from \"@material-ui/core\";\r\nimport InterviewListing from './InterviewListing';\r\nimport AddInterview from './AddInterview';\r\nimport InterviewDetail from './InterviewDetail';\r\nimport InterviewStudentSelection from '../../../components/InterviewStudentSelection';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 24,\r\n        backgroundColor: \"white\",\r\n    },\r\n    link: {\r\n        color: theme.palette.grey[800],\r\n        fontSize: 14,\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        \"&:hover, &:focus\": {\r\n            textDecoration: \"none\",\r\n            color: theme.palette.primary,\r\n        },\r\n    },\r\n    heading: {\r\n        fontWeight: 600\r\n    }\r\n}));\r\n\r\nfunction Interviews() {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n            >\r\n                <Typography variant=\"h6\" className={classes.heading}>\r\n                   Interviews\r\n                </Typography>\r\n            </Grid>\r\n            {ActiveLastBreadcrumb(false,location)}\r\n\r\n            <Switch>\r\n                <Route exact path=\"/app/interviews\" component={InterviewListing} />\r\n                <Route exact path=\"/app/interviews/add\" component={AddInterview} />\r\n                <Route exact path=\"/app/interviews/detail/:id\" component={InterviewDetail}/>\r\n                <Route exact path = \"/app/interviews/edit/:id/:intId\" component={InterviewStudentSelection} />\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\nconst mapp ={\r\n    \"ad\":\"Advertisement\",\r\n    \"textad\": \"Text Ad\",\r\n}\r\n\r\nfunction ActiveLastBreadcrumb(exam,location) {\r\n  const classes = useStyles();\r\n  const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n  return (\r\n    <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n       {pathnames.map((value, index) => {\r\n                  const last = index === pathnames.length - 1;\r\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                  if(value==='app'||value=='detail') return\r\n                  return last ? (\r\n                    <Typography style={{textTransform:\"capitalize\"}} color=\"textPrimary\" key={to}>\r\n                      {value}\r\n                    </Typography>\r\n                  ) : (\r\n                    <LinkRouter style={{textTransform:\"capitalize\"}} color=\"inherit\" to={to} key={to}>\r\n                      {value}\r\n                    </LinkRouter>\r\n                  );\r\n                })}\r\n    </Breadcrumbs>\r\n  )\r\n}\r\nexport default withRouter(Interviews);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport api from '../../../api/api';\r\nimport { getCredentials } from '../../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: 24,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        color: \"#023e8a\",\r\n        margin: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    paper: {\r\n        minHeight: 400\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n        marginTop: 24,\r\n        paddingRight: theme.spacing(4)\r\n    },\r\n    textField: {\r\n        width: \"100%\"\r\n    },\r\n    button: {\r\n        marginTop: 16\r\n    }\r\n}));\r\n\r\nexport default function Settings(props) {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [defaultAbout, setDefaultAbout] = useState('');\r\n    const [buttonText, setButtonText] = useState('Submit');\r\n\r\n    useEffect(() => {\r\n        getDefaultAboutUs();\r\n    }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            aboutUs: defaultAbout\r\n        },\r\n        validationSchema: Yup.object({\r\n            aboutUs: Yup.string().required('This field is required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n            setDefaultAboutUs(values.aboutUs);\r\n        },\r\n        enableReinitialize: true\r\n    });\r\n\r\n    const handleSuggestionClick = () => {\r\n        props.history.push(\"/app/suggestion\");\r\n    }\r\n\r\n    const handleAboutClick = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    const setDefaultAboutUs = async (aboutUs) => {\r\n        try {\r\n            setButtonText('Saving...');\r\n            const res = await api.post(\r\n                \"/admin/setDefaultAboutUs\",\r\n                {aboutUs},\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            getDefaultAboutUs();\r\n            setButtonText('Saved');\r\n            setTimeout(() => {\r\n                setButtonText('Submit');\r\n            }, 1000);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getDefaultAboutUs = async () => {\r\n        try {\r\n            const res = await api.post(\r\n                \"/admin/getDefaultAboutUs\",\r\n                null,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            console.log(\"RESPON \", res.data);\r\n            if(res.data.response.length > 0){\r\n                setDefaultAbout(res.data.response[0].About);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n            >\r\n                <Paper className={classes.paper}>\r\n                    <Typography className={classes.title}>Settings</Typography>\r\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                        <ListItem button onClick={handleSuggestionClick}>\r\n                            <ListItemIcon>\r\n                                <AnnouncementIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Suggestions\" />\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <ListItem button onClick={handleAboutClick}>\r\n                            <ListItemIcon>\r\n                                <DescriptionIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Set About\" />\r\n                            {open ? <ExpandLess /> : <ExpandMore />}\r\n                        </ListItem>\r\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                            <form noValidate className={classes.nested} onSubmit={formik.handleSubmit}>\r\n                                <TextField\r\n                                    error={!!formik.errors.aboutUs && formik.touched.aboutUs}\r\n                                    helperText={\r\n                                        !!formik.errors.aboutUs && formik.touched.aboutUs\r\n                                            ? formik.errors.aboutUs\r\n                                            : ''\r\n                                    }\r\n                                    className={classes.textField}\r\n                                    id=\"filled-multiline-static\"\r\n                                    label=\"Default About\"\r\n                                    multiline\r\n                                    name=\"aboutUs\"\r\n                                    rows={4}\r\n                                    defaultValue={defaultAbout}\r\n                                    variant=\"outlined\"\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.aboutUs}\r\n                                />\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    {buttonText}\r\n                                </Button>\r\n                            </form>\r\n                        </Collapse>\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function StudentListMenu({\r\n  goToMail,\r\n  assignStudents\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        variant=\"outlined\"\r\n        disableElevation\r\n        size=\"small\"\r\n      >\r\n        Action\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        getContentAnchorEl={null}\r\n        elevation={0}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\", \r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            goToMail()\r\n            handleClose();\r\n          }}\r\n        >\r\n          Send email\r\n        </MenuItem>\r\n        {/* <MenuItem\r\n          onClick={() => {\r\n            assignStudents()\r\n            handleClose();\r\n          }}\r\n        >\r\n          Assign students\r\n        </MenuItem> */}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport StudentTable from '../../../../components/tables/StudentTable';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport api from \"../../../../api/api\";\r\nimport { getCredentials } from \"../../../../services/authService\";\r\nimport StudentListMenu from '../../../../components/menu/StudentListMenu'\r\nimport { useSelector } from 'react-redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n    btn: {},\r\n    btnContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n}));\r\nexport default function ExamList(props) {\r\n    const selectedStudents = useSelector((state) => state.selectedStudents);\r\n    const { selected } = selectedStudents;\r\n    const classes = useStyles();\r\n    const goToMail = () => {\r\n        props.history.push('/app/students/mail')\r\n    }\r\n    const [data, setData] = useState([])\r\n\r\n    const remoteData = async () => {\r\n        api.post(\r\n            '/admin/getStudents',\r\n            {},\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                },\r\n            },\r\n            { timeout: 1000 }\r\n        ).then((res) => {\r\n            console.log(\"res\", res)\r\n            setData(res.data.response)\r\n        })\r\n            .catch((err) => { console.log(err); })\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        remoteData()\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    const assignStudents = async () => {\r\n        return\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.btnContainer}>\r\n                <div></div>\r\n                {selected.length > 0 && (\r\n                    <StudentListMenu goToMail={goToMail} assignStudents={assignStudents} />\r\n                )}\r\n          \r\n            </div>\r\n            <StudentTable history={props.history} data={data} remoteData={remoteData} />\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: { \r\n        marginTop:32\r\n    },\r\n    avatar: {\r\n      width: 150,\r\n      height: 150,\r\n    },\r\n    paper:{\r\n        padding:32,\r\n        width:\"100%\"\r\n    },\r\n    divider:{\r\n        margin:16\r\n    },\r\n    fullName:{\r\n        color:theme.palette.primary.light,\r\n        fontSize:22,\r\n    },\r\n    phone:{\r\n        color:theme.palette.text.secondary,\r\n        fontSize:16,\r\n    },\r\n    email:{\r\n        color:theme.palette.text.secondary,\r\n        fontSize:16,\r\n    },\r\n    id:{\r\n        color:theme.palette.text.primary,\r\n        fontSize:16,\r\n    },\r\n    label:{\r\n        color:theme.palette.secondary.light,\r\n        marginRight:4,\r\n    }\r\n  }));\r\n  ","import { StyleSheet } from \"@react-pdf/renderer\";\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#fff\",\r\n    padding:32,\r\n    fontFamily:'Poppins'\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n  },\r\n  image: {\r\n      width:150,\r\n      height:150,\r\n    marginBottom: 10,\r\n  },\r\n  leftColumn: {\r\n    flexDirection: \"column\",\r\n    width: 170,\r\n    paddingRight: 15,\r\n  },\r\n  rightColumn: {\r\n      flex:1,\r\n      paddingLeft: 15,\r\n      flexDirection:\"column\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"coloumn\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  name: {\r\n    fontSize: 11,\r\n  },\r\n  email: {\r\n    fontSize: 12,\r\n    fontFamily: 'Roboto-Medium'\r\n  },\r\n  phone: {\r\n    fontSize: 12,\r\n    fontFamily: 'Roboto-Medium'\r\n  },\r\n  title: {\r\n    fontFamily: 'Fredoka',\r\n    fontWeight: 'bold',\r\n    fontSize: 24\r\n  },\r\n  subHeading: {\r\n    fontFamily: 'Roboto-Bold',\r\n    fontSize: 14\r\n  },\r\n  viewGroup: {\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n  }\r\n});\r\n\r\nexport default ({ data }) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.title}>{data.studentInfo.FullName}</Text>\r\n    <View style={styles.viewGroup}>\r\n      <Text style={styles.subHeading}>Email </Text>\r\n      <Text style={styles.email}>{data.credDetails.Email}</Text>\r\n    </View>\r\n    <View style={styles.viewGroup}>\r\n      <Text style={styles.subHeading}>Phone </Text>\r\n      <Text style={styles.phone}>{data.addrDetails.PhoneNo}</Text>\r\n    </View>\r\n  </View>\r\n);","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n      display:\"flex\",\r\n    flexDirection: 'row',\r\n  },\r\n  bulletPoint: {\r\n    width: 12,\r\n    fontSize: 10,\r\n  },\r\n  itemContent: {\r\n    fontSize: 12,\r\n    display:\"flex\",\r\n    flexDirection:\"column\"\r\n  },\r\n});\r\n\r\nconst List = ({ children }) => children;\r\n\r\nexport const Item = ({ children }) => (\r\n  <View style={styles.item}>\r\n    <Text style={styles.bulletPoint}>•</Text>\r\n    <Text style={styles.itemContent}>{children}</Text>\r\n  </View>\r\n);\r\n\r\nexport default List;","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\nimport List, { Item } from './List'\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 10,\r\n  },\r\n  skill: {\r\n    fontSize: 10,\r\n    flexDirection: 'row',\r\n\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontFamily: 'Fredoka',\r\n    textTransform: \"uppercase\",\r\n  },\r\n  line: {\r\n    backgroundColor: \"#DFDFDF\",\r\n    height: 1,\r\n    width: '100%'\r\n  },\r\n  educationBlk: {\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  educationInBlk1: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 2,\r\n    flexWrap: 'wrap'\r\n  },\r\n  educationInBlk2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 4,\r\n    flexWrap: 'wrap'\r\n  }\r\n\r\n});\r\n\r\nexport default ({data}) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.title}>Skills</Text>\r\n    <View style={styles.line}></View>\r\n    <View style={styles.educationBlk}>\r\n      <View style={styles.educationInBlk1}>\r\n      </View>\r\n      <View style={styles.educationInBlk2}>\r\n        <List>\r\n          {data.map((skill)=>(\r\n            <Item>{skill.Skill}</Item>\r\n          ))}\r\n    \r\n        </List>\r\n      </View>\r\n    </View>\r\n  </View>\r\n);","import React from \"react\";\r\n\r\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\r\nimport List, { Item } from './List'\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontFamily: 'Fredoka',\r\n    textTransform: \"uppercase\",\r\n  },\r\n  heading: {\r\n    fontSize: 12,\r\n    fontFamily: 'Roboto-Medium',\r\n    marginTop: 10,\r\n  },\r\n  subHeading: {\r\n    fontSize: 16,\r\n    fontFamily: 'Roboto-Bold',\r\n    marginTop: 6,\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  text: {\r\n    fontSize: 10,\r\n    marginLeft: 4,\r\n    color: \"grey\"\r\n  },\r\n  line: {\r\n    backgroundColor: \"#DFDFDF\",\r\n    height: 1,\r\n    width: '100%'\r\n  },\r\n  educationBlk: {\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  educationInBlk1: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 2,\r\n    flexWrap: 'wrap'\r\n  },\r\n  educationInBlk2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 4,\r\n    flexWrap: 'wrap'\r\n  }\r\n  //   course:{\r\n  //       border:.5,\r\n  //       borderColor:\"black\",\r\n  //       padding:4,\r\n  //       borderRadius:10,\r\n  //   }\r\n});\r\n\r\nexport default function Education({ data }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Education</Text>\r\n      <View style={styles.line}></View>\r\n      <View style={styles.educationBlk}>\r\n        <View style={styles.educationInBlk1}>\r\n          <Text style={styles.heading}>Tenth Education</Text>\r\n        </View>\r\n        <View style={styles.educationInBlk2}>\r\n          <Text style={styles.subHeading}>{data.acadDetails.SchoolName10}, {data.acadDetails.Location10}</Text>\r\n          <List>\r\n            <Item>Cgpa/Percentage : {data.acadDetails.Cgpa10}</Item>\r\n            <Item>Board: {data.acadDetails.Board10}</Item>\r\n          </List>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.educationBlk}>\r\n        <View style={styles.educationInBlk1}>\r\n          <Text style={styles.heading}>Twelth Education</Text>\r\n        </View>\r\n        <View style={styles.educationInBlk2}>\r\n          <Text style={styles.subHeading}>{data.acadDetails.SchoolName12}, {data.acadDetails.Location12}</Text>\r\n          <List>\r\n            <Item>Cgpa/Percentage : {data.acadDetails.Cgpa12}</Item>\r\n            <Item>Board: {data.acadDetails.Board12}</Item>\r\n          </List>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.educationBlk}>\r\n        <View style={styles.educationInBlk1}>\r\n          <Text style={styles.heading}>Degree Details</Text>\r\n        </View>\r\n        <View style={styles.educationInBlk2}>\r\n          {\r\n            data.degreeDetails.map(degree => {\r\n              return (\r\n                <View>\r\n                  <Text style={styles.subHeading}>{degree.CollegeName}, {degree.Location}</Text>\r\n                  <List>\r\n                    <Item>Course : {degree.Degree}</Item>\r\n                    <Item>Cgpa/Percentage : {degree.Cgpa}</Item>\r\n                  </List>\r\n                </View>\r\n              )\r\n            })\r\n          }\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"coloumn\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  text: {\r\n    fontSize: 11,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontFamily: 'Fredoka',\r\n    textTransform: \"uppercase\",\r\n  },\r\n  line: {\r\n    backgroundColor: \"#DFDFDF\",\r\n    height: 1,\r\n    width: '100%'\r\n  },\r\n  educationBlk: {\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  educationInBlk1: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 2,\r\n    flexWrap: 'wrap'\r\n  },\r\n  educationInBlk2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 4,\r\n    flexWrap: 'wrap'\r\n  },\r\n  heading: {\r\n    fontSize: 12,\r\n    fontFamily: 'Roboto-Medium',\r\n    marginTop: 10,\r\n  },\r\n  addressMain: {\r\n    marginTop: 8,\r\n    fontFamily: 'Roboto-Medium',\r\n    fontSize: 14,\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  }\r\n});\r\n\r\nexport default ({ data }) => (\r\n  <View style={styles.container}>\r\n    <Text style={styles.title}>Address</Text>\r\n    <View style={styles.line}></View>\r\n    <View style={styles.educationBlk}>\r\n      <View style={styles.educationInBlk1}>\r\n        <Text style={styles.heading}>Residence</Text>\r\n      </View>\r\n      <View style={styles.educationInBlk2}>\r\n        <Text style={styles.addressMain}>{data.addrDetails.AddressLine1}</Text>\r\n        <Text style={styles.text}>{data.addrDetails.AddressLine2}</Text>\r\n        <Text style={styles.text}>{data.addrDetails.City}, {data.addrDetails.State}</Text>\r\n      </View>\r\n    </View>\r\n  </View>\r\n);","import React from \"react\";\r\n\r\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  text: {\r\n    fontSize: 11,\r\n    flexWrap: \"wrap\"\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n    marginBottom: 4,\r\n    textTransform: \"uppercase\",\r\n    color: \"#536DFE\",\r\n  },\r\n});\r\n\r\nexport default ({ about = \"\" }) => (\r\n  <View style={styles.container}>\r\n   <Text style={styles.title}>Objective</Text>\r\n    <Text style={styles.text} break>\r\n      {about.About}\r\n    </Text>\r\n  </View>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\r\nimport List, { Item } from \"./List\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"coloumn\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontFamily: 'Fredoka',\r\n    textTransform: \"uppercase\",\r\n  },\r\n  heading: {\r\n    fontSize: 12,\r\n    fontFamily: 'Roboto-Medium',\r\n    marginTop: 10,\r\n  },\r\n  subHeading: {\r\n    fontSize: 16,\r\n    fontFamily: 'Roboto-Bold',\r\n    marginTop: 6,\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  text: {\r\n    fontSize: 10,\r\n    marginLeft: 4,\r\n    color: \"grey\"\r\n  },\r\n  line: {\r\n    backgroundColor: \"#DFDFDF\",\r\n    height: 1,\r\n    width: '100%'\r\n  },\r\n  educationBlk: {\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  educationInBlk1: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 2,\r\n    flexWrap: 'wrap'\r\n  },\r\n  educationInBlk2: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 4,\r\n    flexWrap: 'wrap'\r\n  },\r\n  miniHeading: {\r\n    fontSize: 12,\r\n    fontFamily: 'Poppins',\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  }\r\n});\r\n\r\nexport default ({data}) => (\r\n  <View style={styles.container}>\r\n  <Text style={styles.title}>Experience</Text>\r\n  <View style={styles.line}></View>\r\n  {data.map((item)=>(\r\n    \r\n  <View style={styles.educationBlk}>\r\n    <View style={styles.educationInBlk1}>\r\n      <Text style={styles.heading}>{item.FromDate} - {item.ToDate.length<1?\"Present\":item.ToDate}</Text>\r\n    </View>\r\n    <View style={styles.educationInBlk2}>\r\n      <Text style={styles.subHeading}>{item.JobTitle}</Text>\r\n      <Text style={styles.miniHeading}>{item.CompanyName}</Text>\r\n    </View>\r\n  </View>\r\n  ))}\r\n\r\n\r\n</View>\r\n);\r\n","import React from \"react\";\r\nimport { Page, Text, View, Document, Image, Font } from \"@react-pdf/renderer\";\r\nimport styles from \"./styles\";\r\nimport BasicInfo from \"./BasicInfo\";\r\nimport Skills from \"./Skills\";\r\nimport Education from \"./Education\";\r\nimport Address from \"./Address\";\r\nimport About from \"./About\";\r\nimport Experience from \"./Experience\";\r\n// Create Document Component\r\nFont.register({\r\n  family: \"Poppins\",\r\n  src: \"/assets/fonts/popins.ttf\",\r\n});\r\nFont.register({\r\n  family: \"Fredoka\",\r\n  src: \"/assets/fonts/fredoka.ttf\",\r\n});\r\nFont.register({\r\n  family: \"Roboto-Medium\",\r\n  src: \"/assets/fonts/roboto-medium.ttf\",\r\n});\r\nFont.register({\r\n  family: \"Roboto-Bold\",\r\n  src: \"/assets/fonts/roboto-bold.ttf\",\r\n});\r\nFont.registerHyphenationCallback((word) => [word]);\r\nexport default function MyDocument({ data }) {\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={styles.container}>\r\n          <BasicInfo data={data} />\r\n          <About about={data.studentAbout} />\r\n          <Education data={data} />\r\n          <Address data={data} />\r\n          {data.studentSkills.length>0&&(<Skills data={data.studentSkills}/>)}\r\n          {data.studentExperience.length>0&&(<Experience data={data.studentExperience}/>)}\r\n        </View>\r\n      </Page>\r\n    </Document >\r\n  );\r\n}\r\n","import React,{useState,useEffect} from \"react\";\r\nimport MarkListTable from \"components/tables/MarkListTable\";\r\nimport api from 'api/api';\r\nimport {getCredentials} from 'services/authService'\r\nimport SimpleLoading from \"components/loading/SimpleLoading\";\r\nexport default function StudentMarkList(props) {\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  useEffect(() => {\r\n    remoteData()\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n    const remoteData = async () =>{\r\n      try {\r\n        setLoading(true);\r\n        const response = await api.post(\"/admin/getStudentExams\", { studentId:props.match.params.id }, {\r\n          headers: {\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        },\r\n          { timeout: 1000 }\r\n        );\r\n  \r\n        console.log(\"STUD DETAILD \", response.data.response);\r\n        setData(response.data.response);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  return (\r\n    <div>\r\n      {loading &&(<SimpleLoading open={loading}/>)}\r\n      <MarkListTable\r\n        data={data}\r\n        loading={loading}\r\n        studentId={props.match.params.id}\r\n        history={props.history}\r\n        remoteData={remoteData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { getStudent } from \"services/Students\";\r\nimport { Avatar, Button, Grid, Typography, Card, CardContent } from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\r\nimport SimpleLoading from \"components/loading/SimpleLoading\";\r\nimport MyDocument from 'components/Resume'\r\nimport { PDFDownloadLink, Document, Page } from '@react-pdf/renderer'\r\nimport api from 'api/api';\r\nimport { getCredentials } from 'services/authService';\r\nimport StudentMarkList from './StudentMarkList';\r\nimport { Switch, Route, } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 32,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    colorBg: {\r\n        backgroundColor: \"#023e8a\",\r\n        height: 150\r\n    },\r\n    newPaper: {\r\n        marginTop: 8\r\n    },\r\n    newPaper1: {\r\n        marginTop: 32\r\n    },\r\n    card: {\r\n        position: \"relative\",\r\n    },\r\n    avatar: {\r\n        width: 150,\r\n        height: 150,\r\n        position: \"absolute\",\r\n        marginTop: -75,\r\n        marginLeft: 18\r\n    },\r\n    leftMargin: {\r\n        marginLeft: 18\r\n    },\r\n    subHeading: {\r\n        fontSize: 20,\r\n        marginLeft: 18\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    date: {\r\n        fontSize: 12\r\n    },\r\n    resumeButton: {\r\n        padding: \"8px 16px\",\r\n        marginLeft: 64,\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"white\",\r\n        borderRadius: 5,\r\n        maxWidth: 200,\r\n        textAlign: \"center\",\r\n        textDecoration: \"none\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"black\",\r\n            textDecoration: \"none\",\r\n            color: \"white\",\r\n        },\r\n\r\n    },\r\n    button: {\r\n        height: 40,\r\n        marginLeft: 12\r\n    },\r\n    paper: {\r\n        padding: 32,\r\n        width: \"100%\"\r\n    },\r\n    divider: {\r\n        margin: 16\r\n    },\r\n    fullName: {\r\n        color: theme.palette.primary.light,\r\n        fontSize: 22,\r\n    },\r\n    phone: {\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 16,\r\n    },\r\n    email: {\r\n        color: theme.palette.text.secondary,\r\n        fontSize: 16,\r\n    },\r\n    id: {\r\n        color: theme.palette.text.primary,\r\n        fontSize: 16,\r\n    },\r\n    label: {\r\n        color: theme.palette.secondary.light,\r\n        marginRight: 4,\r\n    }\r\n}));\r\n\r\nfunction Details(props) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getStudentDetails(props.match.params.id);\r\n    }, []);\r\n\r\n    const getStudentDetails = async (studentId) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await api.post(\"/admin/getStudentDetails\", { studentId }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${getCredentials()}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            console.log(\"STUD DETAILD \", response.data.response);\r\n            setData(response.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    if (!loading) {\r\n        return (\r\n            <div className={classes.root}>\r\n\r\n                <Grid container className={classes.newPaper} justify=\"center\">\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Card>\r\n                            <CardContent className={classes.card}>\r\n                                <div className={classes.colorBg}></div>\r\n                                <Avatar\r\n                                    src={data.studentInfo.ProfilePic}\r\n                                    alt={data.studentInfo.FullName}\r\n                                    className={classes.avatar}\r\n                                />\r\n                                <Grid container direction=\"row\" alignItems=\"center\" justify=\"flex-end\" style={{ marginTop: 14 }}>\r\n                                    {\r\n                                        data.studentInfo && (\r\n                                            <PDFDownloadLink document={<MyDocument data={data} />} fileName=\"resume.pdf\">\r\n                                                {({ blob, url, loading, error }) => (loading ? null :\r\n                                                    <Typography className={classes.resumeButton}>\r\n                                                        Resume\r\n                                                </Typography>\r\n                                                )}\r\n                                            </PDFDownloadLink>\r\n                                        )\r\n                                    }\r\n                                    <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={() => props.history.push(\"/app/students/details/\" + props.match.params.id + \"/marklist\")}>mark list</Button>\r\n                                </Grid>\r\n\r\n                                <Grid container direction=\"row\" justify=\"space-between\" style={{ marginTop: 8 }}>\r\n                                    <Grid item direction=\"column\" className={classes.leftMargin}>\r\n                                        <Typography className={classes.fullName}>\r\n                                            {data.studentInfo.FullName}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {data.credDetails.Email}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {data.addrDetails.AddressLine1}, {data.addrDetails.City}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {data.addrDetails.State}, Phone {data.addrDetails.PhoneNo}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item direction=\"column\">\r\n                                        <Typography style={{marginLeft:18}}>\r\n                                            Gender <b>{data.studentInfo.Gender == 'M' ? 'MALE' : data.studentInfo.Gender == 'F' ? 'FEMALE' : 'TRANSGENDER'}</b>\r\n                                        </Typography>\r\n                                        <Typography style={{marginLeft:18}}>\r\n                                            Date of Birth <b>{data.studentInfo.Dob}</b>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container className={classes.newPaper1} justify=\"center\">\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Card>\r\n                            <CardContent className={classes.card}>\r\n                                <Typography className={classes.subHeading}>Schooling</Typography>\r\n\r\n                                <List>\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <SchoolIcon />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={data.acadDetails.SchoolName10}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {data.acadDetails.Board10}, {data.acadDetails.Location10}\r\n                                                    </Typography>\r\n\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider variant=\"inset\" component=\"li\" />\r\n                                    <ListItem alignItems=\"flex-start\">\r\n                                        <ListItemAvatar>\r\n                                            <AccountBalanceIcon />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={data.acadDetails.SchoolName12}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {data.acadDetails.Board12}, {data.acadDetails.Location12}\r\n                                                    </Typography>\r\n\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid container className={classes.newPaper1} justify=\"center\">\r\n                    <Grid item xs={12} sm={9}>\r\n                        <Card>\r\n                            <CardContent className={classes.card}>\r\n                                <Typography className={classes.subHeading}>Degrees</Typography>\r\n\r\n                                <List>\r\n                                    {\r\n                                        data.degreeDetails.map((element) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <ListItem alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <SchoolIcon />\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary={element.CollegeName}\r\n                                                            secondary={\r\n                                                                <React.Fragment>\r\n                                                                    <Typography\r\n                                                                        component=\"span\"\r\n                                                                        variant=\"body2\"\r\n                                                                        className={classes.inline}\r\n                                                                        color=\"textPrimary\"\r\n                                                                    >\r\n                                                                        {element.Degree}, {element.Location}\r\n                                                                    </Typography>\r\n\r\n                                                                </React.Fragment>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider variant=\"inset\" component=\"li\" />\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {\r\n                    (data.certifications.length > 0) ? (\r\n                        <Grid container className={classes.newPaper1} justify=\"center\">\r\n                            <Grid item xs={12} sm={9}>\r\n                                <Card>\r\n                                    <CardContent className={classes.card}>\r\n                                        <Typography className={classes.subHeading}>Certifications</Typography>\r\n\r\n                                        <List>\r\n                                            {\r\n                                                data.certifications.map((element) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <ListItem alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <CardMembershipIcon />\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={element.CertificationName}\r\n                                                                    secondary={\r\n                                                                        <React.Fragment>\r\n                                                                            <Typography\r\n                                                                                component=\"span\"\r\n                                                                                variant=\"body2\"\r\n                                                                                className={classes.inline}\r\n                                                                                color=\"textPrimary\"\r\n                                                                            >\r\n                                                                                {element.Institute}\r\n                                                                            </Typography>\r\n\r\n                                                                        </React.Fragment>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                            <Divider variant=\"inset\" component=\"li\" />\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </List>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    (data.studentExperience.length > 0) ? (\r\n                        <Grid container className={classes.newPaper1} justify=\"center\">\r\n                            <Grid item xs={12} sm={9}>\r\n                                <Card>\r\n                                    <CardContent className={classes.card}>\r\n                                        <Typography className={classes.subHeading}>Experiences</Typography>\r\n\r\n                                        <List>\r\n                                            {\r\n                                                data.studentExperience.map((element) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <ListItem alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <CardMembershipIcon />\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={element.CompanyName}\r\n                                                                    secondary={\r\n                                                                        <React.Fragment>\r\n                                                                            <Typography\r\n                                                                                component=\"span\"\r\n                                                                                variant=\"body2\"\r\n                                                                                className={classes.inline}\r\n                                                                                color=\"textPrimary\"\r\n                                                                            >\r\n                                                                                {element.JobTitle}\r\n                                                                            </Typography>\r\n                                                                            <Typography className={classes.date}>{element.FromDate} to {element.ToDate.length<1?\"Present\":element.ToDate.length}</Typography>\r\n                                                                        </React.Fragment>\r\n                                                                    }\r\n                                                                />\r\n                                                            </ListItem>\r\n                                                            <Divider variant=\"inset\" component=\"li\" />\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </List>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    (data.studentSkills.length > 0) ? (\r\n                        <Grid container className={classes.newPaper1} justify=\"center\">\r\n                            <Grid item xs={12} sm={9}>\r\n                                <Card>\r\n                                    <CardContent className={classes.card}>\r\n                                        <Typography className={classes.subHeading}>Skills</Typography>\r\n\r\n                                        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                                            {\r\n                                                data.studentSkills.map((element) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <ListItem>\r\n                                                                <ListItemText primary={element.Skill} />\r\n                                                            </ListItem>\r\n                                                            <Divider />\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </List>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ) : null\r\n                }\r\n\r\n\r\n                {/* <Paper className={classes.paper}>\r\n                    <Grid>\r\n                        <Grid container direction=\"row\" spacing={3} alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Avatar\r\n                                    src={data.studentInfo.ProfilePic}\r\n                                    alt={data.studentInfo.FullName}\r\n                                    className={classes.avatar}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography className={classes.fullName}>\r\n                                    {data.studentInfo.FullName}\r\n                                </Typography>\r\n                                <Typography className={classes.id}>{data.credDetails.id}</Typography>\r\n                                <Typography className={classes.email}>\r\n                                    {data.credDetails.Email}\r\n                                </Typography>\r\n                                <Typography className={classes.phone}>\r\n                                    {data.addrDetails.PhoneNo}\r\n                                </Typography>\r\n                                {\r\n                                    data.studentInfo && (\r\n                                        <PDFDownloadLink className={classes.link} document={<MyDocument data={data} />} fileName=\"resume.pdf\">\r\n                                            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\r\n                                        </PDFDownloadLink>\r\n                                    )\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.divider}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" spacing={3}>\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>DOB</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.studentInfo.Dob}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>Gender</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.studentInfo.Gender}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>Register No</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.studentInfo.RegNumber}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>Address line 1</Typography>\r\n                                    <Typography className={classes.val}>{data.addrDetails.AddressLine1}</Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>\r\n                                        Address line2\r\n                  </Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.addrDetails.AddressLine2}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>City/Town</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.addrDetails.City}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\">\r\n                                    <Typography className={classes.label}>state</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.addrDetails.State}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.divider}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        <Grid container direction=\"row\" spacing={3}>\r\n                            <Grid item xs>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>\r\n                                        10th School name\r\n                  </Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.SchoolName10}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>CGPA/Percentage</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Cgpa10}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Board</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Board10}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Location</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.Location10}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>\r\n                                        12th School name\r\n                  </Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.SchoolName12}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>CGPA/Percentage</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Cgpa12}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Board</Typography>\r\n                                    <Typography className={classes.val}>{data.acadDetails.Board12}</Typography>\r\n                                </Grid>\r\n                                <Grid item direction=\"row\" spacing={3}>\r\n                                    <Typography className={classes.label}>Location</Typography>\r\n                                    <Typography className={classes.val}>\r\n                                        {data.acadDetails.Location12}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className={classes.divider}>\r\n                            <Divider />\r\n                        </Grid>\r\n                        {\r\n                            data.degreeDetails.map(element => {\r\n                                return (\r\n                                    <Grid >\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>College name</Typography>\r\n                                            <Typography className={classes.val}>\r\n                                                {element.CollegeName}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>CGPA/Percentage</Typography>\r\n                                            <Typography className={classes.val}>{element.Cgpa}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>degree</Typography>\r\n                                            <Typography className={classes.val}>{element.Degree}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item direction=\"row\" spacing={3}>\r\n                                            <Typography className={classes.label}>Location</Typography>\r\n                                            <Typography className={classes.val}>{element.Location}</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Paper> */}\r\n\r\n            </div>\r\n        );\r\n    } else return <SimpleLoading />;\r\n}\r\n\r\nexport default Details;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { getStudent } from \"services/Students\";\r\nimport { Avatar, Button, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport SimpleLoading from \"components/loading/SimpleLoading\";\r\nimport useStyles from \"./styles\";\r\nimport MyDocument from 'components/Resume'\r\nimport { PDFDownloadLink, Document, Page } from '@react-pdf/renderer'\r\nimport api from 'api/api';\r\nimport { getCredentials } from 'services/authService';\r\nimport StudentMarkList from './StudentMarkList';\r\nimport { Switch,Route,} from \"react-router-dom\";\r\nimport Details from \"./Details\";\r\nfunction StudentDetails(props) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Entered\");\r\n    getStudentDetails(props.match.params.id);\r\n  }, []);\r\n\r\n  const getStudentDetails = async (studentId) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.post(\"/admin/getStudentDetails\", { studentId }, {\r\n        headers: {\r\n          Authorization: `Bearer ${getCredentials()}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n        { timeout: 1000 }\r\n      );\r\n\r\n      console.log(\"STUD DETAILD \", response.data.response);\r\n      setData(response.data.response);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div className={classes.root}>\r\n          \r\n     \r\n        <Switch>\r\n          <Route  path=\"/app/students/details/:id/marklist\" component={StudentMarkList} />\r\n          <Route path=\"/app/students/details/:id\" component={Details} />\r\n        </Switch>\r\n\r\n      </div>\r\n    );\r\n  } else return <SimpleLoading />;\r\n}\r\n\r\nexport default StudentDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Icon,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Snackbar,\r\n  Paper,\r\n  useEventCallback,\r\n} from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport api from \"../../../../api/api\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { getCredentials } from \"../../../../services/authService\";\r\nimport { resetSelectedStudents } from \"../../../../actions/studentActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  form: {},\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default function StudentMail(props) {\r\n  const selectedStudents = useSelector((state) => state.selectedStudents);\r\n  const { selected } = selectedStudents;\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [complete, setComplete] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [emails, setEmails] = useState([]);\r\n  useEffect(() => {\r\n    if (selected.length === 0) props.history.goBack()\r\n\r\n    selected.map((item) => {\r\n      setEmails((emails) => emails.concat(item.Email));\r\n    });\r\n    return () => { };\r\n  }, []);\r\n\r\n  const handleDelete = (email) => {\r\n    console.log(email)\r\n    setEmails((chips) => chips.filter((chip) => chip !== email));\r\n    if (emails.length === 0) props.history.goBack()\r\n  };\r\n  const sendEmail = async (emails, values) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await api.post(\r\n        \"/admin/sendBulkEmail\",\r\n        { emails: emails, content: values.message, subject: values.subject },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCredentials()}`,\r\n          },\r\n        },\r\n        { timeout: 1000 }\r\n      );\r\n      console.log(\"res em\", res);\r\n      setLoading(false);\r\n      setComplete(true);\r\n      setOpen(true);\r\n      setTimeout(()=>{\r\n        props.history.goBack();\r\n      }, 1000)\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setComplete(false);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false)\r\n    setComplete(false);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      message: \"\",\r\n      subject: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      sendEmail(emails, values);\r\n    },\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      {loading && (\r\n        <Backdrop\r\n          className={classes.backdrop}\r\n          open={open}\r\n          onClick={handleClose}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      )}\r\n      {open && (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert\r\n            onClose={handleClose}\r\n            severity={complete ? \"success\" : \"error\"}\r\n          >\r\n            {complete ? \"Email successfully send\" : \"Error\"}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n      <div>\r\n        {emails.map((em) => {\r\n          let icon;\r\n          return (\r\n            <li key={em}>\r\n              <Chip\r\n                icon={icon}\r\n                label={em}\r\n                onDelete={() => handleDelete(em)}\r\n                className={classes.chip}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </div>\r\n      <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n        <TextField\r\n          style={{ margin: 8 }}\r\n          label=\"Subject\"\r\n          variant=\"outlined\"\r\n          name=\"subject\"\r\n          fullWidth\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.subject}\r\n          disabled={loading}\r\n        />\r\n        <TextField\r\n          style={{ margin: 8 }}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.message}\r\n          name=\"message\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          disabled={loading}\r\n        />\r\n        <Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={loading || emails.length < 1}\r\n          >\r\n            send\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {Container,Typography,Link} from \"@material-ui/core\";\r\nimport { emphasize, makeStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\n\r\nimport { Switch, Route, Redirect, withRouter,useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StudentList from \"./StudentList\";\r\nimport StudentDetails from \"./StudentDetails\";\r\nimport StudentMail from \"./StudentMail\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 24,\r\n    backgroundColor:\"white\",\r\n  },\r\n  link: {\r\n    color: theme.palette.grey[800],\r\n    fontSize:14,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Students(props) {\r\n  const classes = useStyles();\r\n  const [clickedUserm, setClickedUser] = useState();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch([]);\r\n\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      {ActiveLastBreadcrumb(false,location)}\r\n      <div>\r\n          \r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/app/students\" component={StudentList} />\r\n        <Route exact path=\"/app/students/mail\" component={StudentMail} />\r\n        <Route path=\"/app/students/details/:id\" component={StudentDetails} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\nfunction ActiveLastBreadcrumb(exam,location) {\r\n  const classes = useStyles();\r\n  const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n  return (\r\n    <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n       {pathnames.map((value, index) => {\r\n                  const last = index === pathnames.length - 1;\r\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                if(value==='app'||value==='details') return\r\n                  return last ? (\r\n                    <Typography style={{textTransform:\"capitalize\"}} color=\"textPrimary\" key={to}>\r\n                      {value}\r\n                    </Typography>\r\n                  ) : (\r\n                    <LinkRouter style={{textTransform:\"capitalize\"}} color=\"inherit\" to={to} key={to}>\r\n                      {value}\r\n                    </LinkRouter>\r\n                  );\r\n                })}\r\n    </Breadcrumbs>\r\n  )\r\n}\r\n\r\nexport default withRouter(Students)","import React, { useState } from 'react';\r\nimport {\r\n    makeStyles,\r\n    TextField,\r\n    Grid,\r\n    Select,\r\n    MenuItem,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport { Formik, Field, FieldArray, Form } from 'formik';\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SnackBar from '../SnackBar';\r\nimport api from '../../api/api';\r\nimport { getCredentials } from '../../services/authService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flex: 1,\r\n    },\r\n    label: {\r\n        marginRight: 24,\r\n        marginBottom: 24,\r\n        fontWeight: \"bold\"\r\n    },\r\n    textField: {\r\n        minHeight: 50,\r\n        minWidth: 300,\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"#D3D3D3\",\r\n        padding: 5\r\n    },\r\n    form: {\r\n        marginTop: 24,\r\n    },\r\n    dropDown: {\r\n        height: 50,\r\n        marginBottom: 24\r\n    },\r\n    row: {\r\n        marginBottom: 24\r\n    },\r\n    and: {\r\n        marginLeft: 18,\r\n        marginRight: 18\r\n    }\r\n}));\r\n\r\nconst initialValues = {\r\n    conditionName: '',\r\n    conditions: [\r\n        {\r\n            lowerCgpa: '',\r\n            lowerPercentage: '',\r\n            upperCgpa: '',\r\n            upperPercentage: ''\r\n        },\r\n    ],\r\n    avgPackage: ''\r\n};\r\n\r\n\r\nconst SuggestionForm = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [conditionTag, setConditionTag] = useState(['10th']);\r\n\r\n    const [college, setCollege] = useState([]);\r\n\r\n    const [improvement, setImprovement] = useState([]);\r\n\r\n    const [sector, setSector] = useState([]);\r\n\r\n    const [company, setCompany] = useState([]);\r\n\r\n    const [course, setCourse] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [message, setMesssage] = useState('');\r\n\r\n    const [severity, setSeverity] = useState('');\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleCourseChange = (chips) => {\r\n        setCourse(chips);\r\n    }\r\n\r\n    const handleCompanyChange = (chips) => {\r\n        setCompany(chips);\r\n    }\r\n\r\n    const handleSectorChange = (chips) => {\r\n        setSector(chips);\r\n    }\r\n\r\n    const handleCollegeChange = (chips) => {\r\n        setCollege(chips);\r\n    };\r\n\r\n    const handleImprovementChange = (chips) => {\r\n        setImprovement(chips);\r\n    }\r\n\r\n    const handleButtonClick = () => {\r\n        props.history.push(\"/app/suggestion/list\");\r\n    }\r\n\r\n    const checkConditionExist = async (conditionName) => {\r\n        try {\r\n            const res = await api.post(\r\n                \"/admin/checkConditionExist\",\r\n                {\r\n                    conditionName\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            console.log(\"CONDITON \", res.data);\r\n            return res.data.response;\r\n        } catch (error) {\r\n            setMesssage('Something went wrong');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const saveSuggestion = async (conditions, conditionName, avgPackage) => {\r\n        try {\r\n            setLoading(true);\r\n            await api.post(\r\n                \"/admin/saveSuggestion\",\r\n                {\r\n                    conditions,\r\n                    conditionName,\r\n                    colleges: college,\r\n                    improvements: improvement,\r\n                    courses: course,\r\n                    companies: company,\r\n                    sectors: sector,\r\n                    avgPackage\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setLoading(false);\r\n            setMesssage('Suggestion succesfully created');\r\n            setSeverity('success');\r\n            setOpen(true);\r\n            setTimeout(()=>{props.history.replace(\"/app/suggestion/list\")},1000);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setMesssage('Suggestion creation failed');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {loading && (\r\n                <Backdrop className={classes.backdrop} open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            )}\r\n            {open && (\r\n                <SnackBar open={open} message={message} severity={severity} setOpen={setOpen} />\r\n            )}\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={async (values) => {\r\n                    conditionTag.map((condition, index) => {\r\n                        values.conditions[index].condition = condition;\r\n                    });\r\n                    var flag = false;\r\n                    values.conditions.forEach(cond => {\r\n                        if (cond.lowerCgpa == '' || cond.lowerPercentage == '' || cond.upperCgpa == '' || cond.upperPercentage == '') {\r\n                            flag = true;\r\n                        }\r\n                    });\r\n                    if (flag || values.conditionName == '' || values.avgPackage == '' || college.length == 0 || improvement.length == 0 || course.length == 0 || company.length == 0 || sector.length == 0) {\r\n                        setMesssage('Fields cannot be empty');\r\n                        setSeverity('error');\r\n                        setOpen(true);\r\n                    }else if (await checkConditionExist(values.conditionName)) {\r\n                        setMesssage('Condition name already exist');\r\n                        setSeverity('error');\r\n                        setOpen(true);\r\n                    } else {\r\n                        saveSuggestion(values.conditions, values.conditionName, values.avgPackage);\r\n                    }\r\n                }}\r\n            >\r\n                {({ values }) => (\r\n                    <Form className={classes.form}>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                        >\r\n                            <Grid\r\n                                className={classes.row}\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label} >Condition Name : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Field\r\n                                        className={classes.textField}\r\n                                        name=\"conditionName\"\r\n                                        placeholder=\"name\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <FieldArray name=\"conditions\">\r\n                                {({ insert, remove, push }) => (\r\n                                    <>\r\n                                        {values.conditions.map((condition, index) => (\r\n                                            <Grid\r\n                                                container\r\n                                                direction=\"column\"\r\n                                                className={classes.row}\r\n                                                justify=\"space-between\"\r\n                                            >\r\n                                                <label className={classes.label} >Set Condition {index + 1} :</label>\r\n                                                <Select\r\n                                                    className={classes.dropDown}\r\n                                                    labelId='demo-simple-select-label'\r\n                                                    id='conditionTag'\r\n                                                    variant='outlined'\r\n                                                    size=\"small\"\r\n                                                    value={conditionTag[index]}\r\n                                                    onChange={(event) => {\r\n                                                        var items = [...conditionTag];\r\n                                                        items[index] = event.target.value;\r\n                                                        setConditionTag(items);\r\n                                                    }}\r\n                                                >\r\n                                                    <MenuItem value='10th'>10th Standard</MenuItem>\r\n                                                    <MenuItem value='12th'>12th Standard</MenuItem>\r\n                                                    <MenuItem value='degree'>Degree</MenuItem>\r\n                                                    <MenuItem value='communication'>Communication</MenuItem>\r\n                                                    <MenuItem value='aptitude'>Aptitude</MenuItem>\r\n                                                    <MenuItem value='logical'>Logical Reasoning</MenuItem>\r\n                                                    <MenuItem value='technical'>Technical</MenuItem>\r\n                                                </Select>\r\n                                                <Grid\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    className={classes.row}\r\n                                                    justify=\"space-around\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <label className={classes.label}>Lower Limit :</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.lowerCgpa`}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                    <label className={classes.and}>and</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.lowerPercentage`}\r\n                                                        placeholder=\"Percentage\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    className={classes.row}\r\n                                                    justify=\"space-around\"\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <label className={classes.label}>Upper Limit :</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.upperCgpa`}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                    <label className={classes.and}>and</label>\r\n                                                    <Field\r\n                                                        className={classes.textField}\r\n                                                        name={`conditions.${index}.upperPercentage`}\r\n                                                        placeholder=\"Percentage\"\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </Grid>\r\n                                                {\r\n                                                    (index === 0) ?\r\n                                                        null\r\n                                                        :\r\n                                                        <Button\r\n                                                            type=\"button\"\r\n                                                            className=\"secondary\"\r\n                                                            onClick={() => remove(index)}\r\n                                                        >\r\n                                                            X\r\n                                                        </Button>\r\n                                                }\r\n                                            </Grid>\r\n                                        ))}\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"secondary\"\r\n                                            onClick={() => push({\r\n                                                condition: '',\r\n                                                lowerCgpa: '',\r\n                                                lowerPercentage: '',\r\n                                                upperCgpa: '',\r\n                                                upperPercentage: ''\r\n                                            })}\r\n                                        >\r\n                                            Add\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n                            </FieldArray>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Set Colleges : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: college 1 , college 2\"\r\n                                        helperText=\"Press enter after each college\"\r\n                                        onChange={(chips) => handleCollegeChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Sectors To Improve : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: improvement 1 , improvement 2\"\r\n                                        helperText=\"Press enter after each improvement\"\r\n                                        onChange={(chips) => handleImprovementChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Courses To Pursue : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: course 1 , course 2\"\r\n                                        helperText=\"Press enter after each course\"\r\n                                        onChange={(chips) => handleCourseChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Offering Companies : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: company 1 , company 2\"\r\n                                        helperText=\"Press enter after each company\"\r\n                                        onChange={(chips) => handleCompanyChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Strong Sectors : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <ChipInput\r\n                                        className={classes.textField}\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"eg: sector 1 , sector 2\"\r\n                                        helperText=\"Press enter after each sector\"\r\n                                        onChange={(chips) => handleSectorChange(chips)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                className={classes.row}\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs>\r\n                                    <label className={classes.label}>Average Package : </label>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Field\r\n                                        className={classes.textField}\r\n                                        name=\"avgPackage\"\r\n                                        placeholder=\"Package\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                            >\r\n                                <Button\r\n                                    variant='outlined'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    onClick={handleButtonClick}\r\n                                >View Saved suggestions</Button>\r\n                                <Button\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    size='small'\r\n                                    type=\"submit\"\r\n                                >Submit</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuggestionForm;","import React, { useState, useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport api from 'api/api';\r\nimport { getCredentials } from 'services/authService'\r\nimport MaterialTable from \"material-table\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function DetailDialog({ open, handleClose, ConditionName }) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState()\r\n    const columns = [\r\n        { title: \"No\", field: \"ConditionNo\", align: \"left\" },\r\n        { title: \"ConditionTag\", field: \"ConditionTag\", align: \"left\" },\r\n        { title: \"LowerCgpa\", field: \"LowerCgpa\", align: \"left\" },\r\n        { title: \"LowerPercentage\", field: \"LowerPercentage\", align: \"left\" },\r\n        { title: \"UpperCgpa\", field: \"UpperCgpa\", align: \"left\" },\r\n        { title: \"UpperPercentage\", field: \"UpperPercentage\", align: \"left\" },\r\n\r\n    ];\r\n    const getDetail = async (ConditionName) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/getConditions\",\r\n                {\r\n                    conditionName: ConditionName\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            setLoading(false);\r\n            console.log(res.data.response)\r\n            setData(res.data.response)\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const tableOptions = {\r\n        search: false,\r\n        filtering: false,\r\n        // header:false,\r\n        paging: false,\r\n        toolbar:false,\r\n        showTitle:false,\r\n        headerStyle:{\r\n            backgroundColor:\"transparent\"\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getDetail(ConditionName)\r\n        return () => {\r\n\r\n        }\r\n    }, [ConditionName])\r\n    return (\r\n        <div>\r\n\r\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} fullWidth={true}\r\n                maxWidth=\"lg\" >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    {ConditionName}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <MaterialTable\r\n                    \r\n                        isLoading={loading}\r\n                        options={tableOptions}\r\n                        columns={columns}\r\n                        data={data}\r\n                        style={{ zIndex: 0, border: \"1px solid \", borderRadius: 5 }}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { forwardRef, useEffect, useState } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { \r\n    AddBox,\r\n    ArrowDownward,\r\n    Search,\r\n    Clear,\r\n    FirstPage,\r\n    LastPage,\r\n    ChevronLeft,\r\n    FilterList,\r\n    Check,\r\n    DeleteOutline,\r\n    Edit,\r\n    SaveAlt,\r\n    Delete,\r\n    ViewColumn,\r\n    ChevronRight,\r\n    Remove,\r\n    PhoneDisabled,\r\n    PersonAddDisabled,\r\n    TrainRounded,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport api from '../../../api/api';\r\nimport { getCredentials } from '../../../services/authService';\r\nimport DetailDialog from \"./DetailDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 32,\r\n    },\r\n}));\r\n\r\nconst SuggestionTable = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [id, setId] = useState()\r\n    const handleClose = ()=>{\r\n        setOpen(false)\r\n    }\r\n    const classes = useStyles();\r\n\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getSuggestions();\r\n    }, []);\r\n\r\n    const getSuggestions = async() => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/getSuggestions\",\r\n                null,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n\r\n            setSuggestions(res.data.response);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const deleteSuggestion = async(suggestionName) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await api.post(\r\n                \"/admin/deleteSuggestion\",\r\n                {\r\n                    suggestionName\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${getCredentials()}`,\r\n                    },\r\n                },\r\n                { timeout: 1000 }\r\n            );\r\n            getSuggestions();\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const tableColumns = [\r\n        // { title: \"Id\", field: \"id\", align: \"left\" },\r\n        { title: \"Condition Name\", field: \"ConditionName\", align: \"left\" },\r\n        { title: \"Colleges\", field: \"Colleges\", align: \"left\" },\r\n        { title: \"Improvements\", field: \"Improvements\", align: \"left\" },\r\n        { title: \"Courses\", field: \"Courses\", align: \"left\" },\r\n        { title: \"Companies\", field: \"Companies\", align: \"left\" },\r\n        { title: \"Sectors\", field: \"Sectors\", align: \"left\" },\r\n        { title: \"Average Package\", field: \"AvgPackage\", align: \"left\" },\r\n    ];\r\n\r\n    const editable = {\r\n        onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n                console.log(\"OLD\", oldData);\r\n                deleteSuggestion(oldData.ConditionName);\r\n                resolve()\r\n            })\r\n    }\r\n\r\n    const tableOptions = {\r\n        search: true,\r\n        filtering: true,\r\n        actionsColumnIndex: -1,\r\n        headerStyle: {\r\n            backgroundColor: '#1a73e8',\r\n            color: '#FFF'\r\n          }\r\n    };\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n            <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n            <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => (\r\n            <ArrowDownward {...props} ref={ref} />\r\n        )),\r\n        ThirdStateCheck: forwardRef((props, ref) => (\r\n            <Remove {...props} ref={ref} />\r\n        )),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    };\r\nconst handleRowclick =(ConditionName)=>{\r\n setId(ConditionName)\r\n setOpen(TrainRounded)\r\n}\r\n    return(\r\n        <div className={classes.root}>\r\n           {open && ( <DetailDialog open={open} handleClose={handleClose} ConditionName={id} />)}\r\n        <MaterialTable\r\n            editable={editable}\r\n            isLoading={loading}\r\n            options={tableOptions}\r\n            icons={tableIcons}\r\n            title=\"Suggestions\"\r\n            columns={tableColumns}\r\n            onRowClick={(event,rowData)=>{handleRowclick(rowData.ConditionName)}}\r\n            data={suggestions}>\r\n        </MaterialTable>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SuggestionTable;","import React from 'react';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Switch, Route, Redirect, withRouter, useLocation } from \"react-router-dom\";\r\nimport { Typography, Grid,Link,Breadcrumbs } from \"@material-ui/core\";\r\nimport SuggestionForm from '../../../components/SuggestionForm';\r\nimport SuggestionTable from '../../../components/tables/SuggestionTable';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 24,\r\n        backgroundColor: \"white\",\r\n    },\r\n    heading: {\r\n        fontWeight: 600\r\n    }\r\n}));\r\n\r\nfunction SuggestionManager() {\r\n\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    return (\r\n        <Container className={classes.root}>\r\n             {ActiveLastBreadcrumb(false,location)}\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n            >\r\n                <Typography variant=\"h6\" className={classes.heading}>\r\n                    Career Assessment Settings\r\n                </Typography>\r\n            </Grid>\r\n            <Switch>\r\n                <Route exact path=\"/app/suggestion/list\" component={SuggestionTable} />\r\n                <Route path=\"/app/suggestion\" component={SuggestionForm} />\r\n            </Switch>\r\n        </Container>\r\n    )\r\n}\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\nconst mapp ={\r\n    \"ad\":\"Advertisement\",\r\n    \"textad\": \"Text Ad\",\r\n}\r\n\r\nfunction ActiveLastBreadcrumb(exam,location) {\r\n  const classes = useStyles();\r\n  const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n  return (\r\n    <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n       {pathnames.map((value, index) => {\r\n                  const last = index === pathnames.length - 1;\r\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n                  if(value==='app'||value=='detail') return\r\n                  return last ? (\r\n                    <Typography style={{textTransform:\"capitalize\"}} color=\"textPrimary\" key={to}>\r\n                      {value}\r\n                    </Typography>\r\n                  ) : (\r\n                    <LinkRouter style={{textTransform:\"capitalize\"}} color=\"inherit\" to={to} key={to}>\r\n                      {value}\r\n                    </LinkRouter>\r\n                  );\r\n                })}\r\n    </Breadcrumbs>\r\n  )\r\n}\r\nexport default withRouter(SuggestionManager);","import React from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nimport Users from \"./Users\";\r\nimport Exams from \"./Exams\";\r\nimport Home from \"./Home\";\r\nimport AdManager from \"./AdManager\";\r\nimport Interviews from \"./Interviews\";\r\nimport Settings from \"./Settings\";\r\nimport Students from \"./Students\";\r\nimport SuggestionManager from './SuggestionManager';\r\n\r\nfunction Routing() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path='/app'>\r\n          <Redirect to=\"/app/dashboard\"/>\r\n        </Route>\r\n        <Route path=\"/app/dashboard\" component={Home} />\r\n        <Route path=\"/app/ad\" component={AdManager} />\r\n        <Route path=\"/app/interviews\" component={Interviews} />\r\n        <Route path=\"/app/settings\" component={Settings} />\r\n        <Route path=\"/app/students\" component={Students} />\r\n        <Route path=\"/app/suggestion\" component={SuggestionManager} />\r\n        <Route path=\"/app/users\" component={Users} />\r\n        <Route path=\"/app/exams\" component={Exams} />\r\n        <Route path=\"*\" component={Home} />\r\n        <Redirect\r\n          to={{\r\n            state: { error: true },\r\n          }}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Routing)\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles((theme) => ({\r\n\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    menuButton: {\r\n      color:\"#bfbfbf\"\r\n    },\r\n    drawerPaper: {\r\n      position: \"relative\",\r\n      whiteSpace: \"nowrap\",\r\n      width: drawerWidth,\r\n      background: theme.palette.primary.nav,\r\n      // background: \"-webkit-linear-gradient(to bottom, #000428, #004e92)\",\r\n      // background: \"linear-gradient(to bottom, #000428, #004e92)\",\r\n      \r\n      backgroundImage:\"url(/assets/images/nav_bg_img.png)\",\r\n      backgroundRepeat:\"no-repeat\",\r\n      backgroundSize:\"cover\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: \"hidden\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    listHeading:{\r\n      fontSize:\"1rem\",\r\n      paddingLeft:18,\r\n      color:\"white\",\r\n      fontWeight:700\r\n    }\r\n  }));","\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { enrolmentsList, examsList,userListItems } from \"./listItems\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport List from \"@material-ui/core/List\";\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { Link as RLLink  } from \"react-router-dom\";\r\nimport useStyles from \"./styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nexport default function Sidebar({handleDrawerClose,open,roles,handleDrawerOpen}) {\r\n\r\n    const classes = useStyles();\r\n    if(roles)\r\n    return (\r\n        <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n       { open? (<div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose} className={classes.menuButton}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>):(\r\n          <IconButton\r\n            edge=\"start\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        )}\r\n        <Divider />\r\n        <ListItem button  component={'/app/dashboard' && RLLink} to='/app/dashboard'>\r\n          <ListItemIcon>\r\n            <DashboardIcon className={classes.menuButton}/>\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Overview\" className={classes.menuButton}/>\r\n        </ListItem>\r\n       {\r\n         roles.ENROLLMENTS &&(<div>\r\n         <Divider />\r\n        <List>{enrolmentsList(roles.ENROLLMENTS,classes,open)}</List>\r\n         </div>\r\n         )}\r\n       {\r\n        roles.USER_ACCESS &&(<div>\r\n         <Divider />\r\n        <List>{userListItems(roles.USER_ACCESS,classes,open)}</List>\r\n         </div>\r\n         )}\r\n       {\r\n         roles.EXAMS_LISTING &&(<div>\r\n         <Divider />\r\n        <List>{examsList(roles.EXAMS_LISTING,classes,open)}</List>\r\n         </div>\r\n         )}\r\n        {roles.ADMIN_SETTINGS&&(<ListItem button  component={'/app/settings' && RLLink} to='/app/settings'>\r\n          <ListItemIcon>\r\n            <SettingsIcon className={classes.menuButton}/>\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Settings\"className={classes.menuButton}/>\r\n        </ListItem>)}\r\n      </Drawer>\r\n    )\r\n    else return (\r\n      <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={true}\r\n    >\r\n    \r\n    </Drawer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const userListItems = (roles,classes,open) => (\r\n  <div>\r\n      {open && (\r\n    <ListSubheader inset className={classes.listHeading}>User Access</ListSubheader>\r\n        )}\r\n\r\n    {roles.ALL_USERS && (\r\n      <ListItem button to=\"/app/users\" component={\"/app/users\" && Link}>\r\n        <ListItemIcon>\r\n        <PeopleIcon className={classes.menuButton}/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Users\" className={classes.menuButton}/>\r\n      </ListItem>\r\n    )}\r\n    {roles.INTERVIEWS && (\r\n      <ListItem\r\n        button\r\n        component={\"/app/interviews\" && Link}\r\n        to=\"/app/interviews\"\r\n      >\r\n        <ListItemIcon>\r\n          <BookIcon className={classes.menuButton}/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Interviews\" className={classes.menuButton}/>\r\n      </ListItem>\r\n    )}\r\n\r\n    {/* <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reports\" />\r\n    </ListItem> */}\r\n  </div>\r\n);\r\n\r\nexport const enrolmentsList = (roles,classes,open) => (\r\n  <div>\r\n    {open && (\r\n      <ListSubheader inset className={classes.listHeading}>Enrollments</ListSubheader>\r\n    )}\r\n    {roles.ALL_STUDENTS && (\r\n      <ListItem button component={\"/app/students\" && Link} to=\"/app/students\">\r\n        <ListItemIcon>\r\n          <SchoolIcon className={classes.menuButton}/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Students\" className={classes.menuButton}/>\r\n      </ListItem>\r\n    )}\r\n    {roles.ADVERTISEMENTS && (\r\n      <ListItem button component={\"/app/ad\" && Link} to=\"/app/ad\">\r\n        <ListItemIcon>\r\n          <DeveloperBoardIcon className={classes.menuButton}/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Ad manager\" className={classes.menuButton}/>\r\n      </ListItem>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport const examsList = (roles,classes,open) => (\r\n  <div>\r\n  {open && (\r\n    <ListSubheader inset className={classes.listHeading}>Exams List</ListSubheader>\r\n    )}\r\n\r\n    {roles.ALL_EXAMS && (\r\n      <ListItem button component={\"/app/exams\" && Link} to=\"/app/exams\">\r\n        <ListItemIcon>\r\n          <AssignmentIcon className={classes.menuButton}/>\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Exams\" className={classes.menuButton}/>\r\n      </ListItem>\r\n    )}\r\n  </div>\r\n);\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nconst drawerWidth = 240;\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      scrollbarWidth:1,\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer - 1,\r\n      border: 0,\r\n  \r\n      backgroundColor: '#1a73e8',\r\n      // backgroundColor: theme.palette.primary,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n      color:\"white\"\r\n    },\r\n    menuButtonHidden: {\r\n      display: \"none\",\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      color: \"white\",\r\n    },\r\n    drawerPaper: {\r\n      position: \"relative\",\r\n      whiteSpace: \"nowrap\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: \"hidden\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: \"100vh\",\r\n      overflow: \"auto\",\r\n      padding:0\r\n    },\r\n    container: {\r\n      padding:0,\r\n      paddingBottom: theme.spacing(4),\r\n      backgroundColor:\"white\"\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      overflow: \"auto\",\r\n      flexDirection: \"column\",\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n  }));","import React, { useEffect, useState } from 'react';\r\nimport { AppBar, Box, Container, CssBaseline, Typography } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport clsx from 'clsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getRoles, logout } from '../../actions/userActions';\r\nimport SimpleLoading from '../../components/loading/SimpleLoading';\r\nimport HeaderProfileMenu from '../../components/widgets/HeaderProfileMenu';\r\nimport clearStorage from '../../services/clearStorage';\r\nimport Routing from './Routing';\r\nimport Sidebar from './Sidebar';\r\nimport useStyles from './styles';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant='body2' color='textSecondary' align='center'>\r\n            {'Copyright © '}\r\n            <Link color='inherit' to='/app/dashboard'>\r\n                BestEnlist admin\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction Dashboard(props) {\r\n    const dispatch = useDispatch();\r\n    const userRole = useSelector((state) => state.userRole);\r\n    const { roles } = userRole;\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(true);\r\n    const [showProgress, setShowProgress] = useState(true);\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //redirect back to login page if request is unauthorised\r\n    useEffect(() => {\r\n        if (status === 401) dispatch(logout(props.history));\r\n    }, [status]);\r\n\r\n    const logoutClicked = () => {\r\n        clearStorage();\r\n        dispatch(logout(props.history));\r\n    };\r\n    // TODO\r\n    useEffect(() => {\r\n        dispatch(getRoles(setShowProgress, setStatus));\r\n    }, []);\r\n    if (showProgress) return <SimpleLoading/>;\r\n    else\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position='absolute'\r\n                    elevation={0}\r\n                    className={clsx(\r\n                        classes.appBar,\r\n                        open && classes.appBarShift\r\n                    )}\r\n                    // style={{backgroundColor:\"#1976d2\"}}\r\n                >\r\n                    <Toolbar className={classes.toolbar}>\r\n                        {/* <IconButton\r\n            edge=\"start\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n                        <Typography\r\n                            component='h1'\r\n                            variant='h6'\r\n                            noWrap\r\n                            className={classes.title}\r\n                            style={\r\n                                open\r\n                                    ? { marginLeft: '20px' }\r\n                                    : { marginLeft: '70px' }\r\n                            }\r\n                        >\r\n                            BestEnlist Admin\r\n                        </Typography>\r\n                        {/* <IconButton style={{color:\"white\"}}>\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton> */}\r\n                        <HeaderProfileMenu logoutClicked={logoutClicked} />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Sidebar\r\n                    handleDrawerClose={handleDrawerClose}\r\n                    handleDrawerOpen={handleDrawerOpen}\r\n                    open={open}\r\n                    roles={roles}\r\n                />\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth='xl' className={classes.container}>\r\n                        <Routing />\r\n                        <Box pt={4}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        );\r\n}\r\nexport default withRouter(Dashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useFormik } from \"formik\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AdornedButton from \"../../components/buttons/AdornedButton\";\r\n\r\nimport * as yup from \"yup\";\r\n\r\nimport {updatePassword} from '../../services/authService'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    height:\"32px\"\r\n  },\r\n}));\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link to=\"/\">\r\n        BestEnlist portal\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nexport default function ResetPassword(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [st, setSt] = useState(0);\r\n\r\n  const classes = useStyles();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      pass: \"\",\r\n      pass2: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n        pass: yup\r\n        .string()\r\n        .required(\"Password must contain at least 8 characters, one uppercase, one number and one special case character\")\r\n        .matches(\r\n          /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n          \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n        ),\r\n      pass2: yup\r\n        .string()\r\n        .required(\"This feild is required\")\r\n        .oneOf([yup.ref(\"pass\"), null], \"Password mismatch\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n        setLoading(true);\r\n        setSt(0)\r\n        updatePassword(props.match.params.token,values.pass).then((val)=>setSt(val))\r\n    },\r\n  });\r\nuseEffect(() => {\r\n\r\n    console.log(props.match.params.token);\r\n    if(st===200)\r\n        props.history.replace(\"/\")\r\n    if(st>0){\r\n    setLoading(false)\r\n    formik.values.pass=\"\"\r\n    formik.values.pass2=\"\"\r\n}\r\n\r\n}, [st])\r\n  const goToSignup = () => {\r\n    props.history.push(\"/signup\");\r\n  };\r\n  const goToLogin = () => {\r\n    props.history.push(\"/signin\");\r\n  };\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      {/* <SimpleHeader goToLogin={goToLogin} goToSignup={goToSignup} loc=\"pr\" /> */}\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Password reset\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n              {(st!==0&&st!==200)&&(<Alert severity=\"error\">Password reset failed</Alert>)}\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            autoFocus\r\n            onChange={formik.handleChange}\r\n            value={formik.values.pass}\r\n            name=\"pass\"\r\n            label=\"Password\"\r\n            type={passwordShown ? \"text\" : \"password\"}\r\n            helperText={formik.errors.pass}\r\n            id=\"password\"\r\n            error={formik.touched.pass && formik.errors.pass }\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={togglePasswordVisiblity}\r\n                  >\r\n                    {passwordShown ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            type={passwordShown ? \"text\" : \"password\"}\r\n            fullWidth\r\n            error={formik.touched.pass2 && formik.errors.pass2 }\r\n            onChange={formik.handleChange}\r\n            value={formik.values.pass2}\r\n            helperText={formik.errors.pass2}\r\n            id=\"pass2\"\r\n            label=\"Confirm pasword\"\r\n            name=\"pass2\"\r\n          />\r\n       <AdornedButton\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading}\r\n              color={loading ? \"secondary\" : \"primary\"}\r\n              // disabled={loading}\r\n              loading={loading}\r\n              className={classes.submit}\r\n            >\r\n              Reset\r\n            </AdornedButton>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"./services/authService\";\r\nimport { Dashboard, Signin, NotFound, Reset } from \"./pages\";\r\n\r\nfunction App() {\r\n  const isAuthenticated = isLoggedIn();\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        \r\n        <Route path=\"/app/reset/:token\" component={Reset} />\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\r\n\r\n        {/* <PrivateRoute authed={isLoggedIn()} path=\"/app\" component={Dashboard} /> */}\r\n        {/* <Route path=\"/login\" \r\n        render={(props)=> isLoggedIn()===false?\r\n         <Signin /> :\r\n          <Redirect to='/app/dashboard'/>} /> */}\r\n        <Route exact path=\"/app/login\" component={Signin} />\r\n        <Route path=\"/app\" component={Dashboard} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n  // return <Router />;\r\n}\r\nfunction PrivateRoute({ component: Component, authed, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authed === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/app/login\",\r\n              state: {\r\n                from: props.location,\r\n              },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const TOGGLE_SIDEBAR=\"TOGGLE_SIDEBAR\";","import {\r\n  GET_ALL_EXAMS,\r\n  GET_EXAM_DETAIL,\r\n  GET_EXAM_FAIL,\r\n  GET_EXAM_INSTRUCTIONS,\r\n  GET_EXAM_QUESTIONS,\r\n  GET_EXAM_SUCCESS,\r\n  GET_EXAM_REQUEST,\r\n  PUBLISH_EXAM_FAIL,\r\n  PUBLISH_EXAM_REQUEST,\r\n  PUBLISH_EXAM_SUCCESS,\r\n} from \"../constants/examConstants\";\r\n\r\nconst details = {\r\n  title: \"\",\r\n  startDate: \"\",\r\n  endDate: \"\",\r\n  startTime: \"\",\r\n  endTime: \"\",\r\n  duration: 20,\r\n};\r\nconst instructions = [\r\n  \"Do not switch between tabs or windows when the test is on progress.\",\r\n  \"Exam will be automatically submitted at the end of test duration.\"\r\n];\r\n\r\nfunction allExamsReducer(state = {loading:true,data:[]}, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_EXAMS:\r\n      return {loading:false,data:action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction examReducer(state = { loading:true,details:{},questions:[],instructions:[] }, action) {\r\n  switch (action.type) {\r\n    case GET_EXAM_REQUEST:\r\n      return { loading: true, details:{},questions:[],instructions:[] };\r\n    case GET_EXAM_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        details: action.details,\r\n        questions: action.questions,\r\n        instructions: action.instructions,\r\n      };\r\n    case GET_EXAM_FAIL:\r\n      return { loading: false, details:{},questions:[],instructions:[] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction examMarkListReducer(state={},action){\r\n  switch (action.type){\r\n    default:\r\n       return state\r\n  }\r\n}\r\nfunction publishExamReducer(\r\n  state = { details: details, instructions: instructions, questions: [],counts:{} },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case PUBLISH_EXAM_REQUEST:\r\n      return {\r\n        loading: true,\r\n        questions: action.questions,\r\n        instructions: action.instructions,\r\n        details: action.details,\r\n        counts:action.counts\r\n      };\r\n    case PUBLISH_EXAM_SUCCESS:\r\n      return { loading: false, status: action.payload,complete:true };\r\n    case PUBLISH_EXAM_FAIL:\r\n      return { ...state, loading: false, status: action.payload };\r\n    case GET_EXAM_DETAIL:\r\n      return { ...state, details: action.details };\r\n    case GET_EXAM_INSTRUCTIONS:\r\n      return { ...state, instructions: action.instructions };\r\n    case GET_EXAM_QUESTIONS:\r\n      return { ...state, questions: action.questions, counts:action.counts };\r\n    case \"RESET_PUBLISH_EXAM\":\r\n      return { details: details, instructions: instructions, questions: [],counts:{} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { allExamsReducer, publishExamReducer, examReducer };\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport Cookie from 'js-cookie';\r\n\r\nimport {\r\n    userSigninReducer,\r\n    userRegisterReducer,\r\n    userUpdateReducer,\r\n    userProfileReducer,\r\n    userRolesReducer,\r\n    allUsersReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport { sidebarReducer } from './reducers/layoutReducers';\r\nimport { adsReducer } from './reducers/adReducers';\r\nimport { interviewReducer } from './reducers/interviewReducer';\r\nimport { selectedStudentsReducer } from './reducers/studentReducer';\r\nimport {allExamsReducer,publishExamReducer,examReducer} from './reducers/examReducers'\r\n\r\nconst userInfo = Cookie.getJSON('userInfo') || null;\r\n\r\nconst initialState = { userSignin: { userInfo } };\r\nconst reducer = combineReducers({\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    userProfile: userProfileReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userRole: userRolesReducer,\r\n    sidebar: sidebarReducer,\r\n    allUsers: allUsersReducer,\r\n    allExams:allExamsReducer,\r\n    publishExam:publishExamReducer,\r\n    exam:examReducer,\r\n    selectedStudents:selectedStudentsReducer,\r\n    ads:adsReducer,\r\n    interviews: interviewReducer\r\n});\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import {\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNIN_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    ADD_PROFILE_DATA,\r\n    USER_VERFIY_RESEND,\r\n    ADD_PROFILE_REG_DATA,\r\n    ADD_PROFILE_REG_ADDRESS_DATA,\r\n    ADD_PROFILE_REG_RES_ADDRESS_DATA,\r\n    ADD_PROFILE_REG_SCHOOL_DATA,\r\n    USER_UPDATE_FAIL,\r\n    USER_PASSWORD_RESET_REQUEST,\r\n    USER_PASSWORD_RESET_SUCCESS,\r\n    USER_PASSWORD_RESET_COMPLETE,\r\n    USER_PASSWORD_RESET_FAIL,\r\n    USER_ROLES_REQUEST,\r\n    USER_ROLES_SUCCESS,\r\n    USER_ROLES_FAIL,\r\n} from '../constants/userConstants';\r\n\r\nfunction userSigninReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case USER_SIGNIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGNIN_SUCCESS:\r\n            return { loading: false ,signed:true};\r\n        case USER_SIGNIN_FAIL:\r\n            return {\r\n                loading: false,\r\n            };\r\n        case USER_PASSWORD_RESET_REQUEST:\r\n            return { ploading: true };\r\n        case USER_PASSWORD_RESET_SUCCESS:\r\n            return { ploading: false };\r\n        case USER_PASSWORD_RESET_FAIL:\r\n            return { ploading: false };\r\n        case USER_PASSWORD_RESET_COMPLETE:\r\n            return { ploading: true };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nfunction userRolesReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case USER_ROLES_REQUEST:\r\n            return { loading: true, status: 0 };\r\n        case USER_ROLES_SUCCESS:\r\n            return { loading: false, roles: action.payload };\r\n        case USER_ROLES_FAIL:\r\n            return {\r\n                loading: false,\r\n                status: action.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction userUpdateReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction userRegisterReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction userProfileReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst allUsersInitialState = {};\r\n\r\nfunction allUsersReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case 'ADD_ALL_USERS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userSigninReducer,\r\n    userRegisterReducer,\r\n    userUpdateReducer,\r\n    userProfileReducer,\r\n    userRolesReducer,\r\n    allUsersReducer,\r\n};\r\n","import {TOGGLE_SIDEBAR} from '../constants/layoutConstants';\r\n\r\nfunction sidebarReducer(state={ isSidebarOpened: false},action){\r\n    switch (action.type) {\r\n        case TOGGLE_SIDEBAR:\r\n            console.log( !state.isSidebarOpened ,\"state\")\r\n            return { ...state, isSidebarOpened: !state.isSidebarOpened };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport {sidebarReducer}","import {SET_SELECTED_STUDENTS,RESET_SELECTED_STUDENTS} from '../constants/studentConstants.js';\r\n\r\nfunction selectedStudentsReducer(state={selected:[]},action){\r\n    switch (action.type) {\r\n        case SET_SELECTED_STUDENTS:\r\n            return {selected:action.payload};\r\n        case RESET_SELECTED_STUDENTS:\r\n            return {selected:[]};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport {selectedStudentsReducer}","import { GET_ALL_ADS_FAIL, GET_ALL_ADS_REQUEST, GET_ALL_ADS_SUCCESS } from '../constants/adConstants';\r\n\r\nfunction adsReducer(state = { loading: true, data: [] }, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_ADS_REQUEST:\r\n      return { loading: true, data: [] };\r\n    case GET_ALL_ADS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        data: action.payload\r\n      };\r\n    case GET_ALL_ADS_FAIL:\r\n      return { loading: false, data: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { adsReducer }","import { GET_ALL_INTERVIEWS_FAIL,GET_ALL_INTERVIEWS_REQUEST,GET_ALL_INTERVIEWS_SUCCESS } from '../constants/interviewConstants';\r\n\r\nfunction interviewReducer(state = { loading: true, data: [] }, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_INTERVIEWS_REQUEST:\r\n      return { loading: true, data: [] };\r\n    case GET_ALL_INTERVIEWS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        data: action.payload\r\n      };\r\n    case GET_ALL_INTERVIEWS_FAIL:\r\n      return { loading: false, data: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { interviewReducer }","import tinycolor from \"tinycolor2\";\r\n\r\nconst primary = \"#536DFE\";\r\nconst secondary = \"#FF5C93\";\r\nconst warning = \"#FFC260\";\r\nconst success = \"#3CD4A0\";\r\nconst info = \"#9013FE\";\r\nconst nav = \"#061F35\";\r\n\r\nconst lightenRate = 7.5;\r\nconst darkenRate = 15;\r\n\r\nexport default {\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: tinycolor(primary)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(primary)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n        nav:nav,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: tinycolor(secondary)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(secondary)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: tinycolor(warning)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(warning)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: tinycolor(success)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(success)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: tinycolor(info)\r\n        .lighten(lightenRate)\r\n        .toHexString(),\r\n      dark: tinycolor(info)\r\n        .darken(darkenRate)\r\n        .toHexString(),\r\n    },\r\n    text: {\r\n      primary: \"#4A4A4A\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n    },\r\n    background: {\r\n      default: \"white\",\r\n      light: \"#F3F5FF\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n  overrides: {\r\n    MuiBackdrop: {\r\n      root: {\r\n        backgroundColor: \"#4A4A4A1A\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      paper: {\r\n        boxShadow:\r\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n      },\r\n    },\r\n    MuiSelect: {\r\n      icon: {\r\n        color: \"#B9B9B9\",\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&$selected\": {\r\n          backgroundColor: \"#F3F5FF !important\",\r\n          \"&:focus\": {\r\n            backgroundColor: \"#F3F5FF\",\r\n          },\r\n        },\r\n      },\r\n      button: {\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: \"#F3F5FF\",\r\n        },\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        height: 56,\r\n        '&.Mui-selected': {\r\n          backgroundColor: \"#adbaff\"\r\n        },\r\n        '&.Mui-selected:hover': {\r\n          backgroundColor: \"#adbaff\"\r\n        }\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\r\n      },\r\n      head: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n      body: {\r\n        fontSize: \"0.95rem\",\r\n      },\r\n    },\r\n  },\r\n};","import defaultTheme from \"./default\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default {\r\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport Themes from \"./themes\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={Themes.default}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}